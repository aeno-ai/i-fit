%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: 2206.q713.011.F.m012.c7.people top view flat.eps
%%Creator: Adobe Illustrator(R) 24.0
%%For:  
%%CreationDate: 01.07.2022
%%BoundingBox: 0 0 2000 2000
%%HiResBoundingBox: 0 0 2000 2000
%%CropBox: 0 0 2000 2000
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 24.0.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 24.0.1 x341 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c148 79.164050, 2019/10/01-18:03:16        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">миаоугс</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator 24.0 (Macintosh)</xmp:CreatorTool>
         <xmp:CreateDate>2022-07-01T02:35:19+04:00</xmp:CreateDate>
         <xmp:ModifyDate>2022-07-01T02:35:19+04:00</xmp:ModifyDate>
         <xmp:MetadataDate>2022-07-01T02:35:19+04:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYqpm4txMITKgmO4i5Dke/2euKqmKuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KoTV9VsdI0q71S/kEVlZRPPcSHskaljQdz&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:OriginalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:0f6a51e2-ad59-4b97-9fd2-a82abcf898fb</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:0f6a51e2-ad59-4b97-9fd2-a82abcf898fb</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:2a7c0fd1-7de6-da4a-bd08-ca04a257aff8</stRef:instanceID>
            <stRef:documentID>xmp.did:a4b071a9-19d0-4876-a025-48ff939e2284</stRef:documentID>
            <stRef:originalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:d058fa9a-846e-416c-b86e-eecf4e6822f2</stEvt:instanceID>
                  <stEvt:when>2021-11-02T10:11:07+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator 24.0 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0f6a51e2-ad59-4b97-9fd2-a82abcf898fb</stEvt:instanceID>
                  <stEvt:when>2022-07-01T02:35:19+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator 24.0 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Web</illustrator:StartupProfile>
         <illustrator:CreatorSubTool>Adobe Illustrator</illustrator:CreatorSubTool>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>2000.000000</stDim:w>
            <stDim:h>2000.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -2000 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 2000 li
2000 2000 li
2000 0 li
cp
clp
2000 2000 mo
0 2000 li
0 0 li
2000 0 li
2000 2000 li
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
1606.33 892.33 mo
1606.33 892.33 1608.22 908.783 1606.33 921.568 cv
1604.45 934.354 1603.63 970.929 1619.53 969.909 cv
1635.42 968.891 1639.9 949.432 1640.36 941.129 cv
1640.82 932.826 1638.17 885.656 1638.17 885.656 cv
1606.33 892.33 li
.27451 .443137 .52549 rgb
f
1521.63 875.061 mo
1521.63 875.061 1509.27 896.508 1507.45 911.648 cv
1505.62 926.79 1502.74 952.033 1515.66 952.337 cv
1528.58 952.641 1534.06 946.035 1538.5 933.36 cv
1542.95 920.685 1541.55 905.354 1550.47 887.399 cv
1521.63 875.061 li
cp
f
1474.96 792.337 mo
1474.75 794.171 1483.61 818.712 1494.82 839.099 cv
1506.8 860.85 1511.37 878.455 1515.96 885.544 cv
1523.68 897.464 1544.88 902.438 1550.47 887.399 cv
1569.97 864.163 li
1573.7 864.382 1577.24 864.459 1580.47 864.314 cv
1583.82 864.164 1586.83 864.074 1589.52 864.007 cv
1593.26 871.49 1601.75 887.643 1601.75 887.643 cv
1601.75 887.643 1605.36 896.863 1612.7 901.855 cv
1620.04 906.846 1627.68 900.734 1632.77 896.659 cv
1637.86 892.584 1652.48 873.787 1665.63 851.577 cv
1678.77 829.367 1693.64 787.393 1693.64 787.393 cv
1474.96 792.337 li
.65098 .788235 .898039 rgb
f
1495.69 837.206 mo
1495.08 837.206 1494.51 836.837 1494.28 836.236 cv
1493.97 835.454 1494.36 834.573 1495.14 834.269 cv
1499.43 832.603 1503.29 829.889 1506.31 826.418 cv
1506.61 826.072 1507.03 825.895 1507.45 825.895 cv
1507.81 825.895 1508.16 826.018 1508.45 826.268 cv
1509.08 826.818 1509.15 827.778 1508.6 828.411 cv
1505.26 832.253 1500.99 835.258 1496.24 837.102 cv
1496.06 837.172 1495.88 837.206 1495.69 837.206 cv
.521569 .631373 .717647 rgb
f
1672.34 819.784 mo
1670.36 819.784 1668.37 819.593 1666.41 819.212 cv
1665.58 819.051 1665.05 818.253 1665.21 817.43 cv
1665.35 816.703 1665.99 816.2 1666.7 816.2 cv
1666.79 816.2 1666.89 816.209 1666.99 816.228 cv
1668.76 816.573 1670.55 816.745 1672.34 816.745 cv
1673.66 816.745 1674.97 816.653 1676.28 816.467 cv
1676.35 816.457 1676.42 816.453 1676.49 816.453 cv
1677.23 816.453 1677.89 816.999 1678 817.759 cv
1678.11 818.589 1677.54 819.358 1676.71 819.476 cv
1675.25 819.682 1673.8 819.784 1672.34 819.784 cv
f
1744.62 767.879 mo
1744.62 767.879 1746.19 782.346 1742.81 790.032 cv
1739.44 797.719 1738.8 810.903 1739.09 814.092 cv
1739.38 817.281 1739.6 832.07 1741.97 834.037 cv
1744.34 836.003 1750.78 831.203 1750.78 831.203 cv
1750.78 831.203 1759.31 837.123 1763.83 834.229 cv
1768.36 831.336 1773.81 822.427 1774.95 819.258 cv
1776.09 816.09 1776.09 816.09 1776.09 816.09 cv
1776.09 816.09 1782.12 813.559 1781.47 810.82 cv
1780.81 808.081 1776.14 792.547 1775.32 789.124 cv
1774.5 785.7 1770.23 759.936 1770.23 759.936 cv
1744.62 767.879 li
cp
.929412 .623529 .501961 rgb
f
1755.04 817.178 mo
1754.59 817.567 1752.95 819.276 1752.47 824.108 cv
1753.73 823.386 1755.57 822.818 1757.93 822.24 cv
1757.91 821.656 1757.61 820.614 1757.47 820.123 cv
1757.39 819.827 1757.31 819.558 1757.26 819.333 cv
1757.17 818.97 1756.85 818.24 1756.32 817.716 cv
1755.82 817.229 1755.39 817.147 1755.04 817.178 cv
cp
1750.77 832.973 mo
1749.87 832.973 1749.1 832.288 1749.01 831.373 cv
1747.66 817.301 1752.97 814.222 1753.58 813.917 cv
1753.7 813.857 1753.82 813.811 1753.96 813.78 cv
1755.72 813.357 1757.45 813.858 1758.8 815.195 cv
1759.87 816.246 1760.48 817.596 1760.7 818.509 cv
1760.75 818.694 1760.81 818.915 1760.88 819.158 cv
1761.3 820.663 1761.89 822.723 1761 824.236 cv
1760.6 824.927 1759.96 825.394 1759.15 825.586 cv
1755.39 826.486 1754.26 827.076 1753.93 827.374 cv
1753.65 828.011 1753.03 828.421 1752.36 828.444 cv
1752.39 829.251 1752.45 830.113 1752.54 831.033 cv
1752.63 832.005 1751.92 832.871 1750.95 832.964 cv
1750.77 832.973 li
cp
.721569 .470588 .396078 rgb
f
1426.36 789.335 mo
1426.36 789.335 1428.74 803.689 1434.06 810.182 cv
1439.39 816.675 1443.55 829.201 1444.13 832.349 cv
1444.71 835.499 1448.48 849.8 1446.73 852.333 cv
1444.98 854.864 1437.49 851.976 1437.49 851.976 cv
1437.49 851.976 1430.86 859.975 1425.73 858.408 cv
1420.59 856.84 1412.94 849.729 1410.99 846.985 cv
1409.04 844.24 1409.04 844.24 1409.04 844.24 cv
1409.04 844.24 1402.54 843.428 1402.44 840.613 cv
1402.33 837.799 1402.64 821.581 1402.51 818.064 cv
1402.38 814.546 1399.55 788.583 1399.55 788.583 cv
1426.36 789.335 li
.929412 .623529 .501961 rgb
f
1429.97 845.239 mo
1431.58 845.239 1432.9 845.336 1433.94 845.599 cv
1432.21 841.166 1430.21 839.917 1429.59 839.624 cv
1428.11 839.938 1428.04 842.267 1428.04 842.292 cv
1428.05 842.522 1428.05 842.801 1428.05 843.108 cv
1428.05 843.619 1428.05 844.703 1428.18 845.271 cv
1428.81 845.251 1429.41 845.239 1429.97 845.239 cv
cp
1437.48 853.746 mo
1436.64 853.746 1435.9 853.144 1435.74 852.287 cv
1435.58 851.377 1435.4 850.532 1435.22 849.746 cv
1434.56 849.907 1433.85 849.676 1433.42 849.137 cv
1433.02 848.941 1431.76 848.678 1427.91 848.823 cv
1427.08 848.854 1426.34 848.578 1425.76 848.021 cv
1424.5 846.802 1424.51 844.661 1424.51 843.097 cv
1424.51 842.844 1424.51 842.614 1424.51 842.424 cv
1424.41 839.864 1425.97 836.195 1429.73 836.053 cv
1429.86 836.048 1430 836.058 1430.13 836.083 cv
1430.8 836.213 1436.75 837.748 1439.23 851.666 cv
1439.4 852.627 1438.76 853.547 1437.8 853.718 cv
1437.69 853.737 1437.59 853.746 1437.48 853.746 cv
cp
.721569 .470588 .396078 rgb
f
1419.48 514.668 mo
1419.48 514.668 1396.06 521.057 1387.7 541.768 cv
1367.52 591.74 1385.48 724.615 1389.61 756.401 cv
1393.74 788.187 1400.84 795.242 1400.84 795.242 cv
1400.84 795.242 1417.5 806.142 1425.9 799.418 cv
1434.31 792.694 1438.05 771.529 1438.13 764.576 cv
1438.21 757.623 1448.14 724.614 1454.79 702.379 cv
1419.48 514.668 li
.85098 .454902 .258824 rgb
f
1710.85 498.771 mo
1710.85 498.771 1745.7 506.819 1759.55 536.669 cv
1773.41 566.519 1775.68 701.333 1776.32 733.379 cv
1776.96 765.426 1773.75 774.872 1773.75 774.872 cv
1773.75 774.872 1756.13 786.714 1746.82 781.314 cv
1737.51 775.913 1730.66 755.54 1729.56 748.675 cv
1728.45 741.81 1713.72 710.644 1703.84 689.644 cv
1710.85 498.771 li
f
1494.26 484.919 mo
1419.48 514.668 li
1419.48 514.668 1436.91 650.268 1442.1 670.338 cv
1447.3 690.408 1452.8 724.436 1453.61 742.162 cv
1454.43 759.889 1463.84 787.663 1476.23 797.584 cv
1489.02 807.823 1491.92 823.461 1532.57 825.192 cv
1575.06 827.002 1638.93 837.009 1666.44 810.826 cv
1675.94 801.785 1690.18 793.506 1699.65 783.42 cv
1709.13 773.334 1704.75 754.283 1703.32 742.057 cv
1701.89 729.831 1710.85 498.771 1710.85 498.771 cv
1611.12 477.48 li
1494.26 484.919 li
f
1515.11 565.452 mo
1516.83 567.576 1518.68 569.601 1520.65 571.509 cv
1533.78 584.203 1552.64 591.257 1570.7 588.604 cv
1591.47 585.553 1608.91 570.369 1619.58 552.299 cv
1630.25 534.229 1635.14 513.402 1639.36 492.843 cv
1639.01 496.032 1605.17 506.671 1600.03 507.967 cv
1583.71 512.081 1567.09 516.399 1550.1 515.646 cv
1540.77 515.231 1508 505.624 1500.79 512.016 cv
1497.91 514.562 1497.82 518.964 1498.19 522.787 cv
1499.7 538.229 1505.38 553.44 1515.11 565.452 cv
cp
.929412 .901961 .745098 rgb
f
1526.9 799.98 mo
1526.75 799.98 1526.6 799.958 1526.46 799.914 cv
1492.96 789.783 li
1491.52 789.348 1489.89 788.855 1488.46 787.905 cv
1487.3 787.135 1486.39 786.159 1485.49 785.143 cv
1480.23 779.217 1475.65 772.774 1471.79 765.899 cv
1471.45 762.969 1471.1 760.055 1470.73 757.179 cv
1475.13 766.612 1480.85 775.328 1487.76 783.126 cv
1488.53 783.986 1489.28 784.805 1490.14 785.374 cv
1491.2 786.076 1492.54 786.482 1493.84 786.874 cv
1527.34 797.005 li
1528.14 797.248 1528.59 798.096 1528.35 798.9 cv
1528.15 799.556 1527.55 799.98 1526.9 799.98 cv
.682353 .364706 .207843 rgb
f
1653.3 775.067 mo
1652.93 775.067 1652.55 774.929 1652.25 774.649 cv
1651.65 774.071 1651.62 773.11 1652.2 772.501 cv
1661.77 762.429 1670.93 751.748 1679.43 740.755 cv
1679.73 740.367 1680.18 740.165 1680.63 740.165 cv
1680.96 740.165 1681.28 740.268 1681.56 740.482 cv
1682.23 740.995 1682.35 741.95 1681.83 742.613 cv
1673.27 753.688 1664.04 764.448 1654.4 774.594 cv
1654.1 774.909 1653.7 775.067 1653.3 775.067 cv
f
1631.69 804.625 mo
1631.04 804.625 1630.43 804.198 1630.24 803.537 cv
1630 802.733 1630.46 801.887 1631.26 801.648 cv
1652.29 795.416 li
1652.43 795.374 1652.57 795.354 1652.71 795.354 cv
1653.37 795.354 1653.98 795.779 1654.17 796.441 cv
1654.41 797.246 1653.95 798.091 1653.15 798.33 cv
1632.13 804.563 li
1631.98 804.605 1631.84 804.625 1631.69 804.625 cv
f
1453.49 698.882 mo
1452.64 698.06 1451.77 697.281 1450.89 696.54 cv
1451.04 695.796 1451.17 695.053 1451.27 694.316 cv
1451.88 689.781 1451.4 684.969 1450.94 680.317 cv
1450.27 673.557 1449.58 666.566 1452.11 660.027 cv
1452.34 659.425 1452.92 659.055 1453.53 659.055 cv
1453.71 659.055 1453.9 659.088 1454.08 659.159 cv
1454.86 659.461 1455.25 660.342 1454.95 661.124 cv
1452.68 666.987 1453.3 673.317 1453.97 680.018 cv
1454.44 684.844 1454.94 689.835 1454.28 694.722 cv
1454.09 696.126 1453.8 697.516 1453.49 698.882 cv
f
1704.82 687.074 mo
1704.61 687.074 1704.41 687.032 1704.23 686.957 cv
1704.71 670.791 1705.3 652.389 1705.94 633.572 cv
1706.12 633.495 1706.32 633.453 1706.53 633.453 cv
1706.58 633.453 1706.64 633.456 1706.69 633.461 cv
1707.52 633.547 1708.13 634.293 1708.05 635.128 cv
1706.33 651.803 1705.76 668.752 1706.34 685.502 cv
1706.37 686.34 1705.71 687.044 1704.87 687.073 cv
1704.82 687.074 li
f
1704.23 686.957 mo
1703.7 686.734 1703.32 686.219 1703.3 685.606 cv
1702.72 668.718 1703.3 651.63 1705.02 634.818 cv
1705.08 634.247 1705.45 633.781 1705.94 633.572 cv
1705.3 652.389 1704.71 670.791 1704.23 686.957 cv
f
1576.2 435.103 mo
1561 430.296 1544.97 430.811 1528.53 431.681 cv
1516.88 432.298 1502.79 432.953 1494.07 423.421 cv
1489.1 417.978 1487.11 409.89 1480.99 405.776 cv
1476.65 419.772 1469.94 433.029 1461.22 444.806 cv
1459.63 446.948 1457.63 449.231 1454.97 449.318 cv
1452.27 449.406 1450.01 447.08 1449.09 444.539 cv
1448.18 441.997 1448.26 439.228 1448 436.54 cv
1447.92 435.631 1447.78 434.688 1447.26 433.938 cv
1445.23 431.013 1442.34 430.333 1440.67 426.71 cv
1439.5 424.16 1438.98 420.773 1438.87 417.977 cv
1438.59 410.591 1441.1 402.277 1444.36 395.749 cv
1445.66 393.138 1447.22 390.544 1447.51 387.639 cv
1447.79 384.734 1446.28 381.384 1443.43 380.751 cv
1442.65 380.579 1441.86 380.621 1441.06 380.663 cv
1440.44 380.695 1439.83 380.727 1439.22 380.662 cv
1435.06 380.217 1432.73 375.556 1432.24 371.402 cv
1430.54 357.037 1441.16 344.582 1447.39 331.525 cv
1452.06 321.721 1454.36 310.969 1458.31 300.851 cv
1462.25 290.732 1468.35 280.781 1478 275.802 cv
1485.66 271.849 1494.38 271.538 1502.61 269.533 cv
1510.08 267.713 1515.86 263.604 1522.77 260.507 cv
1529.93 257.301 1537.93 255.088 1545.59 256.77 cv
1549.34 257.592 1553.23 259.321 1556.84 258.021 cv
1558.31 257.495 1559.55 256.51 1560.89 255.724 cv
1566.89 252.214 1574.52 252.878 1581.09 255.121 cv
1591.33 258.611 1599.95 265.612 1610.72 267.293 cv
1616.25 268.154 1621.83 268.119 1627.41 268.085 cv
1632.76 268.052 1638.12 268.018 1643.43 268.775 cv
1656.41 270.627 1649.84 279.055 1654.64 287.047 cv
1659.49 295.101 1667.46 299.31 1670.51 309.14 cv
1672.01 313.971 1672.34 319.073 1673.06 324.081 cv
1674.27 332.562 1676.64 340.878 1680.06 348.731 cv
1682.29 353.853 1685.03 358.978 1685.21 364.563 cv
1685.4 370.148 1681.98 376.371 1676.43 377.032 cv
1675.75 377.113 1674.96 377.159 1674.56 377.712 cv
1674.2 378.192 1674.3 378.856 1674.44 379.436 cv
1675.86 385.437 1680.12 390.964 1679.36 397.085 cv
1678.86 401.071 1676.28 404.487 1675.22 408.363 cv
1672.91 416.86 1678.21 425.531 1678.45 434.334 cv
1678.74 444.969 1671.19 454.825 1661.52 459.265 cv
1651.85 463.705 1640.54 463.384 1630.28 460.546 cv
1620.03 457.707 1610.6 452.528 1601.28 447.394 cv
1597.03 445.054 1592.79 442.714 1588.54 440.373 cv
1584.49 438.146 1580.38 436.423 1576.2 435.103 cv
.360784 .164706 .109804 rgb
f
1639.29 312.308 mo
1618.34 288.017 1596.42 279.622 1560.11 280.745 cv
1523.79 281.868 1502.75 292.61 1483.88 317.861 cv
1464.69 343.533 1468.45 385.053 1472.57 415.76 cv
1476.69 446.467 1478.2 475.012 1489.1 499.342 cv
1499.99 523.673 1510.68 532.046 1521.66 540.324 cv
1532.72 548.666 1551.01 558.723 1568.69 558.176 cv
1586.37 557.629 1599.83 548.326 1609.77 539.63 cv
1621.23 529.607 1634.63 517.267 1643.96 490.815 cv
1653.28 464.365 1653.62 440.995 1655.83 410.092 cv
1658.04 379.189 1662.51 339.247 1639.29 312.308 cv
.929412 .623529 .501961 rgb
f
1567.87 498.747 mo
1562.87 498.747 1557.76 497.632 1552.55 495.402 cv
1551.65 495.018 1551.24 493.977 1551.62 493.079 cv
1552.01 492.18 1553.04 491.763 1553.94 492.148 cv
1564.19 496.537 1573.62 496.253 1582.79 491.28 cv
1583.65 490.814 1584.72 491.133 1585.19 491.992 cv
1585.65 492.851 1585.33 493.925 1584.47 494.392 cv
1579.13 497.294 1573.58 498.747 1567.87 498.747 cv
cp
.721569 .470588 .396078 rgb
f
1563.07 276.106 mo
1533.58 277.018 1502.96 284.908 1484.11 309.23 cv
1461.33 338.626 1461.27 377.645 1462.69 412.782 cv
1462.81 415.629 1463.57 419.255 1466.37 419.73 cv
1471.38 420.578 1476.58 413.332 1478.57 409.546 cv
1481.25 404.442 1482.44 399.021 1481.63 393.289 cv
1480.83 387.588 1479.2 381.586 1481.37 376.251 cv
1480.78 380.447 1485.87 383.726 1489.99 382.739 cv
1494.11 381.752 1496.98 377.99 1498.72 374.128 cv
1500.46 370.267 1501.44 366.052 1503.62 362.426 cv
1508.52 354.3 1518.24 350.795 1526.63 346.36 cv
1535.3 341.778 1541.61 333.502 1550.43 329.722 cv
1558.68 326.192 1567.58 330.312 1572.36 337.651 cv
1574.75 341.305 1575.78 345.785 1578.57 349.131 cv
1582.98 354.393 1590.56 355.542 1597.42 355.595 cv
1597.91 355.599 1598.41 355.597 1598.87 355.418 cv
1599.53 355.159 1599.99 354.564 1600.36 353.958 cv
1603.13 349.392 1601.37 342.687 1596.71 340.074 cv
1601.9 340.063 1605.82 344.989 1610.89 346.098 cv
1613.57 346.684 1617.2 345.238 1616.96 342.508 cv
1619.13 345.387 1623.1 345.301 1626.88 345.214 cv
1627.73 345.195 1628.56 345.175 1629.37 345.189 cv
1640.8 345.381 1652.05 355.297 1655.68 365.751 cv
1657.12 369.89 1656.9 374.389 1657.01 378.77 cv
1657.16 384.641 1654.43 404.388 1655.83 410.092 cv
1656.63 413.378 1659.29 409.608 1662.4 408.271 cv
1673.29 403.592 1665.02 371.487 1663.47 362.751 cv
1661.05 349.085 1657.43 335.464 1651.38 322.924 cv
1641.23 301.893 1624.08 286.482 1601.47 280.111 cv
1589.03 276.605 1575.95 275.708 1563.07 276.106 cv
.360784 .164706 .109804 rgb
f
1570.18 474.985 mo
1566.26 474.985 1560.66 473.051 1558.13 465.537 cv
1556.65 461.16 1556.24 452.011 1556.9 438.346 cv
1557.39 428.284 1558.3 419.335 1558.31 419.246 cv
1558.41 418.273 1559.27 417.567 1560.25 417.666 cv
1561.22 417.766 1561.93 418.635 1561.83 419.608 cv
1561.82 419.696 1560.92 428.555 1560.44 438.517 cv
1559.64 454.987 1560.56 461.687 1561.48 464.407 cv
1564.25 472.625 1570.93 471.454 1571.68 471.294 cv
1572.62 471.091 1573.57 471.693 1573.78 472.645 cv
1573.99 473.596 1573.39 474.535 1572.44 474.749 cv
1571.8 474.894 1571.03 474.985 1570.18 474.985 cv
cp
.721569 .470588 .396078 rgb
f
1601.74 425.779 mo
1601.97 433.265 1605.53 439.228 1609.69 439.099 cv
1613.85 438.971 1617.04 432.799 1616.8 425.313 cv
1616.57 417.828 1613.01 411.864 1608.85 411.993 cv
1604.7 412.121 1601.51 418.294 1601.74 425.779 cv
cp
.0941176 .0627451 .0588235 rgb
f
1515.6 428.443 mo
1515.83 435.929 1519.39 441.892 1523.55 441.764 cv
1527.71 441.635 1530.89 435.463 1530.66 427.978 cv
1530.43 420.493 1526.87 414.528 1522.71 414.657 cv
1518.55 414.786 1515.37 420.958 1515.6 428.443 cv
cp
f
1536.71 390.043 mo
1539.55 392.929 1538.28 399.946 1533.39 400.299 cv
1528.42 400.657 1521.33 400.434 1512.64 402.462 cv
1504.22 404.426 1494.78 409.256 1490.81 408.219 cv
1487.31 407.303 1486.35 403.343 1492.06 398.851 cv
1497.38 394.664 1504.55 390.999 1513.19 389.292 cv
1521.83 387.586 1533.88 387.158 1536.71 390.043 cv
cp
.360784 .164706 .109804 rgb
f
1589.67 389.125 mo
1587.09 392.232 1588.92 399.123 1593.82 399.074 cv
1598.8 399.025 1605.85 398.224 1614.68 399.536 cv
1623.23 400.806 1633.04 404.848 1636.9 403.491 cv
1640.33 402.291 1640.95 398.266 1634.9 394.255 cv
1629.26 390.517 1621.81 387.45 1613.06 386.455 cv
1604.31 385.459 1592.26 386.018 1589.67 389.125 cv
cp
f
1478.87 420.262 mo
1469.62 409.655 1449.85 421.903 1453.22 442.261 cv
1456.6 462.617 1476.15 482.665 1487.93 482.22 cv
1499.72 481.774 1491.33 434.557 1478.87 420.262 cv
cp
.929412 .623529 .501961 rgb
f
1470.59 456.142 mo
1470.05 456.142 1469.52 455.897 1469.17 455.435 cv
1463.27 447.57 1464.31 437.103 1464.36 436.661 cv
1464.47 435.689 1465.34 434.985 1466.31 435.09 cv
1467.28 435.195 1467.98 436.066 1467.88 437.037 cv
1467.87 437.131 1466.95 446.58 1472 453.309 cv
1472.59 454.09 1472.43 455.2 1471.65 455.787 cv
1471.33 456.026 1470.96 456.142 1470.59 456.142 cv
cp
.721569 .470588 .396078 rgb
f
1645.52 415.108 mo
1654.1 403.95 1674.59 414.953 1672.48 435.479 cv
1670.37 456.005 1652.1 477.223 1640.31 477.507 cv
1628.52 477.791 1633.97 430.146 1645.52 415.108 cv
cp
.929412 .623529 .501961 rgb
f
1654.27 450 mo
1653.87 450 1653.46 449.863 1653.13 449.583 cv
1652.38 448.953 1652.29 447.837 1652.92 447.09 cv
1652.98 447.018 1659.03 439.703 1658.61 431.298 cv
1658.56 430.322 1659.31 429.491 1660.29 429.442 cv
1661.24 429.386 1662.09 430.144 1662.14 431.121 cv
1662.64 440.943 1655.91 449.032 1655.63 449.372 cv
1655.28 449.786 1654.78 450 1654.27 450 cv
cp
.721569 .470588 .396078 rgb
f
1523.53 327.971 mo
1522.77 327.971 1522.12 327.413 1522.02 326.647 cv
1521.91 325.815 1522.5 325.053 1523.33 324.944 cv
1528.38 324.287 1533.21 322.168 1537.88 320.119 cv
1539.73 319.308 1541.63 318.469 1543.17 317.248 cv
1544.76 315.976 1545.99 314.28 1547.29 312.485 cv
1548 311.504 1548.73 310.49 1549.54 309.534 cv
1553.86 304.431 1560.41 301.149 1567.08 300.755 cv
1567.12 300.753 1567.15 300.752 1567.18 300.752 cv
1567.99 300.752 1568.64 301.377 1568.69 302.182 cv
1568.74 303.019 1568.1 303.739 1567.26 303.788 cv
1561.41 304.135 1555.65 307.016 1551.86 311.496 cv
1551.13 312.365 1550.46 313.288 1549.75 314.266 cv
1548.39 316.147 1546.98 318.094 1545.06 319.624 cv
1543.22 321.092 1541.12 322.012 1539.1 322.901 cv
1534.24 325.037 1529.21 327.245 1523.72 327.958 cv
1523.53 327.971 li
.290196 .133333 .0862745 rgb
f
1472.88 385.819 mo
1472.1 385.819 1471.44 385.225 1471.37 384.435 cv
1470.17 371 1475.75 357.163 1485.94 348.326 cv
1486.23 348.077 1486.59 347.955 1486.94 347.955 cv
1487.36 347.955 1487.79 348.133 1488.09 348.479 cv
1488.64 349.113 1488.57 350.073 1487.93 350.623 cv
1478.47 358.832 1473.28 371.684 1474.4 384.165 cv
1474.47 385.001 1473.85 385.739 1473.02 385.813 cv
1472.88 385.819 li
f
1470.4 329.846 mo
1469.66 329.846 1469.01 329.302 1468.9 328.546 cv
1468.78 327.715 1469.35 326.944 1470.18 326.823 cv
1471.34 326.654 1472.54 326.48 1473.75 326.278 cv
1473.23 327.372 1472.74 328.477 1472.27 329.587 cv
1471.71 329.671 1471.16 329.752 1470.62 329.83 cv
1470.4 329.846 li
f
1472.27 329.587 mo
1472.74 328.477 1473.23 327.372 1473.75 326.278 cv
1478.33 325.509 1483.07 324.332 1486.73 321.449 cv
1487.94 320.502 1489.01 319.39 1490.14 318.212 cv
1490.54 317.795 1490.94 317.377 1491.35 316.966 cv
1497.31 310.975 1504.17 307.076 1511.21 305.694 cv
1511.31 305.674 1511.4 305.665 1511.5 305.665 cv
1512.21 305.665 1512.85 306.166 1512.99 306.892 cv
1513.15 307.715 1512.62 308.513 1511.79 308.675 cv
1503.66 310.274 1497.36 315.232 1493.51 319.109 cv
1493.11 319.507 1492.72 319.912 1492.33 320.318 cv
1491.18 321.519 1489.98 322.761 1488.61 323.839 cv
1483.84 327.585 1477.62 328.782 1472.27 329.587 cv
f
1513.32 283.194 mo
1513.31 283.194 li
1512.47 283.194 1511.79 282.522 1511.79 281.687 cv
1511.78 280.847 1512.45 280.162 1513.29 280.155 cv
1519.6 280.106 1526.02 278.835 1531.86 276.479 cv
1532.38 276.271 1532.89 276.054 1533.41 275.837 cv
1535.24 275.064 1537.14 274.264 1539.18 273.832 cv
1540.73 273.505 1542.3 273.407 1543.79 273.407 cv
1544.59 273.407 1545.36 273.436 1546.08 273.471 cv
1551.65 273.75 1557.15 274.64 1562.51 276.124 cv
1558.61 276.256 1554.69 276.512 1550.78 276.912 cv
1549.17 276.723 1547.55 276.588 1545.93 276.507 cv
1545.22 276.471 1544.49 276.445 1543.76 276.445 cv
1542.45 276.445 1541.11 276.53 1539.81 276.806 cv
1538.05 277.178 1536.37 277.886 1534.59 278.637 cv
1534.06 278.86 1533.53 279.084 1533 279.298 cv
1526.72 281.83 1520.09 283.141 1513.32 283.194 cv
f
1566.54 280.485 mo
1566.37 280.485 1566.21 280.458 1566.04 280.401 cv
1561.09 278.69 1555.97 277.522 1550.78 276.912 cv
1554.69 276.512 1558.61 276.256 1562.51 276.124 cv
1564.03 276.545 1565.54 277.013 1567.03 277.529 cv
1567.83 277.802 1568.25 278.667 1567.97 279.461 cv
1567.76 280.089 1567.17 280.485 1566.54 280.485 cv
f
1609.88 331.354 mo
1604.5 331.354 1599.32 330.512 1595.42 326.946 cv
1591.44 323.307 1590.08 317.824 1589.03 312.52 cv
1588.87 311.697 1589.4 310.898 1590.23 310.735 cv
1590.33 310.716 1590.42 310.707 1590.52 310.707 cv
1591.23 310.707 1591.87 311.206 1592.01 311.931 cv
1593 316.938 1594.16 321.683 1597.47 324.702 cv
1600.65 327.607 1605.16 328.314 1609.91 328.314 cv
1611.58 328.314 1613.27 328.228 1614.95 328.119 cv
1614.98 328.116 1615.02 328.115 1615.06 328.115 cv
1615.86 328.115 1616.51 328.736 1616.56 329.537 cv
1616.61 330.375 1615.98 331.097 1615.14 331.151 cv
1613.39 331.265 1611.62 331.354 1609.88 331.354 cv
f
1654.75 321.998 mo
1654.27 321.998 1653.8 321.772 1653.5 321.349 cv
1651.95 319.123 1649.91 317.186 1647.38 315.524 cv
1646.28 313.707 1645.13 311.939 1643.92 310.228 cv
1649.26 312.574 1653.25 315.68 1655.99 319.608 cv
1656.47 320.296 1656.31 321.243 1655.62 321.724 cv
1655.35 321.909 1655.05 321.998 1654.75 321.998 cv
f
1647.38 315.524 mo
1643.65 313.076 1638.83 311.224 1632.83 309.922 cv
1630.4 309.393 1627.87 308.954 1625.44 308.529 cv
1619.6 307.512 1613.56 306.461 1607.96 304.078 cv
1600.79 301.034 1592.26 294.001 1591.81 284.2 cv
1591.77 283.362 1592.42 282.651 1593.26 282.612 cv
1593.27 282.611 1593.28 282.611 1593.3 282.611 cv
1594.12 282.611 1594.81 283.235 1594.84 284.06 cv
1595.23 292.451 1602.79 298.581 1609.15 301.281 cv
1614.43 303.526 1620.29 304.548 1625.96 305.535 cv
1628.43 305.965 1630.98 306.41 1633.48 306.953 cv
1637.41 307.806 1640.88 308.894 1643.92 310.228 cv
1645.13 311.939 1646.28 313.707 1647.38 315.524 cv
f
1626.63 285.071 mo
1623.52 285.071 1620.41 284.71 1617.39 283.979 cv
1616.57 283.782 1616.07 282.961 1616.27 282.145 cv
1616.44 281.449 1617.07 280.982 1617.75 280.982 cv
1617.87 280.982 1617.98 280.996 1618.1 281.025 cv
1620.89 281.699 1623.76 282.033 1626.63 282.033 cv
1631.45 282.033 1636.27 281.09 1640.72 279.232 cv
1640.91 279.152 1641.11 279.114 1641.31 279.114 cv
1641.9 279.114 1642.47 279.466 1642.71 280.049 cv
1643.03 280.824 1642.67 281.714 1641.89 282.037 cv
1637.07 284.049 1631.85 285.071 1626.63 285.071 cv
f
1804.39 1275.96 mo
1814.99 1275.15 1822.17 1277.53 1824.64 1287.08 cv
1827.12 1296.62 1825.15 1353.82 1825.56 1372.6 cv
1825.96 1391.37 1825.2 1427.63 1824.68 1433.56 cv
1824.16 1439.48 1819.33 1457.84 1816.99 1461.73 cv
1814.64 1465.62 1808.78 1466.24 1801.02 1466.15 cv
1793.26 1466.07 1787.94 1463.87 1783.66 1459.35 cv
1772.02 1447.06 1775.49 1430.58 1775.91 1416.19 cv
1776.44 1398.25 1778.31 1347.33 1778.82 1334.34 cv
1779.33 1321.34 1782.64 1289.35 1785.13 1284.42 cv
1787.63 1279.49 1796.53 1276.57 1804.39 1275.96 cv
.666667 .341176 .262745 rgb
f
1806.17 1398.4 mo
1799.84 1398.4 1791.37 1397 1789.38 1395.06 cv
1786.2 1391.96 1788.53 1372.85 1790.29 1370.34 cv
1790.61 1369.89 1791.22 1369.02 1794.8 1369.02 cv
1796.35 1369.02 1798.47 1369.18 1801.36 1369.61 cv
1805.45 1370.22 1810.81 1371.4 1812.7 1372.37 cv
1813.69 1372.88 1814.4 1374.05 1814.95 1376.06 cv
1816.4 1381.43 1816.41 1393.16 1814.49 1396.17 cv
1813.79 1397.27 1812.25 1397.92 1809.66 1398.22 cv
1808.63 1398.34 1807.45 1398.4 1806.17 1398.4 cv
1794.48 1371.73 mo
1793.5 1371.73 1792.78 1371.81 1792.45 1371.97 cv
1790.98 1374.54 1789.59 1391.42 1791.26 1393.13 cv
1792.38 1394.22 1799.72 1395.71 1805.99 1395.71 cv
1806.88 1395.71 1807.74 1395.68 1808.57 1395.62 cv
1811.16 1395.41 1812.08 1394.9 1812.21 1394.72 cv
1814.07 1391.81 1813.47 1376.15 1811.45 1374.77 cv
1808.35 1373.17 1798.83 1371.73 1794.48 1371.73 cv
.533333 .27451 .211765 rgb
f
1775.4 1439.29 mo
1775.4 1439.29 1784.49 1437.96 1797.06 1437.15 cv
1808.26 1436.43 1822.67 1437.8 1824.19 1436.88 cv
1822.79 1444.55 1818.98 1458.41 1816.99 1461.73 cv
1814.64 1465.62 1808.78 1466.24 1801.02 1466.15 cv
1793.26 1466.07 1787.94 1463.87 1783.66 1459.35 cv
1781.59 1457.16 1775.7 1450.3 1775.4 1439.29 cv
cp
.501961 .192157 .14902 rgb
f
1743.14 1424.23 mo
1743.14 1424.23 1749.75 1438.55 1750.24 1459.03 cv
1750.69 1477.82 1746.21 1494.72 1737.09 1495.45 cv
1727.96 1496.18 1723.79 1490.83 1718.85 1479.23 cv
1716.38 1473.41 1713.04 1463.56 1711.04 1457 cv
1707.76 1446.22 1709.09 1431.71 1709.09 1431.71 cv
1743.14 1424.23 li
cp
.65098 .788235 .898039 rgb
f
1532.96 1429.26 mo
1532.96 1429.26 1516.49 1457.51 1516 1477.98 cv
1515.55 1496.77 1521.5 1508.21 1530.53 1508.93 cv
1539.55 1509.64 1543.68 1504.28 1548.56 1492.67 cv
1551.01 1486.86 1554.31 1476.99 1556.29 1470.43 cv
1559.53 1459.65 1561.3 1459.63 1561.9 1451.02 cv
1562.5 1442.42 1532.96 1429.26 1532.96 1429.26 cv
cp
f
1535.69 1241.75 mo
1590.86 1270.75 li
1620.63 1270.19 1670.66 1271.16 1694.78 1282.52 cv
1702.47 1286.14 1708.02 1291.11 1711.99 1296.66 cv
1771.62 1271.73 li
1771.62 1271.73 1758.45 1347.55 1755.54 1370.11 cv
1752.94 1390.18 1742.67 1429.12 1739.98 1432.28 cv
1738.76 1433.71 1734.22 1438.99 1728.42 1440.35 cv
1721.41 1441.99 1713.14 1437.99 1711.52 1436.37 cv
1708.03 1432.89 1698.07 1409.24 1691.03 1392.44 cv
1684.35 1376.49 1674.13 1358.07 1665.93 1338.1 cv
1627.78 1335.09 li
1627.78 1335.09 1563.96 1450.14 1558.27 1455.53 cv
1555.67 1457.99 1547.54 1459.44 1540.7 1457.08 cv
1532.6 1454.28 1529.97 1451.49 1528.11 1446.03 cv
1526.25 1440.57 1526.58 1429.02 1526.73 1417.23 cv
1526.89 1405.08 1527.17 1383.52 1527.82 1370.71 cv
1528.48 1357.9 1530.95 1331.45 1534.2 1297.41 cv
1537.46 1263.36 1535.69 1241.75 1535.69 1241.75 cv
.666667 .341176 .262745 rgb
f
1800.39 1282.15 mo
1800.39 1282.15 1799.36 1296.99 1794.58 1304.11 cv
1789.8 1311.24 1786.78 1324.39 1786.5 1327.65 cv
1786.21 1330.91 1783.77 1345.82 1785.8 1348.23 cv
1787.83 1350.63 1795.17 1346.96 1795.17 1346.96 cv
1795.17 1346.96 1802.69 1354.46 1807.76 1352.36 cv
1812.83 1350.27 1819.93 1342.29 1821.64 1339.31 cv
1823.36 1336.32 1823.36 1336.32 1823.36 1336.32 cv
1823.36 1336.32 1829.89 1334.87 1829.72 1331.99 cv
1829.55 1329.12 1827.66 1312.65 1827.45 1309.06 cv
1827.24 1305.47 1827.58 1278.78 1827.58 1278.78 cv
1800.39 1282.15 li
cp
.929412 .623529 .501961 rgb
f
1801.95 1333.45 mo
1801.41 1333.75 1799.29 1335.23 1797.88 1340.42 cv
1799.29 1339.84 1801.39 1339.58 1804.14 1339.41 cv
1804.26 1338.82 1804.13 1337.53 1804.08 1337.01 cv
1804.05 1336.7 1804.02 1336.42 1804.01 1336.18 cv
1803.98 1335.73 1803.52 1333.56 1801.95 1333.45 cv
cp
1798.98 1343.4 mo
1798.98 1343.4 li
1798.98 1343.4 li
cp
1795.17 1348.59 mo
1795.04 1348.59 li
1794.14 1348.52 1793.47 1347.73 1793.54 1346.83 cv
1794.71 1332.55 1800.5 1330.45 1801.15 1330.25 cv
1801.27 1330.22 1801.39 1330.2 1801.52 1330.19 cv
1805.23 1329.97 1807.12 1333.45 1807.26 1335.99 cv
1807.28 1336.19 1807.3 1336.43 1807.33 1336.69 cv
1807.48 1338.25 1807.69 1340.38 1806.58 1341.68 cv
1806.08 1342.27 1805.39 1342.6 1804.6 1342.65 cv
1800.5 1342.88 1799.26 1343.3 1798.9 1343.55 cv
1798.52 1344.16 1797.79 1344.44 1797.11 1344.26 cv
1796.98 1345.14 1796.88 1346.08 1796.79 1347.1 cv
1796.72 1347.95 1796.01 1348.59 1795.17 1348.59 cv
cp
.713726 .470588 .396078 rgb
f
1544.85 1252.13 mo
1544.85 1252.13 1543.42 1276.46 1545.24 1280.26 cv
1547.06 1284.05 1557.02 1288.62 1559.55 1294.56 cv
1562.09 1300.51 1561.65 1311.29 1559.34 1314.26 cv
1557.03 1317.24 1551.25 1317.51 1551.25 1317.51 cv
1551.25 1317.51 1555.49 1326.37 1553.18 1329.35 cv
1550.87 1332.32 1544.39 1329.4 1542.59 1326.95 cv
1542.59 1326.95 1538.69 1327.88 1535.97 1325.24 cv
1535.97 1325.24 1531.99 1327.98 1528.6 1325.87 cv
1525.2 1323.76 1511.84 1311.88 1510.61 1306.06 cv
1508.84 1297.64 1512.91 1280.93 1512.91 1280.93 cv
1508.34 1242.42 li
1544.85 1252.13 li
.929412 .623529 .501961 rgb
f
1550 1316.44 mo
1549.33 1316.44 1548.7 1316.02 1548.46 1315.36 cv
1544.14 1303.27 li
1543.84 1302.42 1544.28 1301.49 1545.13 1301.18 cv
1545.97 1300.88 1546.91 1301.32 1547.21 1302.17 cv
1551.53 1314.26 li
1551.83 1315.11 1551.39 1316.04 1550.54 1316.34 cv
1550.36 1316.41 1550.18 1316.44 1550 1316.44 cv
cp
.713726 .470588 .396078 rgb
f
1541.52 1325.05 mo
1540.81 1325.05 1540.16 1324.59 1539.95 1323.88 cv
1537.94 1316.97 li
1537.69 1316.11 1538.18 1315.2 1539.05 1314.95 cv
1539.91 1314.7 1540.82 1315.19 1541.07 1316.06 cv
1543.08 1322.96 li
1543.33 1323.83 1542.84 1324.73 1541.97 1324.98 cv
1541.82 1325.03 1541.67 1325.05 1541.52 1325.05 cv
cp
f
1530.9 1325.73 mo
1530.3 1325.73 1529.72 1325.4 1529.44 1324.83 cv
1525.12 1316.14 li
1524.71 1315.33 1525.04 1314.35 1525.85 1313.95 cv
1526.65 1313.56 1527.63 1313.88 1528.04 1314.69 cv
1532.36 1323.38 li
1532.76 1324.18 1532.43 1325.16 1531.62 1325.56 cv
1531.39 1325.68 1531.14 1325.73 1530.9 1325.73 cv
cp
f
1733.55 1064.72 mo
1733.55 1064.72 1782 1058.63 1798.38 1063.09 cv
1814.77 1067.56 1841.65 1091.74 1848.15 1128.71 cv
1854.66 1165.68 1838.58 1287.18 1838.58 1287.18 cv
1833.5 1291.92 1831.24 1298.38 1818.29 1297.05 cv
1814.45 1296.66 1810.57 1297.14 1806.79 1297.63 cv
1802.69 1298.15 1798.71 1298.68 1795.04 1298.08 cv
1784.53 1264.48 li
1784.53 1264.48 1776.49 1298.23 1758.09 1313 cv
1753.66 1316.56 1744.77 1315.3 1737.15 1314.05 cv
1731.47 1313.12 1726.5 1312.18 1724.63 1313.24 cv
1716.45 1317.87 1697.11 1333.25 1679.57 1331.19 cv
1665.28 1329.51 1651.51 1310.66 1651.51 1310.66 cv
1635.18 1327.84 li
1635.18 1327.84 1610.26 1320.24 1582.83 1305.97 cv
1547.8 1287.74 1537.48 1263.81 1537.48 1263.81 cv
1537.48 1263.81 1507.12 1274.21 1496.31 1262.89 cv
1485.5 1251.57 1464.23 1093.18 1485.8 1072.73 cv
1507.37 1052.28 1518.41 1047.36 1539.96 1045.51 cv
1561.51 1043.65 1647.02 1036.05 1647.02 1036.05 cv
1733.55 1064.72 li
.952941 .901961 .878431 rgb
f
1656.14 1091.4 mo
1675.35 1092.12 1693.92 1086.61 1712.83 1084.29 cv
1721.67 1083.2 1741.21 1062.91 1743.22 1071.53 cv
1745.68 1082.07 1742.61 1101.05 1736.1 1109.76 cv
1733.92 1112.68 1731.14 1115.11 1728.72 1117.85 cv
1713.01 1135.61 1713.3 1165.1 1694.08 1178.99 cv
1686.13 1184.74 1676.18 1186.79 1668.1 1192.28 cv
1666.31 1193.5 1654.37 1206.46 1651.94 1204.51 cv
1645.67 1199.47 1640.76 1194.18 1634.13 1189.5 cv
1625.99 1183.75 1618.21 1176.8 1614.63 1167.23 cv
1612.67 1161.98 1612.1 1156.29 1610.2 1151.02 cv
1605.56 1138.17 1593.62 1129.3 1587.49 1117.09 cv
1582.55 1107.28 1581.5 1095.71 1581.73 1084.87 cv
1581.82 1080.5 1583.09 1058.09 1578.99 1056.2 cv
1600.19 1065.94 1632.83 1090.53 1656.14 1091.4 cv
cp
.917647 .619608 .509804 rgb
f
1651.79 1308.44 mo
1651.6 1308.43 li
1650.58 1308.33 1649.83 1307.42 1649.93 1306.39 cv
1650.28 1302.8 1650.85 1299.11 1651.39 1295.54 cv
1652.45 1288.6 1653.54 1281.43 1653.18 1274.64 cv
1652.66 1264.76 1651.99 1253.3 1651.33 1242.22 cv
1650.68 1231.14 1650.01 1219.68 1649.48 1209.78 cv
1649.43 1208.75 1650.22 1207.87 1651.25 1207.82 cv
1651.35 1207.82 li
1652.34 1207.82 1653.16 1208.59 1653.21 1209.59 cv
1653.74 1219.47 1654.41 1230.92 1655.06 1242 cv
1655.72 1253.09 1656.39 1264.55 1656.91 1274.44 cv
1657.29 1281.61 1656.17 1288.98 1655.08 1296.1 cv
1654.55 1299.63 1653.99 1303.27 1653.65 1306.75 cv
1653.55 1307.72 1652.74 1308.44 1651.79 1308.44 cv
.760784 .721569 .701961 rgb
f
1539.01 1259.3 mo
1538.91 1259.3 1538.8 1259.29 1538.69 1259.27 cv
1537.68 1259.1 1536.99 1258.13 1537.17 1257.11 cv
1537.98 1252.42 1539.65 1247.89 1541.28 1243.51 cv
1543.69 1237.01 1545.96 1230.87 1545.51 1224.41 cv
1545.34 1221.98 1544.78 1219.61 1544.19 1217.09 cv
1543.75 1215.18 1543.28 1213.21 1543 1211.19 cv
1542.32 1206.29 1542.71 1201.39 1543.1 1196.66 cv
1546.17 1158.76 li
1546.25 1157.79 1547.06 1157.05 1548.03 1157.05 cv
1548.09 1157.05 1548.14 1157.05 1548.19 1157.05 cv
1549.22 1157.14 1549.98 1158.04 1549.9 1159.07 cv
1546.82 1196.96 li
1546.45 1201.49 1546.07 1206.18 1546.7 1210.67 cv
1546.96 1212.52 1547.38 1214.33 1547.83 1216.24 cv
1548.43 1218.79 1549.05 1221.42 1549.24 1224.15 cv
1549.75 1231.41 1547.22 1238.22 1544.78 1244.81 cv
1543.22 1249.03 1541.6 1253.39 1540.85 1257.75 cv
1540.69 1258.66 1539.91 1259.3 1539.01 1259.3 cv
f
1784.65 1259.88 mo
1784.23 1259.88 1783.8 1259.73 1783.45 1259.44 cv
1782.66 1258.78 1782.56 1257.6 1783.22 1256.81 cv
1787.75 1251.41 1789.83 1244.03 1788.78 1237.07 cv
1788.56 1235.6 1788.21 1234.16 1787.84 1232.63 cv
1787.44 1230.96 1787.02 1229.24 1786.78 1227.47 cv
1785.82 1220.34 1787.78 1213.42 1789.67 1206.73 cv
1790.56 1203.59 1791.47 1200.35 1792.06 1197.18 cv
1793.26 1190.63 1793.1 1183.74 1791.61 1177.25 cv
1791.38 1176.24 1792.01 1175.24 1793.01 1175.01 cv
1793.15 1174.98 1793.29 1174.96 1793.43 1174.96 cv
1794.28 1174.96 1795.05 1175.55 1795.25 1176.41 cv
1796.86 1183.39 1797.02 1190.81 1795.73 1197.86 cv
1795.12 1201.2 1794.18 1204.53 1793.27 1207.74 cv
1791.4 1214.36 1789.63 1220.61 1790.49 1226.97 cv
1790.7 1228.55 1791.08 1230.11 1791.47 1231.75 cv
1791.84 1233.29 1792.23 1234.88 1792.47 1236.51 cv
1793.68 1244.52 1791.29 1253.01 1786.08 1259.21 cv
1785.71 1259.65 1785.18 1259.88 1784.65 1259.88 cv
f
1809.2 1387.07 mo
1810 1369.56 1807.6 1339.97 1807.3 1337.19 cv
1807 1334.4 1806.04 1330.47 1802.78 1330.18 cv
1799.12 1329.87 1795.19 1335.92 1794.6 1340.42 cv
1794.01 1344.93 1793.16 1367.22 1794.77 1386.42 cv
1809.2 1387.07 li
cp
.501961 .192157 .14902 rgb
f
1697.68 877.577 mo
1697.78 877.571 1734.67 875.497 1763.14 910.163 cv
1783.73 935.235 1796.76 970.936 1789.69 1003.47 cv
1785.03 1024.94 1776.47 1063.82 1752.49 1071.5 cv
1747.83 1072.99 1742.87 1073.27 1737.98 1073.54 cv
1688.97 1076.24 1637.99 1078.58 1592.73 1059.6 cv
1571.07 1050.52 1560.24 1034.6 1562.08 1010.62 cv
1563.13 996.898 1573.75 985.959 1578.44 973.019 cv
1581.16 965.522 1581.84 957.462 1583.63 949.69 cv
1590.61 919.374 1617.81 892.67 1645.9 880.82 cv
1657.77 875.813 1670.81 873.322 1683.69 874.545 cv
1687.92 874.948 1693.64 877.806 1697.68 877.577 cv
.65098 .435294 .219608 rgb
f
1554.77 1030.98 mo
1561.44 1021.07 1560.06 1005.71 1567.18 995.236 cv
1571.88 988.321 1577.55 1000.57 1583.35 1005.01 cv
1595.48 1014.29 1603.21 1028.18 1609.07 1042.28 cv
1617.18 1061.84 1622.43 1080.02 1612.05 1100.3 cv
1605.58 1112.95 1594.67 1122.65 1584.01 1132.05 cv
1576.4 1138.75 1567.9 1145.83 1557.76 1146.09 cv
1544.43 1146.44 1535.26 1135.64 1523 1133.39 cv
1517.13 1132.31 1511.12 1132.67 1505.44 1134.54 cv
1504.19 1134.96 1491.53 1141.99 1492.24 1142.52 cv
1486.66 1138.37 1483.34 1131.72 1481.97 1124.9 cv
1480.6 1118.08 1481 1111.04 1481.65 1104.11 cv
1483.06 1089.37 1485.78 1074.28 1493.72 1061.77 cv
1496.13 1057.97 1499.06 1054.4 1502.86 1051.98 cv
1509.2 1047.96 1516.84 1047.7 1523.82 1045.46 cv
1527.06 1044.42 1529.74 1042.11 1532.76 1041.03 cv
1535.68 1039.99 1538.99 1040.32 1542.1 1039.53 cv
1548.25 1037.95 1552.14 1034.89 1554.77 1030.98 cv
f
1636.44 896.978 mo
1665.28 879.339 1689.7 883.438 1696.68 884.585 cv
1703.65 885.732 1728.1 889.67 1749.78 915.619 cv
1770.74 940.71 1773.44 972.145 1764.58 1011.03 cv
1755.73 1049.91 1742.67 1081.21 1723.45 1102.32 cv
1704.24 1123.42 1672.34 1134.58 1656.01 1131.89 cv
1639.67 1129.2 1613.54 1110.97 1603.4 1086.51 cv
1593.27 1062.05 1587.79 1022.29 1591.85 982.618 cv
1595.92 942.949 1608.54 914.035 1636.44 896.978 cv
.917647 .619608 .509804 rgb
f
1661.23 1133.77 mo
1659.28 1133.77 1657.45 1133.64 1655.76 1133.36 cv
1643.85 1131.4 1628.69 1122.19 1617.13 1109.89 cv
1616.57 1109.29 1616.6 1108.35 1617.2 1107.79 cv
1617.8 1107.23 1618.74 1107.25 1619.31 1107.85 cv
1630.27 1119.52 1645.12 1128.59 1656.25 1130.42 cv
1672.54 1133.09 1703.7 1121.81 1722.35 1101.31 cv
1722.91 1100.7 1723.85 1100.66 1724.46 1101.21 cv
1725.07 1101.77 1725.11 1102.71 1724.56 1103.32 cv
1707.17 1122.42 1679.09 1133.77 1661.23 1133.77 cv
cp
.713726 .470588 .396078 rgb
f
1644.59 1011.46 mo
1643.54 1017.86 1639.8 1022.58 1636.25 1021.99 cv
1632.69 1021.41 1630.66 1015.74 1631.71 1009.34 cv
1632.77 1002.94 1636.5 998.227 1640.06 998.811 cv
1643.62 999.396 1645.65 1005.06 1644.59 1011.46 cv
cp
.0862745 .0509804 .0431373 rgb
f
1718.26 1023.58 mo
1717.21 1029.98 1713.47 1034.69 1709.92 1034.11 cv
1706.36 1033.52 1704.33 1027.86 1705.38 1021.46 cv
1706.44 1015.06 1710.17 1010.34 1713.73 1010.93 cv
1717.29 1011.51 1719.32 1017.18 1718.26 1023.58 cv
cp
f
1670.74 1062.54 mo
1670.28 1062.54 1669.86 1062.5 1669.48 1062.45 cv
1668.67 1062.32 1668.11 1061.56 1668.23 1060.75 cv
1668.36 1059.94 1669.12 1059.38 1669.93 1059.5 cv
1670.59 1059.59 1676.46 1060.21 1678.36 1052.9 cv
1679.26 1049.44 1679.03 1041.68 1677.69 1030.45 cv
1676.67 1021.87 1675.35 1014.27 1675.33 1014.19 cv
1675.19 1013.38 1675.73 1012.61 1676.54 1012.47 cv
1677.34 1012.33 1678.13 1012.87 1678.27 1013.68 cv
1678.28 1013.75 1679.62 1021.43 1680.65 1030.1 cv
1682.05 1041.86 1682.25 1049.78 1681.24 1053.65 cv
1679.4 1060.74 1674.13 1062.54 1670.74 1062.54 cv
cp
.713726 .470588 .396078 rgb
f
1657.67 982.833 mo
1659.46 985.634 1657.85 990.455 1653.26 990.527 cv
1649.16 990.593 1638.99 987.592 1631.65 987.756 cv
1624.54 987.915 1616.5 990.498 1614.99 989.62 cv
1613.45 988.728 1615.1 985.524 1620.46 982.872 cv
1625.45 980.4 1630.27 977.294 1638.84 977.392 cv
1647.4 977.489 1655.88 980.031 1657.67 982.833 cv
cp
.65098 .435294 .219608 rgb
f
1701.54 990.094 mo
1699.07 992.314 1699.33 997.39 1703.73 998.688 cv
1707.66 999.847 1718.26 999.676 1725.29 1001.8 cv
1732.1 1003.85 1739.15 1008.5 1740.85 1008.05 cv
1742.57 1007.61 1741.83 1004.08 1737.39 1000.09 cv
1733.24 996.372 1728.91 992.369 1720.31 989.808 cv
1711.72 987.246 1704.02 987.874 1701.54 990.094 cv
cp
f
1598.43 997.529 mo
1592.33 986.97 1573.49 994.08 1572.95 1011.95 cv
1572.42 1029.81 1585.69 1050.12 1595.78 1051.7 cv
1605.88 1053.29 1606.63 1011.76 1598.43 997.529 cv
.917647 .619608 .509804 rgb
f
1751.79 1022.75 mo
1760.95 1014.7 1776.52 1027.47 1771.31 1044.57 cv
1766.09 1061.66 1747.01 1076.65 1736.95 1074.92 cv
1726.88 1073.19 1739.46 1033.61 1751.79 1022.75 cv
cp
f
1633.93 991.381 mo
1621.27 991.381 1614.23 997.184 1612.49 1008.98 cv
1610.77 1020.6 1620.09 1034.69 1636.69 1037.14 cv
1646.55 1038.6 1653.35 1035.14 1657.33 1031.98 cv
1662.33 1028 1665.71 1022.22 1666.62 1016.1 cv
1667.47 1010.29 1665.74 1004.99 1661.6 1000.77 cv
1657.21 996.308 1650.34 993.274 1641.71 992 cv
1638.92 991.588 1636.33 991.381 1633.93 991.381 cv
cp
1641.27 1039.98 mo
1639.71 1039.98 1638.06 1039.87 1636.33 1039.61 cv
1628 1038.38 1620.69 1034.28 1615.75 1028.06 cv
1611.14 1022.25 1609.05 1015.17 1610.02 1008.62 cv
1612.3 993.149 1623.09 986.729 1642.08 989.534 cv
1651.24 990.887 1658.61 994.169 1663.38 999.026 cv
1668.09 1003.82 1670.06 1009.85 1669.08 1016.47 cv
1668.09 1023.2 1664.37 1029.57 1658.88 1033.93 cv
1655.22 1036.84 1649.39 1039.98 1641.27 1039.98 cv
cp
1 1 1 rgb
f
1686.89 1019.1 mo
1685.09 1031.35 1693.03 1045.47 1709.46 1047.89 cv
1726.06 1050.34 1739.05 1039.55 1740.77 1027.93 cv
1742.84 1013.9 1735.3 1005.82 1717.7 1003.22 cv
1700.78 1000.72 1688.69 1006.96 1686.89 1019.1 cv
cp
1714.17 1050.74 mo
1712.49 1050.74 1710.8 1050.61 1709.09 1050.36 cv
1691.12 1047.71 1682.44 1032.2 1684.43 1018.73 cv
1686.44 1005.09 1699.65 998.036 1718.07 1000.76 cv
1737.05 1003.56 1745.52 1012.83 1743.24 1028.29 cv
1742.27 1034.84 1738.22 1041.02 1732.13 1045.25 cv
1726.94 1048.85 1720.7 1050.74 1714.17 1050.74 cv
cp
f
1687.27 1012.88 mo
1679.16 1006.15 1668.11 1010.03 1668 1010.07 cv
1667.14 1007.72 li
1667.65 1007.54 1679.63 1003.3 1688.86 1010.96 cv
1687.27 1012.88 li
cp
f
1636.02 895.819 mo
1644.5 890.398 1653.9 886.408 1663.73 884.204 cv
1686.06 879.196 1710.38 883.515 1729.5 896.084 cv
1750.73 910.035 1764.47 932.586 1777.5 954.389 cv
1782.68 963.047 1787.94 971.926 1789.89 981.822 cv
1796.07 1013.05 1775.94 1047.2 1797.15 1075.39 cv
1804.52 1085.18 1815.85 1093.24 1817.38 1105.4 cv
1818.19 1111.87 1815.97 1118.27 1814.49 1124.62 cv
1812.84 1131.72 1812.1 1139.04 1812.29 1146.33 cv
1812.43 1151.37 1812.99 1156.5 1811.68 1161.36 cv
1810.36 1166.22 1806.54 1170.85 1801.52 1171.24 cv
1797.22 1171.57 1793.29 1168.78 1790.37 1165.59 cv
1787.46 1162.41 1785.08 1158.68 1781.62 1156.1 cv
1774.65 1150.91 1765.14 1151.56 1756.58 1150.05 cv
1747.36 1148.41 1738.53 1143.84 1732.57 1136.62 cv
1720.8 1122.38 1726.83 1105.47 1730.15 1089.31 cv
1734.3 1069.16 1746.17 1051.22 1750.14 1031.03 cv
1755.4 1004.28 1746.06 976.371 1730.99 953.652 cv
1727.63 948.583 1723.82 943.554 1718.5 940.59 cv
1714.2 938.188 1709.23 937.327 1704.37 936.502 cv
1692.28 934.451 1679.23 932.527 1668.27 938.009 cv
1645.94 949.169 1644.37 984.215 1621.85 994.986 cv
1611.95 999.723 1599.73 998.287 1590.34 992.592 cv
1591.75 968.255 1595.88 943.264 1609 922.719 cv
1615.89 911.921 1625.22 902.712 1636.02 895.819 cv
.65098 .435294 .219608 rgb
f
1567.01 1114.7 mo
1566.8 1114.7 1566.58 1114.65 1566.37 1114.56 cv
1565.63 1114.2 1565.31 1113.31 1565.67 1112.57 cv
1570.52 1102.42 1573.64 1090.82 1576.84 1076.52 cv
1576.99 1075.83 1577.6 1075.36 1578.29 1075.36 cv
1578.4 1075.36 1578.51 1075.37 1578.62 1075.39 cv
1579.42 1075.57 1579.92 1076.37 1579.75 1077.17 cv
1576.5 1091.66 1573.33 1103.45 1568.36 1113.85 cv
1568.1 1114.39 1567.57 1114.7 1567.01 1114.7 cv
.521569 .34902 .176471 rgb
f
1587.13 1026.46 mo
1586.64 1026.46 1586.16 1026.22 1585.88 1025.77 cv
1585.67 1025.45 1580.83 1017.75 1582.37 1009.39 cv
1582.52 1008.58 1583.3 1008.04 1584.1 1008.2 cv
1584.91 1008.34 1585.45 1009.12 1585.3 1009.93 cv
1583.97 1017.15 1588.34 1024.1 1588.39 1024.17 cv
1588.83 1024.86 1588.63 1025.78 1587.94 1026.23 cv
1587.69 1026.39 1587.41 1026.46 1587.13 1026.46 cv
cp
.713726 .470588 .396078 rgb
f
1763.58 976.555 mo
1762.8 976.555 1762.14 975.943 1762.1 975.15 cv
1762.08 974.874 1760.36 947.344 1745.44 928.714 cv
1734.46 915.013 1715.68 913.249 1706.74 913.249 cv
1703.7 913.249 1701.8 913.452 1701.73 913.46 cv
1701.67 913.467 1701.62 913.47 1701.56 913.47 cv
1700.81 913.47 1700.17 912.912 1700.08 912.151 cv
1699.99 911.335 1700.57 910.595 1701.39 910.5 cv
1701.55 910.482 1703.63 910.249 1706.92 910.249 cv
1709.95 910.249 1714.02 910.447 1718.54 911.197 cv
1731.12 913.28 1741.23 918.693 1747.76 926.851 cv
1763.29 946.239 1765.01 973.818 1765.07 974.982 cv
1765.12 975.803 1764.49 976.507 1763.67 976.553 cv
1763.58 976.555 li
.521569 .34902 .176471 rgb
f
1696.56 894.077 mo
1696.37 894.077 1696.18 894.04 1695.99 893.961 cv
1695.82 893.892 1684.39 889.202 1671.3 889.202 cv
1665.34 889.202 1659.04 890.174 1653.31 892.996 cv
1653.09 893.1 1652.87 893.149 1652.65 893.149 cv
1652.1 893.149 1651.57 892.844 1651.31 892.317 cv
1650.95 891.579 1651.25 890.686 1651.99 890.322 cv
1658.27 887.233 1665.06 886.174 1671.42 886.174 cv
1684.89 886.174 1696.44 890.917 1697.14 891.212 cv
1697.9 891.53 1698.26 892.403 1697.94 893.161 cv
1697.7 893.732 1697.15 894.077 1696.56 894.077 cv
f
1590.41 991.408 mo
1590.39 991.21 1590.4 991.015 1590.45 990.833 cv
1590.44 991.023 1590.42 991.217 1590.41 991.408 cv
f
1591.89 992.703 mo
1591.16 992.703 1590.52 992.171 1590.42 991.432 cv
1590.41 991.424 1590.41 991.416 1590.41 991.408 cv
1590.42 991.217 1590.44 991.023 1590.45 990.833 cv
1590.59 990.274 1591.06 989.829 1591.67 989.739 cv
1624.53 984.861 1643.53 920.255 1643.72 919.603 cv
1643.91 918.95 1644.5 918.526 1645.15 918.526 cv
1645.29 918.526 1645.43 918.545 1645.56 918.584 cv
1646.35 918.813 1646.81 919.638 1646.58 920.429 cv
1646.53 920.596 1641.67 937.303 1632.66 954.405 cv
1620.43 977.627 1606.79 990.507 1592.11 992.686 cv
1591.89 992.703 li
f
1586.37 951.63 mo
1586.19 951.63 1586.02 951.599 1585.84 951.535 cv
1585.07 951.246 1584.68 950.386 1584.97 949.616 cv
1591.13 933.189 1605.63 922.478 1611.91 918.452 cv
1610.9 919.845 1609.93 921.267 1609 922.719 cv
1608.42 923.624 1607.86 924.538 1607.32 925.46 cv
1600.65 930.772 1592 939.368 1587.76 950.663 cv
1587.54 951.261 1586.97 951.63 1586.37 951.63 cv
f
1607.32 925.46 mo
1607.86 924.538 1608.42 923.624 1609 922.719 cv
1609.93 921.267 1610.9 919.845 1611.91 918.452 cv
1613.59 917.376 1614.68 916.777 1614.87 916.675 cv
1615.1 916.553 1615.34 916.496 1615.58 916.496 cv
1616.11 916.496 1616.62 916.779 1616.89 917.277 cv
1617.28 918.001 1617.01 918.905 1616.29 919.296 cv
1616.2 919.345 1612.31 921.482 1607.32 925.46 cv
f
1645.52 1071.75 mo
1644.36 1073.88 1653.9 1083.79 1663.05 1085.3 cv
1672.2 1086.8 1684.23 1080.84 1684.25 1078.25 cv
1684.27 1075.53 1674.11 1076.05 1665.11 1074.59 cv
1655.49 1073.03 1646.71 1069.58 1645.52 1071.75 cv
cp
.596078 .188235 .133333 rgb
f
1645.52 1071.75 mo
1646.71 1069.58 1655.49 1073.03 1665.11 1074.59 cv
1670.37 1075.44 1676.03 1075.62 1679.81 1076.16 cv
1682.51 1076.55 1684.25 1077.12 1684.25 1078.25 cv
1684.25 1078.51 1675.54 1080.68 1664.19 1078.82 cv
1655.17 1077.33 1645.44 1071.91 1645.52 1071.75 cv
cp
1 1 1 rgb
f
456.258 984.031 mo
456.258 984.031 450.952 1020.57 459.417 1039.18 cv
467.187 1056.26 479.644 1069.15 490.182 1065.21 cv
500.719 1061.26 503.029 1054.36 503.449 1041.47 cv
503.659 1035.01 503.054 1024.49 502.4 1017.6 cv
501.325 1006.28 493.464 982.3 493.464 982.3 cv
456.258 984.031 li
cp
.952941 .901961 .878431 rgb
f
462.978 1021.69 mo
464.661 1025.87 467.056 1029.87 470.485 1032.79 cv
473.914 1035.71 478.679 1037.35 483.022 1036.16 cv
487.384 1034.96 490.588 1031.19 492.647 1027.16 cv
497.832 1017.02 497.291 1005.02 496.476 993.667 cv
485.339 995.316 473.454 996.394 462.6 999.427 cv
460.448 1000.03 458.257 1002.35 458.257 1002.35 cv
458.257 1002.35 459.062 1011.97 462.978 1021.69 cv
cp
.917647 .619608 .509804 rgb
f
458.257 1002.35 mo
457.253 997.309 459.376 990.492 456.258 984.031 cv
452.237 975.7 424.146 943.643 419.877 923.945 cv
412.202 888.537 478.655 922.684 478.655 922.684 cv
496.475 993.667 li
458.257 1002.35 li
f
540.084 968.503 mo
540.084 968.503 558.126 1000.72 556.887 1021.12 cv
555.75 1039.85 548.738 1056.35 537.487 1056.45 cv
526.236 1056.54 521.607 1050.92 516.598 1039.04 cv
514.088 1033.08 510.884 1023.04 509.028 1016.38 cv
505.978 1005.42 504.726 980.214 504.726 980.214 cv
540.084 968.503 li
.952941 .901961 .878431 rgb
f
547.299 1006.07 mo
547.225 1010.58 546.42 1015.16 544.264 1019.12 cv
542.108 1023.07 538.248 1026.32 533.766 1026.76 cv
529.265 1027.2 524.921 1024.82 521.556 1021.8 cv
513.085 1014.2 509.292 1002.8 505.986 991.906 cv
516.974 989.456 528.457 986.206 539.677 985.15 cv
541.902 984.941 544.781 986.327 544.781 986.327 cv
544.781 986.327 547.474 995.594 547.299 1006.07 cv
.917647 .619608 .509804 rgb
f
544.781 986.327 mo
543.911 981.257 539.486 975.652 540.084 968.503 cv
540.855 959.285 555.599 919.293 552.53 899.373 cv
547.013 863.566 497.2 919.248 497.2 919.248 cv
505.986 991.906 li
544.781 986.327 li
f
583.553 765.971 mo
351.097 805.688 li
351.097 805.688 360.746 855.519 377.923 884.982 cv
395.099 914.445 419.698 947.835 439.601 955.866 cv
459.504 963.898 532.878 957.84 549.453 938.866 cv
566.027 919.892 589.761 863.827 591.731 834.217 cv
594.606 790.995 584.893 764.43 583.553 765.971 cv
.952941 .901961 .878431 rgb
f
613.976 726.861 mo
613.976 726.861 626.043 789.358 623.054 797.204 cv
620.065 805.049 620.086 818.249 620.535 821.419 cv
620.983 824.59 621.941 839.349 624.405 841.195 cv
626.869 843.042 633.061 837.926 633.061 837.926 cv
633.061 837.926 641.878 843.414 646.252 840.298 cv
650.627 837.183 655.631 828.013 656.61 824.792 cv
657.589 821.57 657.589 821.57 657.589 821.57 cv
657.589 821.57 660.644 816.771 660.384 813.967 cv
659.824 807.932 656.469 798.054 655.479 794.676 cv
654.49 791.297 658.246 720.335 658.246 720.335 cv
613.976 726.861 li
cp
.929412 .623529 .501961 rgb
f
636.616 823.709 mo
636.177 824.129 634.639 825.922 634.396 830.756 cv
635.618 829.973 637.428 829.314 639.76 828.618 cv
639.707 828.037 639.36 827.01 639.197 826.526 cv
639.098 826.235 639.01 825.97 638.944 825.748 cv
638.938 825.725 638.136 823.52 636.616 823.709 cv
cp
633.058 839.696 mo
632.195 839.696 631.439 839.063 631.31 838.184 cv
629.251 824.197 634.401 820.857 634.995 820.522 cv
635.113 820.457 635.237 820.404 635.367 820.366 cv
638.977 819.308 641.621 822.294 642.341 824.753 cv
642.395 824.936 642.469 825.154 642.55 825.395 cv
643.05 826.875 643.735 828.903 642.925 830.458 cv
642.555 831.168 641.941 831.667 641.148 831.898 cv
637.437 832.987 636.335 833.632 636.016 833.945 cv
635.775 834.595 635.178 835.036 634.505 835.092 cv
634.576 835.897 634.677 836.754 634.812 837.668 cv
634.954 838.636 634.285 839.535 633.318 839.677 cv
633.058 839.696 li
cp
.721569 .470588 .396078 rgb
f
133.72 708.4 mo
133.72 708.4 174.176 743.038 214.312 769.922 cv
254.448 796.806 300.186 812.921 300.186 812.921 cv
311.731 788.985 li
204.896 694.239 li
133.72 708.4 li
cp
.917647 .619608 .509804 rgb
f
360.296 545.764 mo
360.296 545.764 364.408 545.414 317.92 556.536 cv
271.432 567.658 181.272 625.867 171.302 631.56 cv
161.331 637.252 127.684 663.76 127.175 688.128 cv
126.742 708.893 140.819 723.412 157.402 723.471 cv
163.521 723.493 200.851 706.288 200.851 706.288 cv
200.851 706.288 218.279 711.885 225.089 710.51 cv
257.711 703.923 290.311 698.441 294.263 704.371 cv
297.725 709.566 301.087 726.238 310.226 745.459 cv
315.476 756.503 325.674 768.692 331.134 779.253 cv
332.452 781.803 334.756 780.946 336.001 783.347 cv
337.867 786.943 339.135 796.465 341.933 800.271 cv
344.597 803.895 351.097 805.688 351.097 805.688 cv
351.097 805.688 374.522 817.672 417.025 821.936 cv
459.527 826.2 507.67 817.98 536.957 803.626 cv
566.246 789.273 583.553 765.971 583.553 765.971 cv
583.553 765.971 588.947 760.773 591.367 753.928 cv
593.61 747.583 605.723 737.448 606.144 725.249 cv
606.813 705.826 610.127 682.034 613.735 677.84 cv
623.498 666.491 610.839 528.018 604.81 525.994 cv
598.779 523.971 564.872 518.513 544.202 517.81 cv
523.532 517.106 441.498 514.096 441.498 514.096 cv
360.296 545.764 li
.65098 .788235 .898039 rgb
f
360.097 601.749 mo
360.097 601.749 378.884 635.934 391.535 655.564 cv
404.926 676.342 424.417 688.238 448.065 683.857 cv
479.778 677.983 493.421 616.414 489.555 589.1 cv
485.688 561.787 360.097 601.749 360.097 601.749 cv
cp
.917647 .619608 .509804 rgb
f
604.81 525.994 mo
628.504 534.161 654.806 551.889 658.465 589.715 cv
662.124 627.542 658.246 720.335 658.246 720.335 cv
649.182 727.48 622.164 731.423 613.976 726.861 cv
594.025 648.527 li
604.81 525.994 li
.65098 .788235 .898039 rgb
f
607.08 701.072 mo
607.078 701.072 li
606.109 701.071 605.323 700.284 605.324 699.314 cv
605.326 697.157 605.321 694.998 605.31 692.836 cv
607.4 701.043 li
607.296 701.062 607.189 701.072 607.08 701.072 cv
.521569 .631373 .717647 rgb
f
607.4 701.043 mo
605.31 692.836 li
605.21 673.264 604.587 653.507 603.455 634.011 cv
603.399 633.043 604.138 632.212 605.106 632.156 cv
605.142 632.154 605.177 632.153 605.212 632.153 cv
606.141 632.153 606.907 632.875 606.961 633.808 cv
608.221 655.526 608.852 677.567 608.836 699.317 cv
608.835 700.177 608.216 700.892 607.4 701.043 cv
f
311.731 788.985 mo
311.731 788.985 314.882 789.677 316.22 789.179 cv
318.239 788.428 328.269 785.442 336.001 783.347 cv
336.001 783.347 338.708 791.409 342.136 795.346 cv
345.565 799.283 355.863 808.062 360.254 808.948 cv
364.644 809.834 382.501 813.153 383.456 814.669 cv
384.411 816.185 384.193 819.607 382.721 819.877 cv
381.248 820.147 377.812 820.777 377.812 820.777 cv
377.812 820.777 377.939 825.151 364.343 826.631 cv
364.343 826.631 359.477 835.133 356.395 834.007 cv
353.314 832.881 347.165 829.782 347.165 829.782 cv
347.165 829.782 346.47 832.446 344.06 832.212 cv
341.649 831.977 327.911 828.072 324.339 827.036 cv
320.767 826 313.947 822.009 311.147 819.648 cv
309.153 817.968 300.186 812.922 300.186 812.922 cv
311.731 788.985 li
.917647 .619608 .509804 rgb
f
377.814 821.899 mo
377.719 821.896 li
377.304 821.861 367.536 821.043 365.96 820.821 cv
364.363 820.595 355.436 817.367 353.662 816.722 cv
353.08 816.51 352.779 815.866 352.991 815.284 cv
353.203 814.702 353.848 814.401 354.429 814.613 cv
358.45 816.075 365.221 818.45 366.274 818.599 cv
367.788 818.813 377.805 819.651 377.906 819.659 cv
378.523 819.711 378.982 820.253 378.931 820.871 cv
378.882 821.457 378.391 821.899 377.814 821.899 cv
cp
.713726 .470588 .403922 rgb
f
364.344 827.752 mo
364.096 827.725 li
348.395 824.179 li
347.791 824.043 347.411 823.442 347.548 822.838 cv
347.685 822.232 348.286 821.851 348.889 821.991 cv
364.59 825.536 li
365.195 825.672 365.574 826.273 365.438 826.877 cv
365.32 827.399 364.857 827.752 364.344 827.752 cv
cp
f
347.165 830.904 mo
347.039 830.904 346.911 830.883 346.785 830.838 cv
339 828.038 li
338.417 827.829 338.114 827.186 338.324 826.603 cv
338.534 826.02 339.176 825.715 339.76 825.927 cv
347.545 828.727 li
348.128 828.936 348.431 829.579 348.221 830.162 cv
348.056 830.62 347.625 830.904 347.165 830.904 cv
cp
f
450.698 796.11 mo
450.449 796.11 450.196 796.057 449.956 795.945 cv
449.077 795.534 448.698 794.489 449.108 793.611 cv
449.242 793.323 462.59 764.553 469.211 733.738 cv
469.389 732.912 470.122 732.352 470.932 732.352 cv
471.052 732.352 471.174 732.364 471.296 732.39 cv
472.245 732.593 472.848 733.527 472.645 734.475 cv
465.937 765.691 452.425 794.806 452.289 795.097 cv
451.991 795.735 451.358 796.11 450.698 796.11 cv
.521569 .631373 .717647 rgb
f
571.265 776.707 mo
571.045 776.707 570.821 776.665 570.604 776.577 cv
569.707 776.212 569.274 775.188 569.639 774.29 cv
569.7 774.14 575.725 759.19 578.16 742.958 cv
578.291 742.087 579.034 741.462 579.892 741.462 cv
579.979 741.462 580.068 741.468 580.157 741.482 cv
581.116 741.625 581.777 742.52 581.633 743.478 cv
579.134 760.139 573.146 774.988 572.892 775.612 cv
572.615 776.293 571.958 776.707 571.265 776.707 cv
f
340.05 787.728 mo
339.253 787.728 338.531 787.181 338.341 786.372 cv
332.965 763.372 li
332.744 762.428 333.331 761.483 334.275 761.262 cv
334.409 761.231 334.543 761.216 334.675 761.216 cv
335.475 761.216 336.195 761.762 336.385 762.572 cv
341.761 785.572 li
341.982 786.516 341.395 787.461 340.451 787.682 cv
340.317 787.713 340.182 787.728 340.05 787.728 cv
f
297.725 706.841 mo
297.715 706.841 li
296.928 706.836 296.241 706.309 296.032 705.552 cv
288.358 677.677 li
288.1 676.742 288.649 675.775 289.584 675.518 cv
289.74 675.475 289.897 675.454 290.052 675.454 cv
290.823 675.454 291.528 675.965 291.743 676.744 cv
297.763 698.61 li
300.623 688.683 li
300.845 687.914 301.546 687.412 302.307 687.412 cv
302.468 687.412 302.633 687.434 302.796 687.482 cv
303.728 687.75 304.266 688.723 303.997 689.655 cv
299.412 705.571 li
299.196 706.323 298.507 706.841 297.725 706.841 cv
f
397.645 376.433 mo
407.127 375.288 416.73 375.163 426.238 376.12 cv
466.152 380.136 504.748 402.67 523.107 438.796 cv
532.452 457.184 537.78 477.389 541.02 497.759 cv
542.694 508.278 543.818 519.115 541.52 529.516 cv
538.676 542.39 530.858 553.516 523.215 564.258 cv
516.383 573.861 507.331 581.162 499.06 589.382 cv
476.568 611.734 433.836 611.692 404.531 614.005 cv
394.077 614.83 380.478 617.502 370.307 614.377 cv
344.589 606.476 320.676 586.917 307.582 563.578 cv
304.932 558.856 302.652 553.931 300.748 548.864 cv
285.953 509.479 294.426 463.861 315.846 428.565 cv
327.175 409.896 338.179 396.533 358.379 387.403 cv
370.806 381.786 384.103 378.069 397.645 376.433 cv
.788235 .4 .27451 rgb
f
340.638 413.346 mo
364.853 386.149 391.304 382.739 398.851 381.741 cv
406.398 380.743 432.826 377.158 463.278 397.125 cv
492.726 416.432 505.337 447.986 508.366 490.826 cv
511.397 533.666 507.719 570.011 494.517 597.772 cv
481.314 625.533 451.92 646.999 434.245 649.336 cv
416.57 651.674 383.939 641.049 365.845 619.01 cv
347.751 596.97 329.674 557.702 321.462 515.547 cv
313.25 473.393 317.223 439.645 340.638 413.346 cv
.917647 .619608 .509804 rgb
f
428.905 651.456 mo
415.19 651.456 397.556 645.786 383.095 636.466 cv
382.266 635.932 382.027 634.826 382.562 633.996 cv
383.096 633.167 384.203 632.927 385.032 633.462 cv
400.632 643.517 420.774 649.318 434.011 647.565 cv
446.117 645.963 466.47 634.074 481.945 614.448 cv
482.557 613.673 483.681 613.541 484.455 614.151 cv
485.23 614.762 485.363 615.886 484.752 616.661 cv
470.572 634.644 449.43 649.131 434.479 651.108 cv
432.714 651.341 430.848 651.456 428.905 651.456 cv
cp
.713726 .470588 .403922 rgb
f
386.94 530.525 mo
388.054 537.422 385.85 543.515 382.018 544.134 cv
378.186 544.752 374.176 539.663 373.063 532.765 cv
371.949 525.868 374.153 519.775 377.985 519.156 cv
381.818 518.538 385.827 523.628 386.94 530.525 cv
cp
.0862745 .0509804 .0431373 rgb
f
466.32 517.71 mo
467.434 524.608 465.23 530.7 461.398 531.319 cv
457.565 531.938 453.556 526.848 452.443 519.951 cv
451.329 513.054 453.534 506.96 457.366 506.342 cv
461.198 505.723 465.207 510.813 466.32 517.71 cv
cp
f
426.196 573.753 mo
425.232 573.753 424.437 572.985 424.411 572.015 cv
424.384 571.028 425.162 570.207 426.149 570.18 cv
426.418 570.169 433.03 569.812 433.645 561.738 cv
433.847 559.08 433.144 552.827 428.646 538.137 cv
425.923 529.244 423.071 521.445 423.043 521.367 cv
422.703 520.441 423.179 519.414 424.106 519.075 cv
425.031 518.734 426.059 519.21 426.398 520.137 cv
426.427 520.216 429.312 528.102 432.064 537.091 cv
435.805 549.313 437.536 557.696 437.208 562.009 cv
436.518 571.082 429.735 573.658 426.246 573.753 cv
426.196 573.753 li
cp
.713726 .470588 .403922 rgb
f
389.56 496.272 mo
392.282 498.6 392.131 504.071 387.422 505.582 cv
383.219 506.93 371.802 507.016 364.285 509.48 cv
357.012 511.866 349.531 517.042 347.695 516.611 cv
345.829 516.172 346.532 512.353 351.221 507.946 cv
355.591 503.838 359.594 499.129 368.453 496.551 cv
377.312 493.973 386.838 493.945 389.56 496.272 cv
cp
.788235 .4 .27451 rgb
f
437.05 490.04 mo
435.192 493.102 437.047 498.251 441.992 498.213 cv
446.406 498.179 457.277 494.689 465.188 494.679 cv
472.842 494.669 481.566 497.247 483.176 496.263 cv
484.812 495.263 482.948 491.855 477.117 489.136 cv
471.681 486.601 465.968 483.829 456.306 483.876 cv
446.645 483.924 438.907 486.978 437.05 490.04 cv
cp
f
332.898 528.861 mo
323.319 519.882 306.115 533.103 311.153 551.683 cv
316.19 570.262 336.215 587.039 347.112 585.522 cv
358.01 584.005 345.806 540.962 332.898 528.861 cv
cp
.917647 .619608 .509804 rgb
f
498.85 506.911 mo
505.764 495.75 525.815 504.044 525.781 523.294 cv
525.748 542.544 510.772 563.951 499.856 565.319 cv
488.939 566.687 489.532 521.951 498.85 506.911 cv
f
339.853 412.292 mo
364.318 384.812 391.043 381.368 398.668 380.359 cv
406.294 379.35 432.995 375.729 463.762 395.902 cv
479.105 405.961 486.613 420.085 497.937 433.555 cv
509.651 447.487 520.685 463.659 521.475 482.465 cv
521.97 494.291 515.857 503.854 503.369 504.312 cv
489.136 504.834 476.319 495.82 466.25 485.746 cv
461.91 481.403 457.829 476.773 453.05 472.919 cv
446.574 467.698 438.876 464.001 430.752 462.21 cv
423.148 460.535 415.142 460.488 407.887 457.659 cv
400.272 454.69 393.913 448.633 390.578 441.171 cv
390.6 451.882 385.98 461.989 381.453 471.696 cv
379.132 476.673 376.787 481.689 373.499 486.086 cv
370.268 490.406 366.206 494.023 362.174 497.606 cv
352.258 506.419 340.057 518.566 328.506 525.093 cv
324.655 527.269 322.26 525.948 318.122 524.386 cv
313.009 522.457 311.153 516.26 310.398 510.847 cv
307.85 492.574 310.041 473.352 317.353 456.398 cv
324.123 440.702 328.031 425.569 339.853 412.292 cv
.788235 .4 .27451 rgb
f
511.621 538.852 mo
511.342 538.852 511.059 538.786 510.794 538.647 cv
509.92 538.19 509.582 537.111 510.039 536.236 cv
513.668 529.293 511.392 520.819 511.369 520.734 cv
511.106 519.783 511.664 518.799 512.616 518.536 cv
513.569 518.274 514.551 518.832 514.814 519.783 cv
514.925 520.185 517.481 529.713 513.206 537.892 cv
512.887 538.502 512.265 538.852 511.621 538.852 cv
cp
.713726 .470588 .403922 rgb
f
329.837 562.461 mo
329.426 562.461 329.014 562.321 328.678 562.033 cv
328.361 561.762 320.909 555.296 319.875 546.126 cv
319.765 545.145 320.471 544.26 321.451 544.15 cv
322.429 544.034 323.316 544.745 323.427 545.726 cv
324.3 553.472 330.935 559.261 331.002 559.318 cv
331.75 559.961 331.836 561.089 331.194 561.837 cv
330.841 562.25 330.34 562.461 329.837 562.461 cv
cp
f
297.045 377.425 mo
309.873 368.593 327.18 365.627 341.06 372.534 cv
346.999 375.49 351.998 379.999 356.916 384.453 cv
359.532 386.822 362.194 389.248 363.923 392.325 cv
367.734 399.109 366.27 407.63 363.546 414.919 cv
356.627 433.426 341.132 452.102 323.325 460.893 cv
318.954 463.051 314.246 464.751 309.373 464.87 cv
295.787 465.201 283.992 457.178 278.396 444.973 cv
268.362 423.088 275.289 394.874 293.988 379.71 cv
294.975 378.91 295.994 378.147 297.045 377.425 cv
.788235 .4 .27451 rgb
f
390.559 442.441 mo
390.572 442.019 390.579 441.596 390.578 441.171 cv
390.747 441.551 390.925 441.927 391.11 442.298 cv
390.929 442.373 390.744 442.42 390.559 442.441 cv
.733333 .494118 .407843 rgb
f
390.325 442.455 mo
389.538 442.455 388.785 442.003 388.439 441.24 cv
383.894 431.21 381.596 420.09 381.794 409.082 cv
381.815 407.952 382.735 407.051 383.861 407.051 cv
383.874 407.051 383.886 407.051 383.899 407.051 cv
385.042 407.072 385.95 408.014 385.93 409.156 cv
385.743 419.555 387.914 430.059 392.207 439.532 cv
392.679 440.572 392.217 441.798 391.177 442.269 cv
391.155 442.279 391.132 442.289 391.11 442.298 cv
390.925 441.927 390.747 441.551 390.578 441.171 cv
390.579 441.596 390.572 442.019 390.559 442.441 cv
390.481 442.45 390.403 442.455 390.325 442.455 cv
.631373 .321569 .219608 rgb
f
495.515 430.598 mo
490.921 424.854 486.862 419.055 482.446 413.561 cv
488.06 417.689 492.666 422.392 496.217 427.633 cv
496.857 428.579 496.61 429.865 495.664 430.505 cv
495.615 430.538 495.566 430.569 495.515 430.598 cv
f
494.506 430.861 mo
493.843 430.861 493.191 430.543 492.791 429.953 cv
487.027 421.444 478.187 414.418 466.52 409.069 cv
455.751 404.133 443.907 401.213 433.456 398.638 cv
432.348 398.365 431.67 397.244 431.943 396.135 cv
432.176 395.192 433.017 394.561 433.948 394.561 cv
434.112 394.561 434.279 394.581 434.447 394.622 cv
445.074 397.241 457.12 400.209 468.243 405.309 cv
473.523 407.729 478.264 410.485 482.446 413.561 cv
486.862 419.055 490.921 424.854 495.515 430.598 cv
495.198 430.776 494.85 430.861 494.506 430.861 cv
f
513.631 503.087 mo
512.939 502.795 512.239 502.554 511.539 502.367 cv
512.496 501.895 513.385 501.343 514.205 500.721 cv
514.55 501.555 514.309 502.513 513.631 503.087 cv
f
512.295 503.578 mo
511.665 503.578 511.053 503.29 510.655 502.773 cv
510.956 502.645 511.25 502.51 511.539 502.367 cv
512.239 502.554 512.939 502.795 513.631 503.087 cv
513.526 503.176 513.411 503.255 513.287 503.323 cv
512.971 503.496 512.63 503.578 512.295 503.578 cv
.733333 .494118 .407843 rgb
f
510.655 502.773 mo
510.59 502.689 510.531 502.599 510.479 502.503 cv
501.539 486.178 491.406 467.674 474.871 456.776 cv
473.917 456.147 473.654 454.864 474.282 453.911 cv
474.679 453.308 475.339 452.98 476.011 452.98 cv
476.402 452.98 476.797 453.091 477.148 453.322 cv
494.541 464.786 504.935 483.768 514.107 500.516 cv
514.144 500.583 514.176 500.652 514.205 500.721 cv
513.385 501.343 512.496 501.895 511.539 502.367 cv
511.25 502.51 510.956 502.645 510.655 502.773 cv
.631373 .321569 .219608 rgb
f
323.76 422.605 mo
323.483 422.605 323.201 422.548 322.93 422.43 cv
321.885 421.971 321.408 420.752 321.867 419.705 cv
323.965 414.918 326.343 409.493 330.411 405.362 cv
332.421 403.321 334.724 401.707 336.952 400.147 cv
354.347 387.958 li
354.708 387.705 355.122 387.583 355.532 387.583 cv
356.184 387.583 356.825 387.891 357.228 388.464 cv
357.883 389.4 357.656 390.69 356.721 391.345 cv
339.326 403.534 li
337.25 404.988 335.104 406.492 333.359 408.265 cv
329.826 411.852 327.705 416.689 325.656 421.366 cv
325.315 422.142 324.557 422.605 323.76 422.605 cv
f
316.301 499.711 mo
315.617 499.711 314.946 499.372 314.553 498.75 cv
313.941 497.786 314.227 496.508 315.192 495.896 cv
318.057 494.079 321.112 492.589 324.067 491.149 cv
327.64 489.406 331.015 487.76 334.099 485.581 cv
346.332 476.932 351.743 461.479 356.643 445.062 cv
356.911 444.164 357.736 443.585 358.627 443.585 cv
358.822 443.585 359.02 443.613 359.216 443.671 cv
360.311 443.998 360.934 445.15 360.607 446.245 cv
355.492 463.384 349.798 479.548 336.486 488.959 cv
333.13 491.331 329.444 493.129 325.879 494.867 cv
323.027 496.258 320.078 497.696 317.407 499.389 cv
317.064 499.608 316.68 499.711 316.301 499.711 cv
f
316.515 467.046 mo
316.008 467.046 315.5 466.861 315.101 466.487 cv
314.45 465.877 314.281 464.944 314.611 464.168 cv
317.024 463.597 319.378 462.72 321.65 461.688 cv
320.594 463.365 319.381 464.943 318.024 466.392 cv
317.617 466.826 317.067 467.046 316.515 467.046 cv
f
314.611 464.168 mo
314.703 463.951 314.835 463.746 315.006 463.563 cv
318.922 459.383 321.463 453.951 322.16 448.266 cv
322.289 447.219 323.177 446.45 324.207 446.45 cv
324.293 446.45 324.379 446.455 324.466 446.466 cv
325.599 446.605 326.405 447.637 326.266 448.771 cv
325.704 453.349 324.104 457.787 321.65 461.688 cv
319.378 462.72 317.024 463.597 314.611 464.168 cv
f
446.713 583.702 mo
445.845 580.9 435.278 585.957 425.565 587.395 cv
415.177 588.933 405.183 587.072 405.723 589.678 cv
406.208 592.024 417.377 598.124 427.13 596.994 cv
438.337 595.694 447.539 586.367 446.713 583.702 cv
cp
1 1 1 rgb
f
804.426 729.993 mo
804.426 729.993 793.262 743.721 789.067 765.639 cv
785.216 785.759 788.183 805.104 800.06 808.238 cv
811.937 811.372 818.347 806.681 826.854 795.458 cv
831.116 789.833 837.215 780.078 840.976 773.529 cv
847.158 762.765 855.43 752.976 855.43 752.976 cv
804.426 729.993 li
cp
.964706 .756863 .352941 rgb
f
1091.18 684.919 mo
1091.18 684.919 1105.62 717.228 1105.23 739.541 cv
1104.88 760.023 1098.02 778.352 1085.75 778.986 cv
1073.48 779.621 1068.17 773.717 1062.14 760.99 cv
1059.12 754.612 1055.15 743.814 1052.81 736.634 cv
1048.96 724.832 1042.87 713.557 1042.87 713.557 cv
1091.18 684.919 li
cp
f
1117.7 551.76 mo
1117.7 551.76 1115 578.346 1108.76 613.522 cv
1107.06 623.103 1105.39 633.005 1103.85 642.49 cv
1103.12 646.988 1105.02 651.391 1104.35 655.623 cv
1103.77 659.307 1100.62 662.859 1100.09 666.23 cv
1099.69 668.881 1100.65 673.807 1100.29 676.208 cv
1099.61 680.677 1097.66 682.278 1097.16 685.625 cv
1096.14 692.534 1095.54 696.705 1095.54 696.705 cv
1095.54 696.705 1088.51 711.195 1073.77 715.994 cv
1059.02 720.793 1042.85 714.711 1042.85 714.711 cv
1042.85 714.711 1039.32 708.054 1038.1 701.19 cv
1036.87 694.327 1033.12 694.014 1030.94 688.391 cv
1028.75 682.768 1029.52 678.029 1028.2 673.057 cv
1026.87 668.086 996.884 584.051 996.884 584.051 cv
930.343 575.616 li
931.324 576.618 903.511 643.916 881.356 695.467 cv
878.5 702.113 877.956 710.561 875.362 716.507 cv
871.808 724.652 866.352 729.911 863.618 735.963 cv
859.594 744.871 856.663 751.022 855.43 752.976 cv
855.43 752.976 838.218 759.582 819.646 754.286 cv
804.13 749.862 800.199 732.399 800.199 732.399 cv
800.199 732.399 797.192 728.602 797.575 718.694 cv
797.729 714.704 801.103 707.915 801.324 702.775 cv
801.493 698.878 799.24 694.689 799.449 690.263 cv
799.615 686.76 802.235 683.11 802.426 679.34 cv
803.056 666.964 803.83 653.298 804.76 639.345 cv
807.571 597.171 813.674 562.136 813.674 562.136 cv
1117.7 551.76 li
.176471 .243137 .266667 rgb
f
1046.1 298.63 mo
1107.82 316.014 li
1107.82 316.014 1144.43 435.905 1138.31 450.194 cv
1132.19 464.483 1124.82 485.584 1115 514.331 cv
1106.62 538.881 1074.4 563.542 1051.93 574.487 cv
1029.45 585.431 973.668 582.736 957.369 585.736 cv
941.07 588.737 911.51 584.584 879.121 575.412 cv
846.732 566.241 820.279 549.814 810.828 539.331 cv
801.377 528.848 788.397 518.553 775.113 507.872 cv
761.829 497.191 813.752 319.128 813.752 319.128 cv
933.998 288.816 li
1046.1 298.63 li
.65098 .788235 .898039 rgb
f
889.029 331.558 mo
889.029 331.558 872.902 371.141 876.714 409.844 cv
876.714 409.844 913.951 388.439 929.784 392.838 cv
929.784 392.838 940.633 413.638 965.995 413.638 cv
991.357 413.638 1003.67 398.115 1003.67 398.115 cv
1003.67 398.115 1036.51 398.702 1057.03 416.88 cv
1057.03 416.88 1062.9 372.313 1039.44 327.16 cv
1022.66 294.846 889.029 331.558 889.029 331.558 cv
cp
1 1 1 rgb
f
1107.82 316.014 mo
1107.82 316.014 1167.02 330.697 1170.61 378.806 cv
1173.57 418.389 1177.39 473.526 1176.85 510.013 cv
1176.76 516.087 1178.45 523.545 1178.09 528.427 cv
1177.48 536.844 1174.53 541.354 1172.93 544.954 cv
1171.24 548.751 1171.24 554.614 1168.7 558.121 cv
1166.17 561.629 1161.11 562.782 1157.94 565.801 cv
1152.62 570.865 1151.28 576.742 1144.96 579.677 cv
1142.15 580.983 1134.56 580.389 1131.69 581.138 cv
1123.09 583.386 1114.42 582.945 1106.86 578.693 cv
1084.37 566.041 1071.71 544.954 1080.15 536.52 cv
1088.58 528.085 1102.64 498.564 1102.64 498.564 cv
1107.82 316.014 li
.65098 .788235 .898039 rgb
f
813.752 319.128 mo
813.752 319.128 775.122 329.126 771.578 362.708 cv
765.33 421.907 757.294 512.397 765.398 530.631 cv
766.534 533.187 769.602 544.399 771.136 546.838 cv
773.194 550.111 772.598 557.218 775.238 560.152 cv
777.879 563.087 783.756 561.848 786.826 564.298 cv
801.053 575.654 819.061 581.016 833.187 573.07 cv
855.68 560.418 868.332 539.331 859.897 530.897 cv
851.462 522.462 837.404 492.94 837.404 492.94 cv
813.752 319.128 li
f
1131.23 581.036 mo
1112.48 585.722 998.613 591.345 933.947 580.099 cv
936.758 544.954 li
1125.13 550.577 li
1131.23 581.036 li
cp
.772549 .447059 .380392 rgb
f
859.897 530.897 mo
859.897 530.897 1043.13 534.177 1074.06 528.553 cv
1104.98 522.93 1110.92 499.5 1110.92 499.5 cv
1121.05 535.747 li
1121.05 535.747 1044.69 583.535 994.396 589.94 cv
947.622 595.895 862.252 596.968 798.991 570.258 cv
803.284 576.414 850.685 567.137 859.897 530.897 cv
f
1017.35 585.971 mo
1016.68 585.971 1016.08 585.488 1015.96 584.801 cv
1015.82 584.028 1016.33 583.29 1017.11 583.152 cv
1072.5 573.227 1124.02 549.526 1124.54 549.288 cv
1125.25 548.959 1126.09 549.268 1126.42 549.979 cv
1126.75 550.691 1126.44 551.536 1125.73 551.866 cv
1125.21 552.106 1073.37 575.957 1017.61 585.949 cv
1017.35 585.971 li
cp
.552941 .313726 .278431 rgb
f
1110.29 497.626 mo
1110.29 497.626 1066.87 573.851 1131.23 581.036 cv
1148.09 539.8 li
1124.04 502.937 li
1110.29 497.626 li
.65098 .788235 .898039 rgb
f
1103.62 511.814 mo
1103.48 511.634 1103.37 511.424 1103.31 511.189 cv
1102.38 507.656 1103.41 499.521 1104.32 492.344 cv
1104.74 489.017 1105.1 486.143 1105.15 484.56 cv
1105.24 481.583 1105.82 478.677 1106.38 475.866 cv
1106.59 474.801 li
1109.09 461.981 1110.31 448.856 1110.21 435.791 cv
1110.2 434.835 1110.97 434.054 1111.93 434.047 cv
1111.94 434.047 li
1112.89 434.047 1113.66 434.813 1113.67 435.764 cv
1113.77 449.061 1112.53 462.418 1109.98 475.464 cv
1109.77 476.538 li
1109.22 479.335 1108.69 481.976 1108.61 484.667 cv
1108.55 486.415 1108.18 489.364 1107.75 492.779 cv
1107.25 496.691 1106.64 501.518 1106.45 505.265 cv
1105.57 507.175 1104.6 509.379 1103.62 511.814 cv
.521569 .631373 .717647 rgb
f
1104.98 512.477 mo
1104.45 512.477 1103.95 512.228 1103.62 511.814 cv
1104.6 509.379 1105.57 507.175 1106.45 505.265 cv
1106.34 507.437 1106.38 509.246 1106.66 510.304 cv
1106.9 511.227 1106.35 512.174 1105.43 512.419 cv
1105.28 512.459 1105.13 512.477 1104.98 512.477 cv
f
853.817 521.627 mo
853.414 521.627 853.022 521.486 852.711 521.229 cv
852.46 520.831 852.208 520.427 851.956 520.02 cv
848.887 513.558 846.147 506.553 843.591 498.63 cv
837.136 478.631 833.47 457.661 829.923 437.38 cv
829.759 436.439 830.389 435.543 831.33 435.378 cv
831.43 435.361 831.53 435.352 831.629 435.352 cv
832.456 435.352 833.186 435.943 833.333 436.784 cv
836.858 456.948 840.503 477.798 846.884 497.568 cv
849.475 505.596 852.252 512.655 855.374 519.147 cv
855.789 520.008 855.426 521.042 854.565 521.456 cv
854.323 521.572 854.068 521.627 853.817 521.627 cv
f
852.711 521.229 mo
852.525 521.075 852.368 520.879 852.256 520.647 cv
852.156 520.438 852.056 520.229 851.956 520.02 cv
852.208 520.427 852.46 520.831 852.711 521.229 cv
f
789.68 529.622 mo
789.255 529.622 788.828 529.467 788.494 529.152 cv
787.799 528.497 787.766 527.402 788.421 526.706 cv
793.303 521.521 799.988 517.405 808.289 514.469 cv
815.579 511.892 823.237 510.488 830.643 509.13 cv
830.749 509.11 830.855 509.101 830.959 509.101 cv
831.778 509.101 832.504 509.686 832.656 510.519 cv
832.829 511.46 832.207 512.361 831.266 512.533 cv
823.994 513.866 816.473 515.246 809.442 517.732 cv
801.666 520.481 795.441 524.299 790.94 529.079 cv
790.6 529.441 790.141 529.622 789.68 529.622 cv
f
1157.47 536.844 mo
1156.78 536.844 1156.13 536.429 1155.86 535.747 cv
1151.24 524.009 1140.54 518.517 1132.29 515.579 cv
1129.27 510.949 li
1138.21 513.651 1153.07 519.203 1159.08 534.48 cv
1159.43 535.37 1158.99 536.374 1158.1 536.723 cv
1157.89 536.806 1157.68 536.844 1157.47 536.844 cv
f
1132.29 515.579 mo
1129.82 514.699 1127.57 514.049 1125.77 513.528 cv
1124.24 513.085 1123.03 512.735 1122.23 512.396 cv
1121.35 512.024 1120.93 511.009 1121.31 510.129 cv
1121.58 509.468 1122.22 509.072 1122.9 509.072 cv
1123.12 509.072 1123.35 509.115 1123.57 509.208 cv
1124.19 509.467 1125.37 509.808 1126.73 510.204 cv
1127.51 510.428 1128.36 510.674 1129.27 510.949 cv
1132.29 515.579 li
f
903.546 519.852 mo
903.546 519.852 878.405 502.96 871.334 500.604 cv
864.263 498.247 834.997 497.264 829.694 499.032 cv
824.391 500.8 826.944 506.299 832.247 506.889 cv
832.247 506.889 822.861 506.747 819.873 511.21 cv
816.884 515.673 823.801 518.478 828.515 518.478 cv
828.515 518.478 822.23 517.888 819.873 521.031 cv
816.233 525.884 822.819 529.28 828.711 528.691 cv
828.711 528.691 825.765 529.28 823.703 531.637 cv
821.641 533.994 827.913 536.858 831.363 536.351 cv
842.137 534.769 850.639 531.821 854.835 531.637 cv
859.847 531.418 884.086 531.048 884.086 531.048 cv
920.045 531.637 li
920.045 531.637 911.795 525.45 903.546 519.852 cv
cp
.772549 .447059 .380392 rgb
f
855.972 509.032 mo
855.92 509.031 li
846.018 508.678 832.346 508.313 832.209 508.309 cv
831.425 508.288 830.806 507.635 830.827 506.851 cv
830.848 506.067 831.489 505.479 832.285 505.468 cv
832.422 505.472 846.106 505.838 856.021 506.191 cv
856.805 506.219 857.418 506.877 857.391 507.662 cv
857.363 508.428 856.733 509.032 855.972 509.032 cv
cp
.552941 .313726 .278431 rgb
f
853.854 521.273 mo
853.806 521.272 li
830.04 520.486 li
829.255 520.46 828.641 519.804 828.667 519.02 cv
828.692 518.235 829.359 517.623 830.133 517.646 cv
853.9 518.432 li
854.684 518.458 855.299 519.115 855.273 519.899 cv
855.248 520.667 854.617 521.273 853.854 521.273 cv
cp
f
831.852 529.522 mo
831.133 529.522 830.516 528.978 830.441 528.247 cv
830.36 527.466 830.928 526.769 831.708 526.688 cv
845.065 525.313 li
845.839 525.225 846.543 525.8 846.624 526.581 cv
846.704 527.362 846.136 528.06 845.356 528.14 cv
832 529.515 li
831.852 529.522 li
cp
f
911.923 532.786 mo
911.906 532.785 li
871.607 532.317 li
870.822 532.308 870.194 531.665 870.203 530.88 cv
870.212 530.101 870.846 529.476 871.623 529.476 cv
871.64 529.476 li
911.939 529.944 li
912.724 529.953 913.353 530.597 913.343 531.381 cv
913.334 532.16 912.7 532.786 911.923 532.786 cv
cp
f
869.62 300.957 mo
868.787 296.813 869.765 293.046 869.54 288.94 cv
868.625 272.237 863.394 257.839 859.89 241.839 cv
856.278 225.347 857.17 207.851 862.685 191.879 cv
866.708 180.23 873.022 169.521 879.612 159.108 cv
884.112 151.998 888.978 144.765 896.098 140.281 cv
902.171 136.457 909.379 134.958 916.413 133.528 cv
927.915 131.188 939.417 128.849 950.919 126.51 cv
959.82 124.7 968.913 122.881 977.924 124.016 cv
993.614 125.991 1006.99 136.608 1022.46 139.893 cv
1030.21 141.538 1038.4 141.324 1045.76 144.247 cv
1057.61 148.953 1065.15 161.166 1067.69 173.66 cv
1071.8 193.851 1066.78 217.268 1064.07 237.463 cv
1061.27 258.395 1060 279.195 1054.2 299.643 cv
1053.65 301.581 1050.26 303.575 1048.98 305.127 cv
1044.2 310.9 1038.05 307.164 1032.42 306.373 cv
1024.17 305.213 1015.55 305.529 1007.22 305.197 cv
996.106 304.755 984.992 304.108 973.875 303.805 cv
952.999 303.234 932.122 302.665 911.246 302.094 cv
903.19 301.875 895.136 301.654 887.081 301.435 cv
882.856 301.319 876.438 302.368 872.401 301.034 cv
871.633 300.779 870.438 300.985 869.62 300.957 cv
cp
.239216 .129412 .101961 rgb
f
1036.94 194.191 mo
1017.62 170.885 996.891 162.406 962.103 162.406 cv
927.315 162.406 906.854 171.836 888.046 194.89 cv
868.925 218.328 877.397 255.51 880.431 284.327 cv
883.465 313.144 886.364 333.005 895.379 356.338 cv
902.744 375.4 910.322 385.521 920.61 395.397 cv
930.898 405.274 949.708 413.638 965.995 413.638 cv
982.283 413.638 999.319 405.154 1009.09 394.163 cv
1019 383.006 1027.66 374.534 1035.46 352.583 cv
1043.25 330.633 1046.85 314.872 1049.88 286.055 cv
1052.92 257.238 1058.37 220.039 1036.94 194.191 cv
cp
.772549 .447059 .380392 rgb
f
965.83 365.33 mo
956.549 365.33 949.243 360.168 949.133 360.089 cv
948.498 359.63 948.355 358.744 948.813 358.108 cv
949.271 357.473 950.158 357.328 950.796 357.785 cv
951.398 358.218 965.717 368.271 978.979 357.822 cv
979.595 357.334 980.488 357.442 980.974 358.058 cv
981.46 358.675 981.354 359.568 980.738 360.053 cv
975.714 364.012 970.52 365.33 965.83 365.33 cv
cp
.552941 .313726 .278431 rgb
f
890.452 290.445 mo
882.115 280.265 863.284 291.14 865.847 310.262 cv
868.41 329.384 886.102 348.685 897.128 348.61 cv
908.155 348.534 901.686 304.165 890.452 290.445 cv
cp
.772549 .447059 .380392 rgb
f
881.726 323.503 mo
881.279 323.503 880.839 323.293 880.563 322.9 cv
875.323 315.455 876.593 305.791 876.649 305.383 cv
876.757 304.607 877.474 304.071 878.25 304.172 cv
879.027 304.279 879.57 304.996 879.464 305.772 cv
879.452 305.861 878.302 314.752 882.886 321.265 cv
883.337 321.907 883.184 322.793 882.542 323.244 cv
882.293 323.419 882.008 323.503 881.726 323.503 cv
cp
.552941 .313726 .278431 rgb
f
1041.52 290.445 mo
1049.86 280.265 1068.69 291.14 1066.13 310.262 cv
1063.57 329.384 1045.87 348.685 1034.85 348.61 cv
1023.82 348.534 1030.29 304.165 1041.52 290.445 cv
cp
.772549 .447059 .380392 rgb
f
1050.25 323.503 mo
1049.97 323.503 1049.68 323.419 1049.43 323.244 cv
1048.79 322.793 1048.64 321.907 1049.09 321.265 cv
1053.69 314.726 1052.53 305.863 1052.51 305.774 cv
1052.4 304.997 1052.95 304.279 1053.72 304.171 cv
1054.5 304.063 1055.22 304.605 1055.33 305.383 cv
1055.38 305.791 1056.65 315.455 1051.41 322.9 cv
1051.14 323.293 1050.7 323.503 1050.25 323.503 cv
cp
.552941 .313726 .278431 rgb
f
1048.67 271.788 mo
1048.67 295.483 1045.03 309.8 1047.5 310.523 cv
1049.98 311.247 1054.58 284.853 1056.77 281.031 cv
1063.13 269.914 1058.05 253.756 1056.34 242.033 cv
1054.47 229.191 1051.48 216.356 1046.19 204.462 cv
1037.32 184.515 1021.73 169.616 1000.79 163.008 cv
989.258 159.372 977.06 158.156 965.013 158.156 cv
937.429 158.156 908.58 164.644 890.264 186.831 cv
872.168 208.75 863.994 242.4 872.167 269.673 cv
873.542 274.265 880.077 297.333 883.831 310.612 cv
884.185 311.863 886.034 311.571 885.973 310.272 cv
885.547 301.097 885.13 287.909 885.873 281.791 cv
888.46 260.477 885.298 235.99 900.86 218.916 cv
909.333 209.62 921.634 203.924 934.204 203.476 cv
944.806 203.098 955.249 206.275 965.857 206.414 cv
982.407 206.631 998.987 199.477 1015.14 203.067 cv
1045.56 209.827 1048.67 246.333 1048.67 271.788 cv
cp
.239216 .129412 .101961 rgb
f
962.04 343.954 mo
961.098 343.954 960.497 343.846 960.473 343.841 cv
959.703 343.692 959.199 342.947 959.347 342.177 cv
959.497 341.407 960.244 340.904 961.011 341.051 cv
961.295 341.103 968.149 342.257 970.6 334.157 cv
971.722 330.446 971.804 322.039 970.835 309.844 cv
970.097 300.542 968.995 292.283 968.983 292.2 cv
968.879 291.422 969.425 290.708 970.203 290.603 cv
970.983 290.504 971.696 291.045 971.8 291.822 cv
971.811 291.905 972.923 300.236 973.668 309.62 cv
974.678 322.343 974.561 330.875 973.319 334.98 cv
970.907 342.952 964.904 343.954 962.04 343.954 cv
cp
.552941 .313726 .278431 rgb
f
931.123 299.152 mo
931.123 306.154 927.969 311.831 924.079 311.831 cv
920.188 311.831 917.034 306.154 917.034 299.152 cv
917.034 292.15 920.188 286.474 924.079 286.474 cv
927.969 286.474 931.123 292.15 931.123 299.152 cv
cp
.0862745 .0509804 .0431373 rgb
f
1011.71 299.152 mo
1011.71 306.154 1008.56 311.831 1004.67 311.831 cv
1000.77 311.831 997.621 306.154 997.621 299.152 cv
997.621 292.15 1000.77 286.474 1004.67 286.474 cv
1008.56 286.474 1011.71 292.15 1011.71 299.152 cv
cp
f
986.554 265.144 mo
984.262 268.149 986.247 274.514 990.827 274.273 cv
995.479 274.029 1002.03 272.999 1010.33 273.873 cv
1018.37 274.718 1027.69 278.104 1031.25 276.682 cv
1034.4 275.425 1034.82 271.64 1029.01 268.135 cv
1023.59 264.867 1016.51 262.298 1008.29 261.718 cv
1000.08 261.137 988.845 262.138 986.554 265.144 cv
cp
.239216 .129412 .101961 rgb
f
942.189 265.144 mo
944.48 268.149 942.496 274.514 937.917 274.273 cv
933.265 274.029 926.71 272.999 918.408 273.873 cv
910.375 274.718 901.054 278.104 897.494 276.682 cv
894.347 275.425 893.919 271.64 899.735 268.135 cv
905.156 264.867 912.236 262.298 920.45 261.718 cv
928.664 261.137 939.897 262.138 942.189 265.144 cv
cp
f
1309.79 975.637 mo
1250.8 978.471 li
1172.26 961.454 li
1169.17 931.929 li
1434.75 909.106 li
1428.25 946.264 li
1309.79 975.637 li
cp
.254902 .568627 .792157 rgb
f
1395.76 1067.03 mo
1395.76 1067.03 1402.81 1081.63 1401.91 1102.05 cv
1401.09 1120.8 1394.35 1137.41 1383.1 1137.69 cv
1371.86 1137.97 1367.13 1132.43 1361.93 1120.63 cv
1359.32 1114.72 1355.95 1104.73 1353.98 1098.1 cv
1350.75 1087.2 1345.45 1076.73 1345.45 1076.73 cv
1395.76 1067.03 li
cp
.176471 .243137 .266667 rgb
f
1205.34 1075.29 mo
1205.34 1075.29 1194.42 1105.81 1196.34 1126.16 cv
1198.09 1144.84 1205.65 1161.1 1216.9 1160.82 cv
1228.14 1160.54 1232.58 1154.78 1237.2 1142.73 cv
1239.51 1136.69 1242.38 1126.55 1244.01 1119.83 cv
1246.7 1108.78 1251.47 1098.06 1251.47 1098.06 cv
1205.34 1075.29 li
f
1428.25 946.264 mo
1428.25 946.264 1424.67 970.293 1417.69 991.492 cv
1411.37 1010.67 1400.54 1032.62 1400.54 1032.62 cv
1396.67 1068.07 li
1396.67 1068.07 1391.93 1077.67 1377.46 1080.68 cv
1360.14 1084.27 1345.45 1076.73 1345.45 1076.73 cv
1339.35 1065.29 1336.13 1052.16 1330.58 1040.9 cv
1326.08 1031.76 1307.16 974.085 1309.79 975.637 cv
1428.25 946.264 li
cp
.254902 .568627 .792157 rgb
f
1172.26 961.454 mo
1172.26 961.454 1174.46 985.411 1179.01 1004.07 cv
1183.56 1022.73 1190.82 1042.94 1190.82 1042.94 cv
1190.82 1042.94 1191.81 1054.52 1195.7 1069.55 cv
1198.07 1078.68 1202.19 1086.36 1202.19 1086.36 cv
1202.19 1086.36 1209.63 1099.1 1223.43 1102.45 cv
1237.23 1105.8 1251.57 1099.11 1251.57 1099.11 cv
1267.16 1049.99 1278.97 1006.08 1282.03 974.223 cv
1172.26 961.454 li
f
1265.28 507.335 mo
1265.17 507.319 1226.6 501.783 1193.54 535.614 cv
1169.63 560.082 1152.69 596.405 1157.15 631.233 cv
1159.13 646.689 1165.36 661.914 1163.28 677.356 cv
1161.69 689.056 1155.41 699.773 1154.19 711.516 cv
1152.1 731.502 1164.88 750.81 1162.85 770.802 cv
1161.81 781.003 1157.43 792.91 1164.46 800.377 cv
1167.16 803.241 1171.03 804.664 1174.86 805.593 cv
1197.3 811.049 1220.06 802.237 1242.48 800.852 cv
1262.11 799.639 1281.72 798.287 1301.33 796.885 cv
1321.42 795.45 1341.5 793.955 1361.58 792.424 cv
1376.02 791.323 1391.47 794.384 1400.34 779.855 cv
1405.84 770.84 1406.21 759.486 1404.09 749.137 cv
1401.97 738.787 1397.59 729.064 1394.08 719.1 cv
1390.57 709.135 1387.89 698.537 1389.34 688.074 cv
1390.69 678.375 1395.54 669.252 1395.64 659.46 cv
1395.78 644.944 1385.62 632.486 1381.87 618.463 cv
1379.7 610.338 1379.71 601.808 1378.54 593.479 cv
1373.97 560.994 1347.83 530.462 1319.39 515.455 cv
1307.37 509.114 1293.9 505.309 1280.26 505.423 cv
1275.77 505.461 1269.51 507.943 1265.28 507.335 cv
.227451 .282353 .329412 rgb
f
1204.01 684.736 mo
1147.17 709.187 li
1147.17 709.187 1123.82 817.003 1130.41 829.625 cv
1137.01 842.245 1145.22 861 1156.2 886.567 cv
1165.57 908.402 1167.92 978.326 1171.84 986.281 cv
1173.79 990.256 1192.09 996.268 1210.77 995.936 cv
1229.46 995.605 1248.53 988.927 1251.54 985.117 cv
1257.56 977.501 1250.63 903.114 1263 897.839 cv
1270.32 894.719 1325.62 896.335 1325.62 896.335 cv
1325.62 896.335 1320.79 982.616 1323.46 982.899 cv
1331 983.697 1355.19 987.664 1378.08 986.184 cv
1401.03 984.7 1422.67 977.765 1426.31 975.005 cv
1433.6 969.493 1435.73 902.468 1443.63 892.232 cv
1451.52 881.995 1454.78 867.531 1466.17 856.844 cv
1477.55 846.158 1423.62 683.666 1423.62 683.666 cv
1305.7 667.915 li
1204.01 684.736 li
.964706 .756863 .352941 rgb
f
1235.44 748.352 mo
1233.59 762.608 li
1260.66 816.404 li
1295.02 819.648 li
1325.56 780.839 li
1332.41 739.733 li
1235.44 748.352 li
cp
.917647 .619608 .509804 rgb
f
1247.63 841.754 mo
1253.05 866.046 1255.25 890.954 1256.26 915.825 cv
1256.36 918.294 1253.14 964.254 1255.2 965.62 cv
1256.67 966.594 1271.49 968.119 1284.87 967.092 cv
1298.24 966.066 1315.33 962.842 1322.78 958.228 cv
1322.78 958.228 1325.1 914.084 1325.02 912.349 cv
1321.75 845.029 1347.13 779.318 1348.77 711.937 cv
1341.67 722.554 1309.64 810.88 1283.28 812.315 cv
1270.16 813.029 1256.33 793.054 1244.45 773.078 cv
1232.48 752.926 1222.5 732.772 1217.27 733.866 cv
1209.91 735.406 1234.88 733.294 1228.72 737.477 cv
1217.41 745.161 1228.81 773.205 1231.89 784.676 cv
1237.01 803.739 1243.32 822.477 1247.63 841.754 cv
1 1 1 rgb
f
1282.28 878.133 mo
1281.92 878.133 1281.56 878.013 1281.27 877.766 cv
1280.6 877.207 1280.5 876.207 1281.06 875.534 cv
1306 845.555 li
1306.32 845.179 1306.77 844.984 1307.22 844.984 cv
1307.58 844.984 1307.94 845.104 1308.24 845.35 cv
1308.91 845.91 1309 846.909 1308.44 847.582 cv
1283.5 877.562 li
1283.19 877.938 1282.74 878.133 1282.28 878.133 cv
.8 .8 .8 rgb
f
1147.17 709.187 mo
1147.17 709.187 1094.13 726.747 1094.23 770.937 cv
1094.33 823.781 1096.76 902.511 1105.44 918.596 cv
1117.48 940.918 1148.49 957.91 1168.15 944.778 cv
1187.8 931.647 1197.88 911.501 1189.58 904.389 cv
1181.29 897.277 1166.38 871.3 1166.38 871.3 cv
1147.17 709.187 li
.964706 .756863 .352941 rgb
f
1423.62 683.666 mo
1423.62 683.666 1459.6 690.089 1465.19 720.511 cv
1475.05 774.14 1481.8 867.794 1475.68 885.015 cv
1467.18 908.914 1439.13 930.439 1417.7 920.46 cv
1396.27 910.481 1383.24 892.11 1390.35 883.815 cv
1397.46 875.52 1408.23 847.573 1408.23 847.573 cv
1423.62 683.666 li
f
1146.06 948.626 mo
1163.5 951.592 1267.89 948.747 1326.17 933.942 cv
1321.13 902.042 li
1149.48 920.381 li
1146.06 948.626 li
cp
.917647 .619608 .509804 rgb
f
1390.35 883.815 mo
1390.35 883.815 1223.23 899.654 1194.59 896.687 cv
1165.95 893.719 1158.89 872.736 1158.89 872.736 cv
1152.18 906.55 li
1152.18 906.55 1225.26 944.843 1271.65 947.167 cv
1314.78 949.328 1392.83 944.324 1448.73 915.496 cv
1445.24 921.418 1401.3 916.268 1390.35 883.815 cv
f
1250.3 945.426 mo
1250.14 945.418 li
1198.47 940.198 1149.42 922.036 1148.93 921.853 cv
1148.12 921.549 1147.71 920.645 1148.01 919.832 cv
1148.32 919.019 1149.22 918.604 1150.03 918.91 cv
1150.52 919.091 1199.21 937.113 1250.46 942.291 cv
1251.32 942.378 1251.95 943.149 1251.86 944.012 cv
1251.78 944.822 1251.1 945.426 1250.3 945.426 cv
cp
.713726 .470588 .403922 rgb
f
1159.33 870.98 mo
1159.33 870.98 1204.33 937.553 1146.06 948.627 cv
1127.76 912.148 li
1147.14 876.794 li
1159.33 870.98 li
.964706 .756863 .352941 rgb
f
1163.71 848.723 mo
1159.2 810.669 li
1159.24 810.663 1159.28 810.659 1159.32 810.656 cv
1159.36 810.653 1159.4 810.651 1159.44 810.651 cv
1160.24 810.651 1160.95 811.289 1161.01 812.12 cv
1163.71 848.723 li
.772549 .603922 .282353 rgb
f
1166.42 883.47 mo
1165.41 881.445 1164.44 879.605 1163.54 877.993 cv
1163.37 876.722 1163.11 875.431 1162.84 874.161 cv
1162.55 872.77 1162.25 871.332 1162.09 869.925 cv
1161.58 865.658 1161.33 861.293 1161.08 857.071 cv
1160.95 854.928 1160.83 852.788 1160.67 850.657 cv
1157.85 812.352 li
1157.79 811.52 1158.38 810.789 1159.2 810.669 cv
1163.71 848.723 li
1163.83 850.425 li
1163.99 852.57 1164.12 854.727 1164.24 856.885 cv
1164.49 861.061 1164.74 865.379 1165.23 869.554 cv
1165.38 870.822 1165.66 872.129 1165.94 873.515 cv
1166.58 876.565 1167.24 879.72 1166.65 882.879 cv
1166.61 883.097 1166.53 883.297 1166.42 883.47 cv
f
1165.1 884.176 mo
1165 884.176 1164.91 884.168 1164.81 884.15 cv
1163.95 883.991 1163.38 883.164 1163.54 882.304 cv
1163.79 880.933 1163.73 879.476 1163.54 877.993 cv
1164.44 879.605 1165.41 881.445 1166.42 883.47 cv
1166.13 883.904 1165.63 884.176 1165.1 884.176 cv
f
1395.13 874.928 mo
1394.94 874.928 1394.74 874.893 1394.56 874.82 cv
1393.74 874.502 1393.34 873.582 1393.65 872.767 cv
1396.05 866.619 1398.09 859.977 1399.9 852.463 cv
1404.34 833.962 1406.21 814.663 1408.01 796 cv
1408.09 795.181 1408.78 794.568 1409.58 794.568 cv
1409.64 794.568 1409.69 794.57 1409.74 794.575 cv
1410.61 794.66 1411.25 795.434 1411.17 796.306 cv
1409.35 815.076 1407.47 834.487 1402.98 853.204 cv
1401.2 860.619 1399.19 867.21 1396.84 873.327 cv
1396.63 873.717 1396.43 874.102 1396.23 874.483 cv
1395.94 874.767 1395.54 874.928 1395.13 874.928 cv
f
1396.23 874.483 mo
1396.43 874.102 1396.63 873.717 1396.84 873.327 cv
1396.76 873.524 1396.68 873.722 1396.61 873.918 cv
1396.52 874.139 1396.39 874.329 1396.23 874.483 cv
f
1454.27 877.735 mo
1453.88 877.735 1453.5 877.598 1453.2 877.321 cv
1448.75 873.271 1442.8 870.221 1435.51 868.255 cv
1428.91 866.478 1421.94 865.746 1415.21 865.037 cv
1414.34 864.946 1413.71 864.166 1413.8 863.295 cv
1413.88 862.479 1414.57 861.877 1415.38 861.877 cv
1415.43 861.877 1415.48 861.879 1415.54 861.885 cv
1422.4 862.606 1429.49 863.352 1436.33 865.195 cv
1444.12 867.293 1450.51 870.585 1455.33 874.979 cv
1455.98 875.568 1456.03 876.57 1455.44 877.217 cv
1455.13 877.561 1454.7 877.735 1454.27 877.735 cv
f
1118.87 910.11 mo
1118.72 910.11 1118.56 910.087 1118.41 910.039 cv
1117.57 909.782 1117.1 908.896 1117.36 908.059 cv
1121.78 893.685 1134.96 887.572 1142.93 884.478 cv
1140.5 888.919 li
1133.17 892.18 1123.78 897.945 1120.39 908.99 cv
1120.18 909.671 1119.55 910.11 1118.87 910.11 cv
f
1140.5 888.919 mo
1142.93 884.478 li
1143.74 884.163 1144.5 883.879 1145.19 883.62 cv
1146.41 883.163 1147.47 882.768 1148.01 882.488 cv
1148.24 882.369 1148.49 882.312 1148.73 882.312 cv
1149.31 882.312 1149.86 882.625 1150.15 883.17 cv
1150.55 883.949 1150.24 884.904 1149.46 885.306 cv
1148.75 885.672 1147.67 886.077 1146.3 886.589 cv
1144.7 887.191 1142.69 887.943 1140.5 888.919 cv
f
1349.71 876.788 mo
1349.71 876.788 1371.49 859.598 1377.78 856.95 cv
1384.07 854.302 1410.73 851.354 1415.7 852.596 cv
1420.67 853.839 1418.72 859.041 1413.92 859.951 cv
1413.92 859.951 1422.48 859.163 1425.52 863.03 cv
1428.56 866.897 1422.44 869.943 1418.14 870.273 cv
1418.14 870.273 1423.84 869.294 1426.21 872 cv
1429.88 876.177 1424.1 879.74 1418.67 879.615 cv
1418.67 879.615 1421.41 879.947 1423.46 881.955 cv
1425.5 883.963 1419.98 887.018 1416.79 886.797 cv
1406.84 886.107 1398.87 884.01 1395.02 884.137 cv
1390.43 884.288 1368.27 885.649 1368.27 885.649 cv
1335.47 888.708 li
1335.47 888.708 1342.57 882.479 1349.71 876.788 cv
cp
.917647 .619608 .509804 rgb
f
1392.3 864.25 mo
1391.31 864.25 1390.45 863.504 1390.34 862.495 cv
1390.21 861.41 1391 860.432 1392.08 860.31 cv
1401.11 859.292 1413.59 857.999 1413.71 857.985 cv
1414.81 857.871 1415.77 858.662 1415.88 859.747 cv
1416 860.833 1415.21 861.803 1414.12 861.916 cv
1414 861.929 1401.54 863.221 1392.52 864.237 cv
1392.3 864.25 li
cp
.713726 .470588 .403922 rgb
f
1395.09 875.281 mo
1394.1 875.281 1393.24 874.532 1393.13 873.521 cv
1393.01 872.436 1393.79 871.46 1394.88 871.341 cv
1416.53 868.958 li
1417.61 868.84 1418.59 869.621 1418.71 870.705 cv
1418.83 871.79 1418.04 872.766 1416.96 872.885 cv
1395.31 875.269 li
1395.09 875.281 li
cp
f
1415.76 881.273 mo
1415.71 881.272 li
1403.42 880.953 li
1402.33 880.924 1401.46 880.017 1401.49 878.926 cv
1401.52 877.835 1402.44 876.985 1403.52 877.002 cv
1415.82 877.322 li
1416.91 877.351 1417.77 878.258 1417.74 879.349 cv
1417.71 880.422 1416.83 881.273 1415.76 881.273 cv
cp
f
1342.86 889.866 mo
1341.85 889.866 1340.99 889.091 1340.9 888.064 cv
1340.8 886.977 1341.6 886.018 1342.69 885.921 cv
1379.46 882.669 li
1380.55 882.576 1381.51 883.377 1381.61 884.463 cv
1381.7 885.55 1380.9 886.509 1379.81 886.605 cv
1343.04 889.858 li
1342.86 889.866 li
cp
f
1301.85 668.211 mo
1214.12 692.046 li
1214.12 692.046 1181.95 686.204 1161.22 686.048 cv
1160.98 686.925 1160.71 687.724 1160.38 688.414 cv
1156.28 697.112 1151.1 705.913 1151.47 715.522 cv
1152.01 729.538 1164.35 740.426 1177.3 745.802 cv
1189.46 750.848 1203.53 752.541 1215.77 747.693 cv
1220.7 745.742 1225.17 742.809 1229.97 740.564 cv
1238.62 736.52 1248.17 734.78 1257.67 733.896 cv
1282.71 731.568 1308.27 734.998 1331.81 743.844 cv
1341.72 747.569 1350.52 745.636 1359.87 752.14 cv
1369.1 758.561 1377.56 764.079 1389.37 764.085 cv
1393.8 764.087 1398.5 763.17 1401.73 760.148 cv
1407.56 754.71 1406.35 745.301 1408.96 737.767 cv
1411.42 730.644 1417.42 725.122 1419.63 717.917 cv
1422.31 709.208 1418.34 698.917 1410.51 694.259 cv
1406.9 692.112 1402.73 691.122 1398.96 689.268 cv
1394.37 687.01 1391.43 679.249 1391.43 679.249 cv
1391.43 679.249 1377.97 672.671 1373.44 672.02 cv
1362.59 670.461 1351.16 675.314 1340.31 673.753 cv
1331.27 672.452 1322.23 671.149 1313.19 669.846 cv
1310.33 669.434 1304.71 667.434 1301.85 668.211 cv
cp
.227451 .282353 .329412 rgb
f
1327.86 533.292 mo
1299.16 512.135 1273.13 514.219 1265.7 514.79 cv
1258.26 515.36 1232.22 517.273 1207.08 542.562 cv
1182.78 567.017 1177.08 599.798 1182.84 641.453 cv
1188.61 683.11 1199.48 717.186 1217.75 741.111 cv
1236.01 765.037 1268.51 779.656 1285.92 778.32 cv
1303.33 776.984 1332.44 760.204 1345.32 735.428 cv
1358.19 710.653 1367.57 669.375 1366.91 627.327 cv
1366.25 585.28 1355.61 553.752 1327.86 533.292 cv
.917647 .619608 .509804 rgb
f
1284.36 779.949 mo
1270.77 779.949 1250.49 768.437 1239.32 761.374 cv
1238.59 760.91 1238.37 759.939 1238.83 759.206 cv
1239.29 758.473 1240.26 758.253 1241 758.718 cv
1260.24 770.888 1276.56 777.457 1285.8 776.753 cv
1297.44 775.86 1314.34 769.316 1322.74 758.948 cv
1323.28 758.274 1324.28 758.17 1324.95 758.716 cv
1325.62 759.262 1325.73 760.251 1325.18 760.926 cv
1315.07 773.409 1296.24 779.104 1286.04 779.886 cv
1285.5 779.928 1284.93 779.949 1284.36 779.949 cv
cp
.713726 .470588 .403922 rgb
f
1308.87 652.831 mo
1309.39 659.652 1312.89 664.946 1316.68 664.655 cv
1320.47 664.364 1323.12 658.599 1322.59 651.777 cv
1322.07 644.957 1318.57 639.663 1314.78 639.954 cv
1310.99 640.244 1308.35 646.01 1308.87 652.831 cv
cp
.0862745 .0509804 .0431373 rgb
f
1230.37 658.855 mo
1230.89 665.677 1234.39 670.97 1238.18 670.68 cv
1241.97 670.389 1244.62 664.624 1244.09 657.802 cv
1243.57 650.981 1240.07 645.688 1236.28 645.979 cv
1232.49 646.269 1229.84 652.035 1230.37 658.855 cv
cp
f
1275.85 704.402 mo
1272.32 704.403 1267.49 702.719 1265 696.301 cv
1263.47 692.372 1262.72 684.046 1262.75 671.556 cv
1262.78 662.354 1263.24 654.151 1263.24 654.07 cv
1263.29 653.204 1264.02 652.542 1264.9 652.59 cv
1265.76 652.639 1266.43 653.381 1266.38 654.248 cv
1266.37 654.329 1265.92 662.452 1265.89 671.564 cv
1265.86 683.491 1266.56 691.651 1267.93 695.164 cv
1270.81 702.585 1276.89 701.227 1277.57 701.05 cv
1278.41 700.826 1279.27 701.327 1279.49 702.162 cv
1279.72 702.997 1279.23 703.854 1278.39 704.083 cv
1277.69 704.274 1276.82 704.402 1275.85 704.402 cv
cp
.713726 .470588 .403922 rgb
f
1297.96 620.515 mo
1295.69 623.188 1296.69 628.454 1301.48 629.181 cv
1305.75 629.83 1316.8 628.135 1324.45 629.348 cv
1331.86 630.521 1339.89 634.361 1341.6 633.658 cv
1343.34 632.944 1342.06 629.361 1336.84 625.831 cv
1331.98 622.541 1327.38 618.611 1318.41 617.498 cv
1309.45 616.385 1300.23 617.841 1297.96 620.515 cv
cp
.227451 .282353 .329412 rgb
f
1250.51 623.662 mo
1253.09 626.039 1252.74 631.387 1248.08 632.692 cv
1243.91 633.857 1232.74 633.521 1225.29 635.658 cv
1218.09 637.725 1210.58 642.515 1208.8 642.026 cv
1206.99 641.528 1207.82 637.817 1212.57 633.677 cv
1216.99 629.818 1221.62 625.661 1230.72 623.085 cv
1239.82 620.509 1247.93 621.284 1250.51 623.662 cv
cp
f
1358.65 642.396 mo
1366 631.855 1385.16 641.041 1384.09 659.861 cv
1383.03 678.68 1367.24 698.805 1356.49 699.555 cv
1345.74 700.306 1348.73 656.601 1358.65 642.396 cv
.917647 .619608 .509804 rgb
f
1195.21 654.938 mo
1186.33 645.645 1168.8 657.646 1172.73 676.083 cv
1176.65 694.519 1195.33 711.998 1206.07 711.1 cv
1216.8 710.202 1207.18 667.463 1195.21 654.938 cv
cp
f
1328.4 532.123 mo
1299.4 510.747 1273.1 512.853 1265.59 513.429 cv
1258.08 514.005 1231.77 515.937 1206.37 541.488 cv
1181.81 566.196 1176.06 599.317 1181.88 641.404 cv
1182.44 645.446 1184.09 652.465 1184.58 652.273 cv
1220.37 638.238 1206.39 604.222 1222.25 583.496 cv
1238.25 562.596 1259.71 569.84 1259.71 569.84 cv
1283.72 561.598 1301.9 574.648 1316.55 614.764 cv
1331.5 655.715 1367.54 638.048 1367.54 638.048 cv
1367.81 637.31 li
1367.89 633.927 1367.9 630.533 1367.85 627.132 cv
1367.18 584.648 1356.44 552.794 1328.4 532.123 cv
.227451 .282353 .329412 rgb
f
1189.08 687.982 mo
1188.63 687.982 1188.18 687.787 1187.87 687.411 cv
1182.16 680.494 1182.68 670.916 1182.7 670.511 cv
1182.76 669.644 1183.51 668.988 1184.37 669.039 cv
1185.23 669.092 1185.89 669.836 1185.84 670.702 cv
1185.83 670.809 1185.39 679.474 1190.29 685.411 cv
1190.84 686.08 1190.75 687.07 1190.08 687.623 cv
1189.78 687.864 1189.43 687.982 1189.08 687.982 cv
cp
.713726 .470588 .403922 rgb
f
1368.01 673.828 mo
1367.68 673.828 1367.34 673.722 1367.05 673.502 cv
1366.37 672.974 1366.24 671.988 1366.76 671.3 cv
1366.84 671.206 1372.04 664.276 1371.31 656.62 cv
1371.22 655.756 1371.86 654.989 1372.72 654.906 cv
1373.57 654.83 1374.35 655.456 1374.44 656.319 cv
1375.29 665.245 1369.5 672.893 1369.26 673.214 cv
1368.95 673.616 1368.48 673.828 1368.01 673.828 cv
cp
f
1187.17 605.334 mo
1186.94 605.318 li
1186.08 605.195 1185.49 604.399 1185.61 603.54 cv
1185.78 602.322 1190.09 573.503 1208.18 554.546 cv
1215.79 546.57 1226.89 541.802 1240.3 540.758 cv
1242.32 540.601 1244.25 540.537 1246.05 540.537 cv
1253.16 540.537 1258.13 541.535 1258.39 541.589 cv
1259.24 541.762 1259.79 542.592 1259.61 543.442 cv
1259.46 544.186 1258.81 544.699 1258.07 544.699 cv
1257.97 544.699 1257.86 544.688 1257.76 544.667 cv
1257.64 544.643 1252.88 543.713 1246.11 543.713 cv
1235.79 543.713 1220.79 545.876 1210.45 556.715 cv
1193.08 574.931 1188.76 603.698 1188.72 603.987 cv
1188.61 604.77 1187.93 605.334 1187.17 605.334 cv
.137255 .168627 .196078 rgb
f
1311.31 527.8 mo
1311.03 527.8 1310.75 527.728 1310.5 527.574 cv
1302.84 522.946 1293.87 521.703 1286.44 521.703 cv
1284.56 521.703 1282.79 521.782 1281.16 521.906 cv
1272.29 522.578 1265.63 524.681 1265.57 524.703 cv
1265.41 524.754 1265.25 524.778 1265.09 524.778 cv
1264.42 524.778 1263.8 524.353 1263.59 523.685 cv
1263.32 522.859 1263.78 521.974 1264.61 521.71 cv
1264.89 521.619 1271.62 519.486 1280.84 518.778 cv
1282.57 518.646 1284.44 518.562 1286.42 518.562 cv
1294.31 518.562 1303.87 519.898 1312.13 524.884 cv
1312.87 525.333 1313.11 526.299 1312.66 527.042 cv
1312.36 527.53 1311.84 527.8 1311.31 527.8 cv
f
1366.09 637.926 mo
1365.97 637.926 1365.85 637.912 1365.72 637.883 cv
1350.5 634.257 1337.33 619.483 1326.6 593.971 cv
1318.69 575.184 1315.1 557.188 1315.07 557.008 cv
1314.9 556.156 1315.45 555.331 1316.3 555.163 cv
1316.41 555.143 1316.51 555.133 1316.61 555.133 cv
1317.35 555.133 1318 555.652 1318.15 556.401 cv
1318.29 557.104 1332.37 626.709 1366.45 634.826 cv
1367.3 635.027 1367.82 635.874 1367.62 636.718 cv
1367.44 637.441 1366.8 637.926 1366.09 637.926 cv
f
1375.63 595.275 mo
1374.94 595.275 1374.31 594.821 1374.11 594.126 cv
1370.73 582.014 1362.58 572.28 1356.09 566.081 cv
1354.86 563.439 1353.53 560.879 1352.08 558.402 cv
1358.51 563.423 1372.27 575.838 1377.14 593.281 cv
1377.37 594.117 1376.89 594.983 1376.05 595.217 cv
1375.91 595.256 1375.77 595.275 1375.63 595.275 cv
f
1356.09 566.081 mo
1351.1 561.313 1347.09 558.635 1347 558.575 cv
1346.27 558.098 1346.07 557.124 1346.55 556.399 cv
1346.85 555.94 1347.35 555.691 1347.86 555.691 cv
1348.16 555.691 1348.46 555.775 1348.73 555.95 cv
1348.93 556.084 1350.19 556.922 1352.08 558.402 cv
1353.53 560.879 1354.86 563.439 1356.09 566.081 cv
f
1302.41 716.087 mo
1303.44 718.437 1292.51 727.982 1282.76 728.73 cv
1273.01 729.479 1260.92 722.117 1261.13 719.393 cv
1261.36 716.53 1271.98 718.006 1281.57 717.292 cv
1291.82 716.527 1301.36 713.701 1302.41 716.087 cv
cp
1 1 1 rgb
f
1302.41 716.087 mo
1301.36 713.701 1291.82 716.527 1281.57 717.291 cv
1275.97 717.709 1270.01 717.378 1265.98 717.603 cv
1263.11 717.763 1261.23 718.203 1261.13 719.393 cv
1261.11 719.666 1270.06 722.745 1282.15 721.817 cv
1291.77 721.079 1302.49 716.264 1302.41 716.087 cv
cp
f
795.374 1216.92 mo
795.374 1216.92 791.801 1232.55 792.248 1245.06 cv
792.694 1257.56 789.568 1292.85 774.382 1290.17 cv
759.197 1287.49 756.964 1268.28 757.411 1260.24 cv
757.857 1252.2 765.45 1207.09 765.45 1207.09 cv
795.374 1216.92 li
cp
.952941 .901961 .878431 rgb
f
878.731 1209.36 mo
878.731 1209.36 888.334 1231.32 888.469 1246.08 cv
888.604 1260.85 888.679 1285.45 876.213 1284.36 cv
863.747 1283.27 859.185 1276.33 856.26 1263.66 cv
853.334 1250.98 856.322 1236.38 849.657 1218.15 cv
878.731 1209.36 li
f
932.488 1134.74 mo
932.488 1136.53 921.348 1159.2 908.37 1177.62 cv
894.525 1197.27 888.241 1213.72 883.067 1220.05 cv
874.364 1230.7 853.426 1233.22 849.657 1218.15 cv
833.374 1193.7 li
829.768 1193.51 826.352 1193.21 823.261 1192.72 cv
820.051 1192.22 817.164 1191.81 814.579 1191.46 cv
810.185 1198.26 800.286 1212.9 800.286 1212.9 cv
800.286 1212.9 795.82 1221.38 788.228 1225.4 cv
780.635 1229.42 773.936 1222.72 769.469 1218.26 cv
765.004 1213.79 752.944 1194.14 742.672 1171.36 cv
732.399 1148.58 722.573 1106.6 722.573 1106.6 cv
932.488 1134.74 li
.666667 .341176 .262745 rgb
f
907.9 1175.71 mo
907.671 1175.71 907.438 1175.66 907.22 1175.54 cv
902.852 1173.26 899.061 1169.91 896.258 1165.86 cv
895.796 1165.19 895.963 1164.27 896.632 1163.81 cv
896.887 1163.63 897.178 1163.55 897.467 1163.55 cv
897.934 1163.55 898.393 1163.77 898.679 1164.18 cv
901.211 1167.85 904.635 1170.87 908.582 1172.93 cv
909.303 1173.31 909.582 1174.2 909.206 1174.92 cv
908.943 1175.42 908.431 1175.71 907.9 1175.71 cv
.533333 .27451 .211765 rgb
f
742.92 1140.23 mo
740.4 1140.23 737.894 1139.92 735.441 1139.29 cv
734.654 1139.08 734.18 1138.28 734.382 1137.5 cv
734.552 1136.83 735.153 1136.39 735.808 1136.39 cv
735.928 1136.39 736.051 1136.41 736.172 1136.44 cv
738.386 1137 740.646 1137.29 742.918 1137.29 cv
743.658 1137.29 744.399 1137.26 745.14 1137.2 cv
745.18 1137.2 745.219 1137.19 745.259 1137.19 cv
746.017 1137.19 746.662 1137.78 746.726 1138.55 cv
746.792 1139.36 746.189 1140.07 745.379 1140.13 cv
744.559 1140.2 743.738 1140.23 742.92 1140.23 cv
f
976.196 1137.18 mo
976.196 1137.18 973.761 1151.06 968.552 1157.3 cv
963.343 1163.54 959.204 1175.63 958.615 1178.68 cv
958.026 1181.72 954.253 1195.54 955.926 1198 cv
957.6 1200.47 964.881 1197.74 964.881 1197.74 cv
964.881 1197.74 971.224 1205.54 976.211 1204.06 cv
981.198 1202.59 988.669 1195.77 990.581 1193.13 cv
992.492 1190.49 992.492 1190.49 992.492 1190.49 cv
992.492 1190.49 998.786 1189.76 998.913 1187.04 cv
999.04 1184.31 998.876 1168.61 999.035 1165.2 cv
999.193 1161.8 1002.15 1136.68 1002.15 1136.68 cv
976.196 1137.18 li
cp
.929412 .623529 .501961 rgb
f
972.616 1185.84 mo
972.082 1186.09 970.108 1187.24 968.363 1191.59 cv
969.729 1191.26 971.595 1191.23 973.947 1191.33 cv
974.082 1190.78 974.088 1189.73 974.091 1189.23 cv
974.093 1188.93 974.095 1188.66 974.105 1188.44 cv
974.107 1188.42 974.062 1186.14 972.616 1185.84 cv
cp
964.883 1199.45 mo
964.778 1199.45 964.672 1199.44 964.565 1199.42 cv
963.635 1199.25 963.022 1198.35 963.197 1197.42 cv
965.72 1183.97 971.487 1182.53 972.137 1182.41 cv
972.265 1182.39 972.396 1182.38 972.526 1182.39 cv
976.169 1182.56 977.645 1186.12 977.529 1188.6 cv
977.521 1188.78 977.52 1189.01 977.519 1189.25 cv
977.509 1190.77 977.497 1192.84 976.266 1194.01 cv
975.704 1194.54 974.992 1194.8 974.185 1194.77 cv
970.447 1194.59 969.234 1194.84 968.841 1195.02 cv
968.416 1195.54 967.73 1195.75 967.096 1195.6 cv
966.908 1196.36 966.73 1197.17 966.565 1198.05 cv
966.411 1198.88 965.691 1199.45 964.883 1199.45 cv
cp
.721569 .470588 .396078 rgb
f
979.831 929.715 mo
968.256 1043.61 li
972.276 1065.72 976.196 1137.18 976.196 1137.18 cv
1002.15 1136.68 li
1002.15 1136.68 1031.17 1010.23 1038.17 963.051 cv
1027.17 964.624 1018.01 955.516 1008.83 946.409 cv
999.771 937.411 990.699 928.413 979.831 929.715 cv
.929412 .623529 .501961 rgb
f
1043.25 902.94 mo
1037.42 882.115 1015.56 873.463 1015.56 873.463 cv
975.84 1003.46 li
986.461 1002.19 986.312 1010.6 995.727 1014.6 cv
1005.7 1018.83 1025.22 1018.68 1036.47 1017.07 cv
1041.88 980.588 1049.39 924.85 1043.25 902.94 cv
.470588 .168627 .227451 rgb
f
946.78 836.839 mo
1015.56 873.463 li
1015.56 873.463 984.297 1002.09 977.151 1020.85 cv
970.005 1039.61 961.072 1071.76 958.392 1088.74 cv
955.713 1105.71 943.685 1131.43 930.702 1139.65 cv
917.303 1148.14 912.837 1162.88 873.534 1160.2 cv
832.452 1157.4 769.916 1160.2 746.245 1132.06 cv
738.072 1122.34 725.253 1112.85 717.214 1102.14 cv
709.175 1091.42 715.428 1073.55 718.107 1061.94 cv
718.575 1059.91 719.452 1051.43 720.579 1038.81 cv
722.328 1019.24 712.624 985.092 714.998 954.254 cv
719.86 891.082 736.866 827.014 736.866 827.014 cv
835.124 817.187 li
946.78 836.839 li
f
875.24 931.565 mo
870.647 931.565 866.111 931.01 861.76 929.868 cv
843.529 925.087 827.035 909.767 817.637 888.887 cv
810.782 873.654 807.837 856.963 805.991 840.578 cv
806.085 840.585 806.176 840.592 806.27 840.6 cv
807.468 843.853 808.758 846.86 810.114 849.653 cv
811.999 862.698 814.925 875.69 820.321 887.679 cv
829.357 907.757 845.127 922.464 862.506 927.022 cv
866.621 928.102 870.917 928.628 875.264 928.628 cv
887.798 928.628 900.776 924.259 911.224 916.182 cv
913.25 914.616 915.216 912.894 917.07 911.063 cv
917.07 911.063 li
927.107 901.145 934.366 887.47 937.508 872.557 cv
937.76 871.361 938.003 869.954 938.046 868.546 cv
938.914 867.545 939.787 866.492 940.668 865.379 cv
940.69 865.385 940.713 865.392 940.735 865.398 cv
941.285 868.059 940.859 870.927 940.387 873.164 cv
937.127 888.635 929.581 902.838 919.138 913.155 cv
917.2 915.07 915.143 916.872 913.024 918.51 cv
902.064 926.982 888.425 931.565 875.24 931.565 cv
.576471 .333333 .380392 rgb
f
881.85 1136.55 mo
881.154 1136.55 880.536 1136.05 880.405 1135.35 cv
880.257 1134.55 880.785 1133.78 881.584 1133.63 cv
914.907 1127.46 li
916.197 1127.23 917.532 1126.98 918.622 1126.42 cv
919.51 1125.96 920.324 1125.25 921.149 1124.51 cv
929.398 1117.06 936.365 1108.39 941.86 1098.73 cv
942.131 1098.25 942.628 1097.98 943.14 1097.98 cv
943.387 1097.98 943.637 1098.05 943.867 1098.18 cv
944.573 1098.58 944.82 1099.48 944.418 1100.18 cv
938.768 1110.11 931.603 1119.03 923.122 1126.69 cv
922.147 1127.57 921.172 1128.41 919.97 1129.03 cv
918.494 1129.79 916.873 1130.09 915.443 1130.36 cv
882.119 1136.52 li
882.029 1136.54 881.939 1136.55 881.85 1136.55 cv
f
762.874 1099.06 mo
762.43 1099.06 761.99 1098.86 761.701 1098.48 cv
753.507 1087.68 745.776 1076.34 738.723 1064.77 cv
738.3 1064.08 738.52 1063.17 739.214 1062.75 cv
739.453 1062.6 739.717 1062.53 739.978 1062.53 cv
740.474 1062.53 740.958 1062.79 741.236 1063.24 cv
748.236 1074.72 755.911 1085.98 764.045 1096.7 cv
764.536 1097.35 764.41 1098.27 763.762 1098.76 cv
763.497 1098.96 763.184 1099.06 762.874 1099.06 cv
.376471 .133333 .180392 rgb
f
780.506 1129.82 mo
780.315 1129.82 780.122 1129.78 779.935 1129.7 cv
760.371 1121.45 li
759.622 1121.14 759.27 1120.28 759.586 1119.53 cv
759.823 1118.97 760.368 1118.63 760.941 1118.63 cv
761.132 1118.63 761.326 1118.67 761.513 1118.74 cv
781.077 1126.99 li
781.827 1127.31 782.178 1128.17 781.862 1128.92 cv
781.625 1129.48 781.079 1129.82 780.506 1129.82 cv
.576471 .333333 .380392 rgb
f
685.883 860.233 mo
685.883 860.233 600.615 927.932 586.748 949.161 cv
572.881 970.39 596.913 996.27 611.75 1013.98 cv
640.923 1048.8 667.482 1072.73 667.482 1072.73 cv
682.88 1046.89 li
653.419 988.979 li
706.122 939.356 li
685.883 860.233 li
cp
.917647 .619608 .509804 rgb
f
682.88 1046.89 mo
685.408 1048.63 688.895 1049.95 691.66 1049.15 cv
694.425 1048.36 710.473 1040.84 720.986 1038.85 cv
720.986 1038.85 723.756 1049.87 727.914 1055.46 cv
732.071 1061.06 744.876 1073.82 750.63 1075.45 cv
756.384 1077.08 779.819 1083.35 780.934 1085.47 cv
782.048 1087.59 781.403 1092.12 779.415 1092.33 cv
777.426 1092.54 772.786 1093.02 772.786 1093.02 cv
772.786 1093.02 772.501 1098.86 754.245 1099.42 cv
754.245 1099.42 746.885 1110.24 742.899 1108.42 cv
738.912 1106.6 731.045 1101.84 731.045 1101.84 cv
731.045 1101.84 729.844 1105.31 726.658 1104.75 cv
723.473 1104.19 705.584 1097.57 700.935 1095.82 cv
696.286 1094.07 687.618 1088.05 684.133 1084.62 cv
680.648 1081.18 667.482 1072.73 667.482 1072.73 cv
682.88 1046.89 li
cp
f
772.788 1094.52 mo
772.546 1094.5 li
771.997 1094.41 759.076 1092.31 757 1091.85 cv
754.896 1091.38 743.343 1086.16 741.048 1085.12 cv
740.295 1084.78 739.961 1083.89 740.304 1083.13 cv
740.646 1082.38 741.534 1082.05 742.288 1082.39 cv
747.49 1084.75 756.26 1088.62 757.648 1088.92 cv
759.641 1089.37 772.893 1091.52 773.026 1091.54 cv
773.843 1091.67 774.398 1092.44 774.265 1093.26 cv
774.146 1093.99 773.51 1094.52 772.788 1094.52 cv
cp
.713726 .470588 .403922 rgb
f
754.246 1100.92 mo
754.099 1100.92 753.95 1100.9 753.803 1100.85 cv
733.263 1094.5 li
732.472 1094.26 732.029 1093.42 732.273 1092.63 cv
732.518 1091.84 733.354 1091.39 734.147 1091.64 cv
754.688 1097.99 li
755.478 1098.23 755.921 1099.07 755.677 1099.86 cv
755.478 1100.5 754.885 1100.92 754.246 1100.92 cv
cp
f
731.044 1103.34 mo
730.838 1103.34 730.63 1103.29 730.43 1103.2 cv
720.354 1098.67 li
719.599 1098.33 719.262 1097.44 719.602 1096.69 cv
719.942 1095.93 720.829 1095.6 721.583 1095.94 cv
731.66 1100.47 li
732.415 1100.81 732.751 1101.7 732.412 1102.45 cv
732.162 1103.01 731.616 1103.34 731.044 1103.34 cv
cp
f
736.866 827.014 mo
727.61 828.528 703.916 835.936 689.533 845.859 cv
651.947 871.791 617.305 914.899 617.305 914.899 cv
617.305 914.899 622.227 935.633 635.516 952.556 cv
645.218 964.911 656.513 969.698 667.001 979.101 cv
678.15 989.098 688.242 1003.33 689.533 1003.33 cv
693.7 1003.33 727.035 968.606 727.035 968.606 cv
736.866 827.014 li
.470588 .168627 .227451 rgb
f
719.28 976.555 mo
720.164 975.659 721 974.808 721.769 974.024 cv
720.932 975.224 720.408 975.888 720.315 976.005 cv
720.051 976.337 719.672 976.524 719.28 976.555 cv
727.284 965.026 mo
727.808 957.476 li
730.592 951.657 733.554 944.388 736.085 935.787 cv
742.316 914.615 747.058 881.073 736.06 838.617 cv
736.669 829.842 li
738.45 835.811 739.923 841.62 741.123 847.259 cv
740.199 847.572 739.686 847.758 739.645 847.773 cv
738.882 848.054 738.492 848.9 738.773 849.662 cv
738.992 850.257 739.555 850.626 740.154 850.626 cv
740.322 850.626 740.494 850.596 740.662 850.534 cv
740.696 850.522 741.06 850.389 741.72 850.163 cv
749.14 887.552 744.616 917.293 738.864 936.768 cv
735.263 948.958 730.884 958.438 727.284 965.026 cv
.576471 .333333 .380392 rgb
f
719.164 976.56 mo
718.843 976.56 718.52 976.454 718.249 976.239 cv
717.613 975.733 717.508 974.808 718.013 974.172 cv
718.083 974.084 722.641 968.275 727.808 957.476 cv
727.284 965.026 li
725 969.205 723.029 972.219 721.769 974.024 cv
721 974.808 720.164 975.659 719.28 976.555 cv
719.241 976.558 719.203 976.56 719.164 976.56 cv
736.06 838.617 mo
735.286 835.627 734.434 832.596 733.498 829.519 cv
733.262 828.741 733.701 827.919 734.478 827.683 cv
734.621 827.639 734.766 827.619 734.908 827.619 cv
735.539 827.619 736.121 828.028 736.314 828.662 cv
736.434 829.057 736.552 829.449 736.669 829.842 cv
736.06 838.617 li
f
740.154 850.626 mo
739.555 850.626 738.992 850.257 738.773 849.662 cv
738.492 848.9 738.882 848.054 739.645 847.773 cv
739.686 847.758 740.199 847.572 741.123 847.259 cv
747.334 845.156 772.163 837.337 797.712 837.337 cv
800.21 837.337 802.712 837.412 805.207 837.574 cv
805.425 838.224 805.646 838.864 805.87 839.495 cv
805.91 839.855 805.95 840.218 805.991 840.578 cv
803.224 840.371 800.439 840.277 797.665 840.277 cv
772.04 840.277 747.093 848.322 741.72 850.163 cv
741.06 850.389 740.696 850.522 740.662 850.534 cv
740.494 850.596 740.322 850.626 740.154 850.626 cv
f
806.27 840.6 mo
806.176 840.592 806.085 840.585 805.991 840.578 cv
805.95 840.218 805.91 839.855 805.87 839.495 cv
806.003 839.867 806.135 840.234 806.27 840.6 cv
.662745 .466667 .505882 rgb
f
984.616 998.166 mo
984.471 998.166 984.324 998.145 984.178 998.1 cv
984.106 998.077 984.037 998.05 983.972 998.018 cv
987.364 985.632 991.453 969.926 995.546 953.876 cv
995.045 956.818 994.729 959.284 994.729 960.89 cv
994.729 969.045 986.375 995.989 986.02 997.132 cv
985.824 997.762 985.243 998.166 984.616 998.166 cv
1011.72 889.163 mo
1013.4 882.31 1014.63 877.275 1015.2 874.93 cv
1015.21 874.931 1015.21 874.932 1015.21 874.933 cv
1015.97 875.209 1016.37 876.052 1016.09 876.816 cv
1014.74 880.558 1013.23 884.812 1011.72 889.163 cv
.576471 .333333 .380392 rgb
f
983.972 998.018 mo
983.328 997.706 982.992 996.962 983.211 996.258 cv
983.296 995.982 991.787 968.602 991.787 960.89 cv
991.787 956.235 994.127 945.469 996.192 935.97 cv
997.736 928.868 999.194 922.159 999.194 920.146 cv
999.194 917.068 1003.91 902.759 1007.92 891.148 cv
1007.92 891.151 1007.93 891.154 1007.93 891.156 cv
1008.17 891.3 1008.43 891.369 1008.69 891.369 cv
1009.19 891.369 1009.67 891.116 1009.95 890.659 cv
1010.37 889.965 1010.15 889.059 1009.45 888.639 cv
1009.27 888.528 1009.09 888.418 1008.9 888.308 cv
1011.05 882.144 1012.84 877.177 1013.33 875.817 cv
1013.54 875.217 1014.11 874.844 1014.71 874.844 cv
1014.87 874.844 1015.04 874.872 1015.2 874.93 cv
1014.63 877.275 1013.4 882.31 1011.72 889.163 cv
1006.95 902.873 1002.14 917.54 1002.14 920.146 cv
1002.14 922.363 1000.97 927.841 999.068 936.596 cv
997.787 942.486 996.399 948.871 995.546 953.876 cv
991.453 969.926 987.364 985.632 983.972 998.018 cv
f
1008.69 891.369 mo
1008.43 891.369 1008.17 891.3 1007.93 891.156 cv
1007.93 891.154 1007.92 891.151 1007.92 891.148 cv
991.202 881.036 957.923 870.48 940.735 865.398 cv
940.729 865.371 940.724 865.344 940.718 865.316 cv
941.34 864.528 941.965 863.711 942.595 862.862 cv
959.958 868.002 991.875 878.199 1008.9 888.308 cv
1009.09 888.418 1009.27 888.528 1009.45 888.639 cv
1010.15 889.059 1010.37 889.965 1009.95 890.659 cv
1009.67 891.116 1009.19 891.369 1008.69 891.369 cv
f
940.735 865.398 mo
940.713 865.392 940.69 865.385 940.668 865.379 cv
940.685 865.358 940.701 865.337 940.718 865.316 cv
940.724 865.344 940.729 865.371 940.735 865.398 cv
.662745 .466667 .505882 rgb
f
873.25 780.14 mo
888.393 777.14 903.766 779.349 919.493 781.945 cv
930.638 783.783 944.124 785.919 953.534 777.679 cv
958.908 772.973 961.683 765.403 968.015 762.098 cv
970.691 776.03 975.734 789.505 982.865 801.77 cv
984.161 804.001 985.847 806.413 988.4 806.781 cv
990.987 807.155 993.411 805.158 994.561 802.81 cv
995.71 800.462 995.932 797.788 996.465 795.229 cv
996.645 794.364 996.881 793.471 997.462 792.805 cv
999.731 790.207 1002.58 789.861 1004.57 786.553 cv
1005.97 784.224 1006.83 781.021 1007.24 778.341 cv
1008.3 771.265 1006.77 762.995 1004.34 756.365 cv
1003.36 753.712 1002.13 751.049 1002.17 748.224 cv
1002.21 745.398 1004.02 742.336 1006.83 742.032 cv
1008.19 741.885 1009.53 742.39 1010.89 742.395 cv
1014.94 742.411 1017.69 738.176 1018.6 734.231 cv
1021.77 720.588 1012.88 707.467 1008.29 694.237 cv
1004.84 684.303 1003.77 673.709 1001.06 663.55 cv
998.344 653.391 993.542 643.163 984.785 637.34 cv
977.835 632.717 969.478 631.485 961.772 628.676 cv
954.778 626.126 949.653 621.553 943.334 617.835 cv
936.791 613.984 929.327 611 921.777 611.799 cv
918.084 612.189 914.148 613.438 910.815 611.801 cv
909.463 611.137 908.369 610.056 907.161 609.157 cv
901.763 605.137 894.357 604.961 887.786 606.416 cv
877.56 608.68 868.522 614.496 857.973 614.962 cv
852.564 615.2 847.195 614.57 841.823 613.94 cv
836.677 613.335 831.529 612.731 826.343 612.892 cv
813.65 613.286 819.076 622.1 813.596 629.277 cv
808.072 636.509 799.954 639.708 795.962 648.841 cv
793.999 653.329 793.139 658.204 791.914 662.946 cv
789.838 670.978 786.676 678.728 782.54 685.919 cv
779.842 690.609 776.662 695.249 775.888 700.604 cv
775.112 705.958 777.738 712.313 783.008 713.541 cv
783.654 713.692 784.408 713.821 784.739 714.396 cv
785.026 714.896 784.864 715.525 784.669 716.067 cv
782.657 721.691 777.97 726.554 778.05 732.526 cv
778.101 736.415 780.219 739.979 780.819 743.821 cv
782.134 752.245 776.114 760.023 774.943 768.469 cv
773.526 778.673 779.734 788.964 788.564 794.27 cv
797.393 799.577 808.318 800.478 818.49 798.843 cv
828.661 797.207 838.286 793.232 847.803 789.287 cv
852.141 787.489 856.479 785.692 860.817 783.894 cv
864.946 782.182 869.089 780.964 873.25 780.14 cv
.988235 .760784 .556863 rgb
f
825.673 655.227 mo
848.423 634.091 870.414 628.355 905.241 633.319 cv
940.068 638.282 959.173 650.87 974.634 677.187 cv
990.353 703.943 982.299 743.496 975.051 772.606 cv
967.804 801.716 963.292 829.023 950.205 851.272 cv
937.117 873.521 925.94 880.435 914.493 887.228 cv
902.956 894.074 884.278 901.796 867.323 899.379 cv
850.368 896.963 838.408 886.571 829.769 877.14 cv
819.812 866.269 808.241 852.962 802.095 826.51 cv
795.948 800.059 798.125 777.534 799.298 747.558 cv
800.471 717.583 800.442 678.668 825.673 655.227 cv
.929412 .623529 .501961 rgb
f
878.144 842.479 mo
871.281 842.479 864.857 840.419 858.953 836.311 cv
858.176 835.771 857.984 834.703 858.525 833.926 cv
859.065 833.147 860.135 832.958 860.91 833.498 cv
869.195 839.263 878.243 840.545 888.572 837.417 cv
889.48 837.141 890.435 837.655 890.709 838.56 cv
890.983 839.466 890.471 840.422 889.565 840.697 cv
885.64 841.886 881.829 842.479 878.144 842.479 cv
cp
.721569 .470588 .396078 rgb
f
902.889 628.538 mo
931.167 632.568 959.795 643.435 975.331 668.856 cv
994.107 699.579 990 737.135 984.87 770.795 cv
984.454 773.523 983.338 776.931 980.584 777.089 cv
975.682 777.37 971.452 769.841 969.94 765.985 cv
967.902 760.786 967.342 755.443 968.73 750.013 cv
970.111 744.613 972.316 739.009 970.803 733.645 cv
970.917 737.744 965.67 740.357 961.813 738.966 cv
957.955 737.577 955.595 733.65 954.334 729.747 cv
953.073 725.844 952.582 721.685 950.865 717.961 cv
947.019 709.616 938.041 705.206 930.443 700.04 cv
922.592 694.704 917.407 686.066 909.315 681.485 cv
901.758 677.206 892.754 680.219 887.364 686.77 cv
884.681 690.032 883.211 694.234 880.159 697.154 cv
875.359 701.747 867.94 702.042 861.332 701.359 cv
860.862 701.311 860.379 701.255 859.961 701.035 cv
859.353 700.714 858.966 700.092 858.677 699.469 cv
856.499 694.779 858.911 688.515 863.672 686.499 cv
858.678 685.933 854.38 690.255 849.383 690.78 cv
846.743 691.058 843.404 689.278 843.926 686.677 cv
841 689.782 835.952 688.33 831.704 687.93 cv
820.675 686.893 808.796 695.232 804.183 704.904 cv
802.356 708.734 802.089 713.087 801.514 717.291 cv
800.742 722.925 801.253 742.219 799.298 747.558 cv
798.172 750.635 796.019 746.722 793.168 745.104 cv
783.193 739.437 794.578 709.425 797.004 701.184 cv
800.798 688.293 805.737 675.571 812.901 664.15 cv
824.913 644.997 843.064 632 865.504 628.286 cv
877.855 626.242 890.539 626.778 902.889 628.538 cv
.988235 .760784 .556863 rgb
f
876.091 819.235 mo
874.742 819.235 873.54 819.008 872.63 818.694 cv
871.735 818.385 871.26 817.41 871.569 816.515 cv
871.878 815.621 872.855 815.147 873.748 815.454 cv
874.445 815.687 880.747 817.522 884.286 809.915 cv
885.458 807.396 887.063 801.047 888.058 785.111 cv
888.66 775.473 888.736 766.851 888.737 766.765 cv
888.745 765.824 889.511 765.066 890.45 765.066 cv
890.465 765.066 li
891.411 765.074 892.172 765.847 892.164 766.793 cv
892.164 766.88 892.086 775.59 891.479 785.324 cv
890.653 798.547 889.279 807.307 887.394 811.36 cv
884.513 817.554 879.761 819.235 876.091 819.235 cv
cp
.721569 .470588 .396078 rgb
f
849.669 768.437 mo
848.646 775.616 844.583 780.974 840.595 780.406 cv
836.607 779.837 834.203 773.557 835.226 766.378 cv
836.249 759.2 840.312 753.841 844.3 754.41 cv
848.288 754.978 850.692 761.259 849.669 768.437 cv
cp
.0941176 .0627451 .0588235 rgb
f
932.285 780.211 mo
931.262 787.39 927.2 792.748 923.211 792.18 cv
919.223 791.611 916.819 785.332 917.842 778.153 cv
918.865 770.975 922.928 765.616 926.917 766.184 cv
930.905 766.752 933.308 773.033 932.285 780.211 cv
cp
f
916.068 741 mo
913.036 743.475 913.5 750.362 918.17 751.224 cv
922.913 752.1 929.762 752.644 937.912 755.526 cv
945.799 758.315 954.369 763.972 958.297 763.398 cv
961.77 762.892 963.113 759.183 958.102 754.25 cv
953.43 749.652 946.919 745.358 938.788 742.792 cv
930.656 740.227 919.101 738.526 916.068 741 cv
cp
.988235 .760784 .556863 rgb
f
865.205 734.455 mo
867.361 737.721 864.862 744.156 860.148 743.585 cv
855.359 743.005 848.66 741.48 840.021 741.799 cv
831.662 742.107 821.793 744.949 818.216 743.229 cv
815.053 741.709 814.877 737.769 821.132 734.557 cv
826.963 731.562 834.459 729.407 842.986 729.385 cv
851.513 729.363 863.049 731.188 865.205 734.455 cv
cp
f
968.502 776.265 mo
978.536 767.046 996.253 780.946 990.831 800.176 cv
985.41 819.405 964.452 836.607 953.159 834.919 cv
941.866 833.23 954.98 788.688 968.502 776.265 cv
cp
.929412 .623529 .501961 rgb
f
972.827 811.688 mo
972.406 811.688 971.984 811.534 971.653 811.223 cv
970.964 810.575 970.931 809.49 971.579 808.801 cv
977.161 802.865 977.284 793.674 977.285 793.583 cv
977.291 792.64 978.057 791.878 978.999 791.878 cv
979.007 791.878 li
979.953 791.883 980.715 792.651 980.712 793.597 cv
980.71 794.027 980.6 804.212 974.075 811.148 cv
973.738 811.507 973.283 811.688 972.827 811.688 cv
cp
.721569 .470588 .396078 rgb
f
808.681 753.488 mo
801.622 741.833 780.728 750.231 780.562 770.209 cv
780.396 790.187 795.713 812.56 807.028 814.093 cv
818.343 815.627 818.194 769.194 808.681 753.488 cv
cp
.929412 .623529 .501961 rgb
f
796.72 786.139 mo
796.168 786.139 795.626 785.873 795.296 785.38 cv
795.057 785.023 789.449 776.52 790.974 767.12 cv
791.125 766.186 792.01 765.549 792.94 765.703 cv
793.874 765.854 794.509 766.735 794.357 767.669 cv
793.052 775.712 798.094 783.397 798.145 783.474 cv
798.669 784.261 798.457 785.325 797.671 785.85 cv
797.378 786.046 797.047 786.139 796.72 786.139 cv
cp
.721569 .470588 .396078 rgb
f
935.559 682.685 mo
935.443 682.685 935.326 682.672 935.208 682.643 cv
930.009 681.37 925.404 678.708 920.952 676.133 cv
919.097 675.06 917.179 673.951 915.565 672.341 cv
913.88 670.663 912.733 668.639 911.624 666.683 cv
911.049 665.666 910.505 664.707 909.892 663.793 cv
906.724 659.077 901.491 655.688 895.892 654.729 cv
895.091 654.591 894.553 653.831 894.69 653.03 cv
894.813 652.312 895.44 651.807 896.141 651.807 cv
896.223 651.807 896.306 651.814 896.389 651.828 cv
902.766 652.922 908.727 656.781 912.334 662.153 cv
913.01 663.159 913.607 664.213 914.184 665.232 cv
915.242 667.099 916.242 668.862 917.642 670.257 cv
918.985 671.596 920.734 672.607 922.425 673.586 cv
926.698 676.056 931.117 678.612 935.908 679.784 cv
936.697 679.978 937.18 680.774 936.987 681.563 cv
936.823 682.235 936.221 682.685 935.559 682.685 cv
.792157 .607843 .447059 rgb
f
978.11 743.769 mo
978.013 743.769 977.915 743.759 977.817 743.739 cv
977.021 743.578 976.506 742.802 976.667 742.005 cv
979.075 730.114 975.457 717.191 967.225 708.279 cv
966.674 707.683 966.711 706.752 967.307 706.201 cv
967.59 705.939 967.948 705.81 968.304 705.81 cv
968.701 705.81 969.096 705.969 969.386 706.283 cv
978.248 715.876 982.143 729.788 979.551 742.589 cv
979.41 743.287 978.796 743.769 978.11 743.769 cv
f
986.485 690.171 mo
986.362 690.171 986.237 690.155 986.113 690.122 cv
985.601 689.989 985.077 689.853 984.544 689.711 cv
984.211 688.591 983.858 687.478 983.483 686.369 cv
984.622 686.693 985.753 686.987 986.855 687.275 cv
987.641 687.48 988.112 688.284 987.908 689.07 cv
987.735 689.731 987.138 690.171 986.485 690.171 cv
f
984.544 689.711 mo
979.491 688.366 973.626 686.548 969.438 682.433 cv
968.233 681.249 967.218 679.926 966.235 678.647 cv
965.903 678.216 965.572 677.784 965.233 677.358 cv
961.94 673.215 956.407 667.772 948.75 665.362 cv
947.975 665.119 947.544 664.292 947.788 663.517 cv
947.986 662.889 948.565 662.487 949.19 662.487 cv
949.336 662.487 949.486 662.509 949.633 662.556 cv
956.256 664.639 962.447 669.125 967.537 675.527 cv
967.885 675.965 968.227 676.41 968.569 676.855 cv
969.532 678.109 970.442 679.294 971.501 680.334 cv
974.723 683.501 979.152 685.14 983.483 686.369 cv
983.858 687.478 984.211 688.591 984.544 689.711 cv
f
950.182 640.688 mo
950.006 640.678 li
943.584 639.913 937.18 637.89 931.485 634.825 cv
930.996 634.562 930.511 634.29 930.025 634.019 cv
928.394 633.106 926.852 632.245 925.198 631.698 cv
923.277 631.064 921.159 630.866 919.339 630.756 cv
917.914 630.669 916.488 630.626 915.063 630.626 cv
914.918 630.626 914.771 630.626 914.626 630.627 cv
910.907 629.824 907.161 629.159 903.421 628.615 cv
907.273 627.995 911.168 627.683 915.068 627.683 cv
916.551 627.683 918.034 627.728 919.517 627.818 cv
921.525 627.94 923.881 628.164 926.121 628.904 cv
928.042 629.538 929.78 630.511 931.461 631.45 cv
931.933 631.714 932.405 631.979 932.879 632.234 cv
938.253 635.125 944.295 637.034 950.354 637.756 cv
951.161 637.852 951.737 638.584 951.641 639.391 cv
951.552 640.139 950.917 640.688 950.182 640.688 cv
f
899.242 632.391 mo
898.572 632.391 897.964 631.926 897.81 631.242 cv
897.631 630.45 898.129 629.662 898.921 629.483 cv
900.413 629.147 901.914 628.857 903.421 628.615 cv
907.161 629.159 910.907 629.824 914.626 630.627 cv
909.564 630.659 904.518 631.237 899.569 632.354 cv
899.459 632.379 899.35 632.391 899.242 632.391 cv
f
856.005 676.946 mo
853.022 676.946 849.928 676.48 846.893 675.942 cv
846.092 675.801 845.558 675.037 845.7 674.237 cv
845.827 673.522 846.451 673.023 847.151 673.023 cv
847.235 673.023 847.32 673.03 847.405 673.045 cv
850.279 673.554 853.203 673.997 855.965 673.997 cv
859.164 673.997 862.148 673.402 864.588 671.625 cv
868.094 669.072 869.718 664.631 871.204 659.92 cv
871.402 659.291 871.984 658.89 872.608 658.89 cv
872.754 658.89 872.903 658.912 873.05 658.958 cv
873.825 659.203 874.255 660.029 874.011 660.804 cv
872.436 665.796 870.546 670.926 866.32 674.004 cv
863.277 676.22 859.728 676.946 856.005 676.946 cv
f
809.92 662.909 mo
809.576 662.909 809.23 662.788 808.95 662.543 cv
808.34 662.007 808.279 661.077 808.815 660.467 cv
811.876 656.98 816.047 654.417 821.438 652.73 cv
820.09 654.248 818.789 655.825 817.541 657.457 cv
814.924 658.786 812.761 660.433 811.026 662.408 cv
810.736 662.739 810.329 662.909 809.92 662.909 cv
f
817.541 657.457 mo
818.789 655.825 820.09 654.248 821.438 652.73 cv
824.502 651.772 827.96 651.096 831.834 650.695 cv
834.296 650.44 836.801 650.284 839.224 650.134 cv
844.783 649.79 850.531 649.434 855.856 647.838 cv
862.259 645.92 870.188 640.828 871.46 632.794 cv
871.575 632.069 872.2 631.553 872.913 631.553 cv
872.989 631.553 873.066 631.559 873.143 631.571 cv
873.946 631.698 874.493 632.452 874.366 633.254 cv
872.881 642.637 863.921 648.493 856.7 650.656 cv
851.051 652.35 845.131 652.716 839.406 653.071 cv
837.013 653.219 834.538 653.373 832.138 653.622 cv
826.232 654.233 821.394 655.5 817.541 657.457 cv
f
845.017 630.606 mo
838.541 630.606 832.073 628.96 826.401 625.818 cv
825.69 625.424 825.434 624.529 825.827 623.819 cv
826.096 623.334 826.598 623.061 827.116 623.061 cv
827.357 623.061 827.602 623.12 827.827 623.244 cv
833.063 626.144 839.034 627.664 845.012 627.664 cv
846.479 627.664 847.945 627.573 849.402 627.388 cv
849.465 627.38 849.527 627.376 849.589 627.376 cv
850.315 627.376 850.953 627.918 851.047 628.662 cv
851.149 629.468 850.579 630.204 849.773 630.306 cv
848.195 630.507 846.605 630.606 845.017 630.606 cv
f
330.141 1468.43 mo
330.141 1468.43 319.408 1482.51 315.901 1504.56 cv
312.681 1524.79 316.252 1544.04 328.226 1546.8 cv
340.199 1549.56 346.461 1544.67 354.615 1533.19 cv
358.701 1527.43 364.493 1517.48 368.048 1510.82 cv
373.893 1499.86 381.856 1489.82 381.856 1489.82 cv
330.141 1468.43 li
cp
.207843 .14902 .129412 rgb
f
548.175 1511.05 mo
548.175 1511.05 558.665 1544.86 555.63 1566.98 cv
552.844 1587.28 543.844 1604.67 531.585 1603.84 cv
519.326 1603.01 514.75 1596.51 510.277 1583.15 cv
508.036 1576.46 505.376 1565.26 503.906 1557.85 cv
501.49 1545.67 496.781 1533.75 496.781 1533.75 cv
548.175 1511.05 li
cp
f
315.101 1326.63 mo
315.101 1326.63 314.381 1360.77 318.572 1383.6 cv
322.552 1405.29 328.947 1469.34 328.947 1469.34 cv
328.947 1469.34 331.912 1480.66 346.736 1487.04 cv
364.481 1494.68 381.856 1489.82 381.856 1489.82 cv
390.887 1478.91 397.2 1465.57 405.604 1454.73 cv
412.42 1445.94 435.442 1409.2 432.282 1410.28 cv
315.101 1326.63 li
.65098 .788235 .898039 rgb
f
581.157 1363.21 mo
581.157 1363.21 578.824 1411.65 576.342 1433.52 cv
573.977 1454.36 568.089 1476.35 563.143 1492.56 cv
560.138 1502.42 551.101 1523.28 551.101 1523.28 cv
551.101 1523.28 542.391 1536.83 527.177 1539.85 cv
511.964 1542.86 496.628 1534.89 496.628 1534.89 cv
470.971 1413.32 li
581.157 1363.21 li
f
402.213 1131.33 mo
402.213 1131.33 350.975 1117.06 332.612 1119.26 cv
314.249 1121.46 283.375 1141.52 264.266 1177.66 cv
250.564 1203.59 228.582 1302.9 228.582 1302.9 cv
228.582 1302.9 228.918 1301.89 211.749 1315.02 cv
194.58 1328.15 199.132 1361.28 213.096 1373.6 cv
230.265 1388.75 261.945 1386.42 274.703 1364 cv
291.367 1334.71 305.338 1308.29 305.338 1308.29 cv
315.49 1338.46 li
315.49 1338.46 320.851 1366.87 338.33 1385.72 cv
345.668 1393.63 367.945 1397.16 372.277 1400.53 cv
380.35 1406.82 401.923 1414.77 421.146 1415.34 cv
436.809 1415.81 450.098 1418.03 468.277 1416.69 cv
486.457 1415.34 525.669 1414.91 557.49 1403.9 cv
598.141 1389.82 567.589 1360.13 567.589 1360.13 cv
567.589 1360.13 584.759 1319.73 590.145 1295.49 cv
595.532 1271.25 610.513 1249.37 610.513 1249.37 cv
653.436 1272.6 li
653.436 1272.6 611.646 1324.39 608.625 1343.79 cv
605.294 1365.18 620.903 1369.54 625.284 1366.13 cv
631.937 1360.95 707.606 1306.39 730.192 1275.63 cv
739.564 1262.87 740.123 1254.08 736.252 1243.31 cv
732.38 1232.54 709.992 1212 682.724 1188.78 cv
658.081 1167.78 610.712 1134.62 587.789 1129.19 cv
564.865 1123.76 500.005 1114.22 500.005 1114.22 cv
402.213 1131.33 li
.952941 .901961 .878431 rgb
f
655.815 1273.7 mo
655.129 1273.7 654.459 1273.35 654.075 1272.72 cv
653.49 1271.76 653.794 1270.51 654.755 1269.93 cv
661.446 1265.85 667.396 1263.65 672.944 1263.19 cv
673.004 1263.18 673.063 1263.18 673.122 1263.18 cv
674.164 1263.18 675.052 1263.99 675.14 1265.05 cv
675.232 1266.17 674.4 1267.15 673.28 1267.24 cv
668.378 1267.65 663.01 1269.66 656.871 1273.4 cv
656.541 1273.61 656.176 1273.7 655.815 1273.7 cv
.760784 .721569 .701961 rgb
f
551.87 1388.93 mo
551.449 1388.93 551.025 1388.8 550.661 1388.53 cv
485.53 1340.26 442.38 1287.4 441.952 1286.87 cv
441.244 1286 441.379 1284.72 442.252 1284.01 cv
442.629 1283.71 443.081 1283.56 443.531 1283.56 cv
444.124 1283.56 444.712 1283.82 445.114 1284.31 cv
445.539 1284.84 488.386 1337.31 553.084 1385.26 cv
553.987 1385.93 554.176 1387.2 553.507 1388.11 cv
553.108 1388.64 552.493 1388.93 551.87 1388.93 cv
f
381.228 1125.36 mo
381.228 1125.36 392.956 1234.14 442.214 1284.27 cv
442.214 1284.27 511.286 1217.11 534.28 1149.99 cv
381.228 1125.36 li
cp
.917647 .619608 .509804 rgb
f
307.102 1306.72 mo
306.848 1306.72 306.59 1306.67 306.341 1306.57 cv
305.299 1306.15 304.794 1304.96 305.215 1303.92 cv
305.931 1302.14 306.515 1300.66 306.962 1299.11 cv
308.9 1292.4 307.99 1285.38 307.026 1277.96 cv
306.557 1274.34 306.072 1270.61 305.944 1266.91 cv
305.675 1259.11 307.034 1251.15 309.874 1243.88 cv
310.189 1243.08 310.957 1242.59 311.77 1242.59 cv
312.017 1242.59 312.268 1242.63 312.511 1242.73 cv
313.558 1243.14 314.074 1244.32 313.665 1245.36 cv
311.025 1252.12 309.761 1259.52 310.011 1266.77 cv
310.133 1270.28 310.605 1273.91 311.062 1277.43 cv
312.037 1284.94 313.045 1292.71 310.872 1300.24 cv
310.332 1302.11 309.587 1303.96 308.989 1305.44 cv
308.67 1306.23 307.907 1306.72 307.102 1306.72 cv
.760784 .721569 .701961 rgb
f
608.625 1343.79 mo
606.899 1344.75 604.978 1345.33 603.252 1345.03 cv
600.649 1344.57 585.259 1339.25 575.46 1338.45 cv
575.46 1338.45 571.855 1348.89 568.6 1354.41 cv
565.343 1359.92 557.019 1372.71 551.92 1374.76 cv
546.821 1376.81 526.016 1384.81 525.203 1386.85 cv
524.39 1388.89 525.417 1392.97 527.254 1392.97 cv
529.091 1392.96 533.377 1392.96 533.377 1392.96 cv
533.377 1392.96 534.203 1398.26 550.938 1397.01 cv
550.938 1397.01 558.709 1406.18 562.176 1404.13 cv
565.642 1402.09 572.369 1396.97 572.369 1396.97 cv
572.369 1396.97 573.802 1400.03 576.659 1399.21 cv
579.515 1398.39 595.217 1390.61 599.296 1388.56 cv
603.375 1386.51 610.711 1380.17 613.563 1376.7 cv
615.593 1374.22 621.842 1368.96 625.284 1366.13 cv
614.414 1364.76 606.615 1355.62 608.625 1343.79 cv
cp
.917647 .619608 .509804 rgb
f
533.376 1394.33 mo
532.771 1394.33 532.216 1393.93 532.049 1393.32 cv
531.849 1392.59 532.281 1391.83 533.015 1391.63 cv
533.135 1391.6 545.034 1388.35 546.813 1387.75 cv
548.05 1387.33 555.689 1382.96 560.214 1380.29 cv
560.871 1379.91 561.713 1380.13 562.099 1380.78 cv
562.484 1381.44 562.266 1382.28 561.61 1382.67 cv
559.615 1383.84 549.565 1389.73 547.688 1390.36 cv
545.836 1390.98 534.233 1394.15 533.74 1394.29 cv
533.619 1394.32 533.497 1394.33 533.376 1394.33 cv
cp
.713726 .470588 .403922 rgb
f
550.938 1398.39 mo
550.404 1398.39 549.896 1398.07 549.672 1397.55 cv
549.373 1396.85 549.696 1396.04 550.395 1395.74 cv
568.546 1387.96 li
569.246 1387.66 570.055 1387.98 570.354 1388.68 cv
570.654 1389.38 570.331 1390.19 569.632 1390.49 cv
551.48 1398.28 li
551.303 1398.35 551.119 1398.39 550.938 1398.39 cv
cp
f
572.37 1398.35 mo
571.896 1398.35 571.436 1398.11 571.18 1397.67 cv
570.796 1397.01 571.018 1396.17 571.675 1395.78 cv
580.442 1390.67 li
581.1 1390.28 581.942 1390.5 582.325 1391.16 cv
582.708 1391.82 582.487 1392.66 581.83 1393.04 cv
573.063 1398.16 li
572.844 1398.29 572.605 1398.35 572.37 1398.35 cv
cp
f
252.178 1341.3 mo
254.665 1334.76 246.542 1313.52 248.168 1308.2 cv
249.795 1302.89 256.37 1294.2 259.356 1282.78 cv
260.85 1277.06 260.135 1268.21 260.171 1261.46 cv
260.207 1254.71 260.993 1250.05 261.534 1246.23 cv
262.458 1239.7 256.196 1240.08 253.534 1243.43 cv
250.871 1246.79 248.198 1254.94 248.376 1259.35 cv
248.555 1263.75 250.082 1273.39 246.64 1273.83 cv
243.197 1274.26 234.193 1258.63 231.942 1253.84 cv
229.691 1249.05 220.337 1226.17 216.59 1222.4 cv
214.265 1220.06 210.793 1220.33 210.447 1223.91 cv
210.101 1227.5 219.642 1253.92 218.115 1254.87 cv
216.589 1255.82 215.698 1255 214.427 1251.46 cv
213.157 1247.92 204.734 1227.64 201.336 1224.76 cv
198.817 1222.62 196.654 1223.55 195.902 1226.28 cv
195.15 1229.02 204.595 1258.05 204.891 1259.71 cv
205.186 1261.37 204.573 1262.36 203.398 1260.38 cv
202.222 1258.4 193.461 1236.37 189.942 1233.52 cv
186.423 1230.67 183.409 1232.05 183.494 1236.22 cv
183.572 1239.98 196.038 1270.71 195.321 1271.77 cv
194.604 1272.84 194.051 1271.76 192.831 1269.57 cv
191.61 1267.37 186.771 1254.27 183.854 1252.53 cv
181.722 1251.25 179.437 1252.84 179.042 1255.55 cv
178.646 1258.26 179.683 1272.09 185.132 1283.2 cv
189.605 1292.32 193.256 1303.44 199.938 1309.39 cv
205.868 1314.67 207.279 1324.35 208.145 1331.29 cv
209.012 1338.23 205.721 1344.04 210.119 1350.18 cv
212.544 1353.56 224.855 1358.2 235.357 1355.48 cv
243.896 1353.26 251.063 1344.24 252.178 1341.3 cv
cp
.917647 .619608 .509804 rgb
f
278.239 1332.71 mo
277.665 1332.71 277.095 1332.47 276.693 1332 cv
268.206 1322.1 254.783 1319.57 254.649 1319.55 cv
253.543 1319.35 252.808 1318.29 253.007 1317.18 cv
253.184 1316.2 254.04 1315.51 255.002 1315.51 cv
255.122 1315.51 255.244 1315.52 255.367 1315.54 cv
255.973 1315.65 270.33 1318.32 279.782 1329.35 cv
280.514 1330.2 280.415 1331.49 279.562 1332.22 cv
279.178 1332.55 278.707 1332.71 278.239 1332.71 cv
.760784 .721569 .701961 rgb
f
365.976 1391.64 mo
365.161 1391.64 364.392 1391.15 364.079 1390.35 cv
358.226 1375.29 354.065 1359.54 351.713 1343.56 cv
351.549 1342.45 352.317 1341.41 353.429 1341.25 cv
353.528 1341.23 353.626 1341.23 353.723 1341.23 cv
354.717 1341.23 355.59 1341.95 355.739 1342.97 cv
358.048 1358.65 362.13 1374.1 367.872 1388.87 cv
368.279 1389.92 367.76 1391.1 366.713 1391.51 cv
366.471 1391.6 366.221 1391.64 365.976 1391.64 cv
f
446.361 1136.37 mo
435.5 1136.82 425.055 1141.32 414.112 1138.18 cv
410.616 1137.17 407.262 1135.47 403.63 1135.27 cv
394.921 1134.79 388.053 1143.16 385.848 1151.6 cv
383.042 1162.33 387.291 1178.91 380.193 1187.93 cv
377.974 1190.75 374.561 1192.46 371.044 1193.17 cv
365.894 1194.22 360.359 1193.25 355.876 1190.51 cv
353.094 1188.81 350.663 1186.44 347.571 1185.4 cv
339.597 1182.74 331.664 1189.83 323.272 1190.35 cv
319.293 1190.6 315.321 1189.31 311.909 1187.25 cv
305.06 1183.11 300.288 1175.71 299.348 1167.76 cv
297.748 1154.23 306.141 1142.28 309.431 1129.67 cv
312.93 1116.26 311.134 1102.18 317.629 1089.33 cv
324.16 1076.41 336.948 1068.09 347.132 1057.8 cv
354.683 1050.16 360.921 1041.24 365.529 1031.55 cv
370.253 1021.61 370.555 1011.61 373.377 1001.15 cv
381.864 969.707 411.37 942.832 441.228 931.533 cv
453.843 926.76 467.586 924.664 481.011 926.449 cv
485.427 927.036 491.296 930.25 495.533 930.168 cv
495.64 930.166 534.321 929.443 562.748 966.829 cv
583.308 993.868 595.541 1031.73 586.875 1065.5 cv
582.902 1080.99 575.557 1100.14 587.491 1114.32 cv
592.286 1120.02 599.704 1123.3 603.641 1129.62 cv
608.606 1137.59 606.359 1148.64 600.098 1155.64 cv
593.837 1162.63 584.414 1166.08 575.096 1167.25 cv
555.855 1169.65 537.206 1163.42 518.811 1158.76 cv
503.316 1154.83 487.073 1154.68 473.016 1146.54 cv
463.661 1141.13 458.308 1135.86 446.361 1136.37 cv
.360784 .164706 .109804 rgb
f
430.694 948.069 mo
461.566 930.743 486.957 935.99 494.21 937.463 cv
501.463 938.936 526.889 944.015 548.552 972.014 cv
569.501 999.089 571.095 1032.08 560.307 1072.42 cv
549.52 1112.75 534.626 1144.99 513.696 1166.33 cv
492.766 1187.66 458.95 1198.08 441.964 1194.62 cv
424.978 1191.17 398.353 1171.07 388.705 1145.08 cv
379.056 1119.09 374.883 1077.27 380.69 1035.93 cv
386.497 994.581 400.841 964.823 430.694 948.069 cv
.917647 .619608 .509804 rgb
f
448.983 1196.82 mo
446.319 1196.82 443.858 1196.6 441.653 1196.15 cv
423.031 1192.37 396.724 1171.17 387.242 1145.63 cv
386.942 1144.82 387.354 1143.92 388.162 1143.62 cv
388.968 1143.32 389.867 1143.73 390.167 1144.54 cv
399.152 1168.74 424.84 1189.55 442.274 1193.1 cv
458.592 1196.41 491.493 1185.77 512.607 1165.21 cv
517.837 1160.12 520.486 1157.18 520.513 1157.15 cv
521.089 1156.51 522.076 1156.46 522.716 1157.04 cv
523.356 1157.61 523.408 1158.6 522.832 1159.24 cv
522.722 1159.36 520.097 1162.27 514.784 1167.44 cv
495.444 1186.28 467.395 1196.82 448.983 1196.82 cv
cp
.713726 .470588 .403922 rgb
f
434.744 1068.17 mo
433.392 1074.83 429.297 1079.62 425.599 1078.86 cv
421.901 1078.11 419.999 1072.11 421.351 1065.45 cv
422.704 1058.8 426.798 1054.01 430.496 1054.76 cv
434.194 1055.51 436.096 1061.52 434.744 1068.17 cv
cp
.0862745 .0509804 .0431373 rgb
f
511.349 1083.74 mo
509.997 1090.39 505.903 1095.18 502.205 1094.43 cv
498.506 1093.68 496.604 1087.67 497.957 1081.02 cv
499.309 1074.36 503.403 1069.57 507.102 1070.32 cv
510.8 1071.08 512.701 1077.08 511.349 1083.74 cv
cp
f
462.335 1123.12 mo
460.809 1123.12 459.456 1122.81 458.484 1122.41 cv
457.688 1122.08 457.308 1121.17 457.636 1120.37 cv
457.965 1119.57 458.879 1119.19 459.673 1119.52 cv
460.317 1119.78 466.142 1121.86 469.89 1114.9 cv
471.664 1111.61 473.358 1103.66 474.79 1091.9 cv
475.884 1082.92 476.43 1074.86 476.436 1074.78 cv
476.494 1073.92 477.235 1073.28 478.097 1073.33 cv
478.957 1073.39 479.606 1074.13 479.549 1074.99 cv
479.543 1075.07 478.991 1083.21 477.886 1092.28 cv
476.387 1104.59 474.621 1112.7 472.636 1116.38 cv
469.803 1121.64 465.658 1123.12 462.335 1123.12 cv
cp
.713726 .470588 .403922 rgb
f
449.544 1038.73 mo
451.309 1041.73 449.437 1046.71 444.63 1046.61 cv
440.34 1046.52 429.819 1042.98 422.129 1042.86 cv
414.689 1042.75 406.173 1045.14 404.623 1044.16 cv
403.046 1043.17 404.902 1039.88 410.608 1037.31 cv
415.926 1034.92 421.097 1031.86 430.056 1032.3 cv
439.015 1032.74 447.78 1035.73 449.544 1038.73 cv
cp
.360784 .164706 .109804 rgb
f
495.167 1048.05 mo
492.489 1050.27 492.563 1055.59 497.12 1057.13 cv
501.188 1058.49 512.285 1058.73 519.559 1061.23 cv
526.597 1063.64 533.799 1068.78 535.59 1068.38 cv
537.41 1067.98 536.777 1064.26 532.279 1059.91 cv
528.085 1055.86 523.713 1051.5 514.818 1048.48 cv
505.923 1045.47 497.844 1045.82 495.167 1048.05 cv
cp
f
386.983 1051.79 mo
381.024 1040.5 361.023 1047.2 359.766 1065.87 cv
358.51 1084.55 371.6 1106.31 382.097 1108.37 cv
392.593 1110.43 395.013 1067 386.983 1051.79 cv
.917647 .619608 .509804 rgb
f
546.465 1084.19 mo
556.356 1076.12 572.156 1090.1 566.027 1107.78 cv
559.897 1125.46 539.352 1140.39 528.885 1138.19 cv
518.417 1135.99 533.136 1095.06 546.465 1084.19 cv
cp
f
430.306 946.851 mo
461.497 929.345 487.152 934.646 494.48 936.135 cv
501.808 937.624 527.497 942.754 549.385 971.043 cv
570.55 998.399 572.161 1031.74 561.262 1072.49 cv
560.215 1076.4 557.732 1083.12 557.274 1082.87 cv
523.727 1064.65 541.678 1032.85 528.589 1010.48 cv
515.391 987.93 493.36 992.436 493.36 992.436 cv
470.709 981.37 451.198 991.998 431.848 1029.73 cv
412.096 1068.24 378.752 1046.41 378.752 1046.41 cv
378.574 1045.65 li
378.916 1042.31 379.315 1038.96 379.785 1035.62 cv
385.652 993.845 400.144 963.778 430.306 946.851 cv
.360784 .164706 .109804 rgb
f
548.652 1117.51 mo
548.238 1117.51 547.824 1117.35 547.518 1117.02 cv
546.926 1116.39 546.954 1115.41 547.58 1114.82 cv
553.141 1109.56 553.763 1100.96 553.769 1100.87 cv
553.824 1100.01 554.56 1099.37 555.425 1099.41 cv
556.284 1099.47 556.936 1100.21 556.882 1101.07 cv
556.857 1101.47 556.193 1110.97 549.723 1117.08 cv
549.421 1117.37 549.036 1117.51 548.652 1117.51 cv
cp
.713726 .470588 .403922 rgb
f
374.093 1081.62 mo
373.558 1081.62 373.038 1081.34 372.748 1080.85 cv
372.543 1080.5 367.777 1072.26 369.718 1063.57 cv
369.906 1062.73 370.742 1062.2 371.58 1062.39 cv
372.421 1062.57 372.951 1063.41 372.763 1064.25 cv
371.095 1071.72 375.395 1079.2 375.438 1079.27 cv
375.873 1080.01 375.623 1080.97 374.88 1081.4 cv
374.632 1081.55 374.361 1081.62 374.093 1081.62 cv
cp
f
560.701 1036.31 mo
560.671 1036.31 li
559.824 1036.31 559.128 1035.64 559.112 1034.78 cv
559.106 1034.49 558.383 1005.62 543.498 985.545 cv
531.438 969.278 508.897 967.8 501.101 967.8 cv
499.416 967.8 498.42 967.869 498.366 967.873 cv
498.324 967.876 498.282 967.878 498.241 967.878 cv
497.436 967.878 496.754 967.255 496.691 966.438 cv
496.624 965.58 497.264 964.829 498.124 964.762 cv
498.246 964.753 499.411 964.667 501.333 964.667 cv
504.555 964.667 509.904 964.909 516.046 966.162 cv
529.127 968.836 539.486 974.895 546.004 983.687 cv
561.495 1004.58 562.209 1033.5 562.232 1034.73 cv
562.248 1035.59 561.563 1036.3 560.701 1036.31 cv
.215686 .0980392 .0666667 rgb
f
493.777 947.389 mo
493.558 947.389 493.336 947.343 493.123 947.245 cv
492.944 947.162 479.956 941.26 465.396 941.26 cv
459.782 941.26 453.936 942.137 448.499 944.563 cv
448.292 944.655 448.076 944.699 447.864 944.699 cv
447.267 944.699 446.698 944.354 446.44 943.775 cv
446.088 942.988 446.441 942.065 447.228 941.714 cv
453.203 939.047 459.576 938.136 465.494 938.136 cv
470.405 938.136 475.002 938.764 478.796 939.534 cv
487.796 941.363 494.168 944.291 494.435 944.414 cv
495.216 944.777 495.556 945.704 495.194 946.485 cv
494.93 947.055 494.366 947.389 493.777 947.389 cv
f
380.389 1046.48 mo
379.604 1046.48 378.929 1045.89 378.84 1045.09 cv
378.746 1044.24 379.364 1043.47 380.22 1043.37 cv
414.794 1039.55 437.204 972.703 437.426 972.028 cv
437.642 971.372 438.252 970.955 438.907 970.955 cv
439.069 970.955 439.234 970.98 439.396 971.034 cv
440.215 971.304 440.659 972.185 440.39 973.003 cv
440.333 973.176 434.59 990.466 424.496 1008.01 cv
410.79 1031.82 396.008 1044.77 380.563 1046.47 cv
380.389 1046.48 li
f
376.222 1003.29 mo
376.021 1003.29 375.817 1003.25 375.62 1003.17 cv
374.826 1002.84 374.451 1001.92 374.784 1001.13 cv
381.723 984.541 396.802 973.997 403.75 969.838 cv
402.023 972.101 400.396 974.46 398.863 976.912 cv
391.709 982.224 382.481 990.814 377.662 1002.33 cv
377.411 1002.93 376.832 1003.29 376.222 1003.29 cv
f
398.863 976.912 mo
400.396 974.46 402.023 972.101 403.75 969.838 cv
405.798 968.612 407.14 967.941 407.358 967.833 cv
407.58 967.724 407.815 967.672 408.047 967.672 cv
408.622 967.672 409.175 967.992 409.446 968.543 cv
409.827 969.315 409.51 970.25 408.737 970.631 cv
408.64 970.68 404.365 972.826 398.863 976.912 cv
f
433.353 1131.29 mo
432.049 1133.48 441.644 1144.22 451.159 1146.16 cv
460.675 1148.09 473.495 1142.32 473.616 1139.61 cv
473.743 1136.76 463.095 1136.91 453.736 1135.03 cv
443.727 1133.02 434.677 1129.07 433.353 1131.29 cv
cp
1 1 1 rgb
f
433.353 1131.29 mo
434.677 1129.07 443.727 1133.02 453.736 1135.03 cv
459.206 1136.13 465.117 1136.53 469.059 1137.25 cv
471.861 1137.76 473.668 1138.42 473.616 1139.61 cv
473.604 1139.88 464.41 1141.82 452.612 1139.42 cv
443.223 1137.51 433.255 1131.45 433.353 1131.29 cv
cp
f
322.294 1160.69 mo
321.93 1160.69 321.564 1160.56 321.268 1160.3 cv
320.62 1159.73 320.553 1158.75 321.118 1158.1 cv
321.208 1158 330.169 1147.54 334.848 1127.54 cv
335.016 1126.82 335.657 1126.34 336.365 1126.34 cv
336.483 1126.34 336.603 1126.35 336.723 1126.38 cv
337.561 1126.58 338.083 1127.42 337.886 1128.25 cv
333.016 1149.07 323.855 1159.71 323.467 1160.15 cv
323.159 1160.51 322.728 1160.69 322.294 1160.69 cv
.215686 .0980392 .0666667 rgb
f
354.313 1189.47 mo
354.159 1189.42 354.011 1189.34 353.875 1189.23 cv
353.682 1189.08 353.494 1188.92 353.312 1188.76 cv
353.644 1189 353.978 1189.24 354.313 1189.47 cv
.572549 .541176 .52549 rgb
f
354.838 1189.57 mo
354.661 1189.57 354.483 1189.54 354.313 1189.47 cv
353.978 1189.24 353.644 1189 353.312 1188.76 cv
345.176 1181.45 347.328 1162.27 347.426 1161.44 cv
347.519 1160.65 348.184 1160.06 348.961 1160.06 cv
349.026 1160.06 349.091 1160.06 349.157 1160.07 cv
350.012 1160.17 350.625 1160.94 350.524 1161.8 cv
350.502 1161.99 348.379 1180.95 355.803 1186.78 cv
356.48 1187.31 356.598 1188.29 356.065 1188.97 cv
355.758 1189.36 355.3 1189.57 354.838 1189.57 cv
.215686 .0980392 .0666667 rgb
f
1396.85 1536.07 mo
1396.85 1536.07 1409.12 1555.99 1411.27 1570.24 cv
1413.41 1584.5 1416.84 1608.27 1404.64 1608.91 cv
1392.44 1609.56 1387.08 1603.47 1382.53 1591.62 cv
1377.97 1579.77 1378.87 1565.24 1369.94 1548.53 cv
1396.85 1536.07 li
cp
.952941 .901961 .878431 rgb
f
1188.34 1535.94 mo
1188.34 1535.94 1182.02 1550.26 1180.14 1562.33 cv
1178.25 1574.4 1168.72 1607.64 1154.66 1602.25 cv
1140.6 1596.87 1142.02 1578.05 1143.93 1570.43 cv
1145.85 1562.81 1161.48 1520.98 1161.48 1520.98 cv
1188.34 1535.94 li
cp
f
1230.66 1494.31 mo
1230.66 1494.31 1201.88 1528.46 1189.01 1539.47 cv
1176.14 1550.49 1160.17 1547.18 1155.76 1539.47 cv
1151.35 1531.76 1149.98 1459.48 1149.98 1459.48 cv
1230.66 1494.31 li
cp
.176471 .243137 .266667 rgb
f
1390.37 1448.33 mo
1399.87 1539.61 li
1400.01 1549.59 1389.88 1552.38 1370.13 1551.59 cv
1305 1500.37 li
1390.37 1448.33 li
cp
f
1046.75 1266 mo
1046.75 1266 946.646 1304.65 935.875 1324.93 cv
925.104 1345.2 952.348 1372.45 969.455 1384.48 cv
1010.72 1413.52 1091.08 1447.59 1091.08 1447.59 cv
1102.86 1423.04 li
1028.38 1364.21 li
1071.46 1335.7 li
1046.75 1266 li
.917647 .619608 .509804 rgb
f
1508.64 1250.8 mo
1508.64 1250.8 1569.46 1256.5 1587.83 1269.17 cv
1606.21 1281.84 1601.77 1304.65 1597.34 1312.26 cv
1592.9 1319.86 1551.2 1362.5 1527.49 1380.68 cv
1498.97 1402.54 1448.3 1434.05 1448.3 1434.05 cv
1431.97 1412.26 li
1499.45 1336.97 li
1508.64 1250.8 li
cp
f
1321.73 1226.72 mo
1321.73 1226.72 1389.78 1225.29 1437.04 1233.69 cv
1455.68 1237 1497.55 1240.03 1503.25 1242.88 cv
1508.95 1245.73 1516.21 1264.83 1518.11 1282.89 cv
1520.02 1300.95 1515.84 1333.9 1495.88 1341.5 cv
1475.92 1349.1 1404.93 1352.62 1404.93 1352.62 cv
1395.44 1400.07 1392.5 1458.74 1392.49 1458.87 cv
1392.23 1466.97 1381.73 1471.52 1375.4 1473.99 cv
1357.74 1480.92 1344.55 1494.37 1325.2 1498.68 cv
1309.93 1502.08 1294.08 1501.7 1278.47 1500.73 cv
1249.59 1498.93 1220.83 1495.16 1192.52 1489.16 cv
1182.99 1487.14 1171.53 1484.73 1163.88 1478.26 cv
1156.05 1471.65 1156.4 1462.61 1154.11 1452.95 cv
1150.74 1438.68 1135.02 1413.96 1131.65 1399.69 cv
1106.82 1369.8 li
1106.82 1369.8 1049.29 1381.32 1032.18 1379.42 cv
1015.07 1377.51 1012.54 1374.35 997.333 1349.64 cv
982.127 1324.93 988.462 1286.91 1001.13 1282.48 cv
1013.81 1278.04 1099.97 1240.03 1129.12 1237.49 cv
1158.26 1234.96 1295.12 1229.57 1295.12 1229.57 cv
1321.73 1226.72 li
.666667 .341176 .262745 rgb
f
1295.12 1229.57 mo
1325.53 1230.52 li
1325.53 1230.52 1304.05 1316.8 1263.17 1352.17 cv
1223.52 1321.32 1191.21 1250.16 1191.21 1250.16 cv
1295.12 1229.57 li
cp
.917647 .619608 .509804 rgb
f
1102.86 1423.04 mo
1105.28 1424.41 1108.53 1425.3 1110.96 1424.36 cv
1113.39 1423.43 1127.25 1415.33 1136.56 1412.68 cv
1136.56 1412.68 1139.96 1422.38 1144.17 1427.09 cv
1148.37 1431.8 1160.96 1442.26 1166.28 1443.26 cv
1171.6 1444.26 1193.25 1448 1194.43 1449.82 cv
1195.6 1451.64 1195.39 1455.78 1193.62 1456.13 cv
1191.84 1456.48 1187.7 1457.29 1187.7 1457.29 cv
1187.7 1457.29 1187.92 1462.58 1171.5 1464.58 cv
1171.5 1464.58 1165.75 1474.93 1162 1473.62 cv
1158.26 1472.31 1150.78 1468.65 1150.78 1468.65 cv
1150.78 1468.65 1149.98 1471.89 1147.06 1471.64 cv
1144.14 1471.39 1127.47 1466.88 1123.13 1465.68 cv
1118.8 1464.49 1110.49 1459.77 1107.07 1456.95 cv
1103.65 1454.14 1091.08 1447.59 1091.08 1447.59 cv
1102.86 1423.04 li
cp
f
1187.7 1458.65 mo
1187.6 1458.65 li
1187.1 1458.61 1175.27 1457.77 1173.37 1457.53 cv
1171.43 1457.28 1160.59 1453.51 1158.43 1452.76 cv
1157.72 1452.52 1157.35 1451.74 1157.6 1451.03 cv
1157.84 1450.33 1158.62 1449.95 1159.33 1450.2 cv
1164.21 1451.91 1172.43 1454.67 1173.71 1454.84 cv
1175.54 1455.07 1187.67 1455.93 1187.79 1455.94 cv
1188.54 1455.99 1189.1 1456.64 1189.05 1457.39 cv
1189 1458.1 1188.4 1458.65 1187.7 1458.65 cv
cp
.713726 .470588 .403922 rgb
f
1171.5 1465.94 mo
1171.41 1465.94 1171.31 1465.93 1171.22 1465.91 cv
1152.18 1461.86 li
1151.44 1461.71 1150.98 1460.98 1151.13 1460.25 cv
1151.29 1459.52 1152 1459.04 1152.74 1459.21 cv
1171.78 1463.25 li
1172.51 1463.41 1172.98 1464.13 1172.83 1464.86 cv
1172.69 1465.5 1172.13 1465.94 1171.5 1465.94 cv
cp
f
1150.78 1470.01 mo
1150.63 1470.01 1150.48 1469.99 1150.33 1469.94 cv
1140.88 1466.67 li
1140.17 1466.43 1139.79 1465.65 1140.04 1464.95 cv
1140.28 1464.24 1141.05 1463.86 1141.76 1464.11 cv
1151.22 1467.37 li
1151.93 1467.62 1152.3 1468.39 1152.06 1469.1 cv
1151.87 1469.66 1151.34 1470.01 1150.78 1470.01 cv
cp
f
1431.97 1412.26 mo
1429.86 1414.07 1426.84 1415.59 1424.28 1415.14 cv
1421.71 1414.69 1406.55 1409.45 1396.89 1408.66 cv
1396.89 1408.66 1395.45 1418.84 1392.24 1424.28 cv
1389.03 1429.71 1378.72 1442.42 1373.69 1444.44 cv
1368.67 1446.46 1348.16 1454.34 1347.36 1456.35 cv
1346.56 1458.37 1347.58 1462.39 1349.38 1462.38 cv
1351.2 1462.38 1355.42 1462.37 1355.42 1462.37 cv
1355.42 1462.37 1356.23 1467.6 1372.72 1466.37 cv
1372.72 1466.37 1380.38 1475.4 1383.8 1473.39 cv
1387.21 1471.37 1393.84 1466.33 1393.84 1466.33 cv
1393.84 1466.33 1395.26 1469.34 1398.07 1468.54 cv
1400.89 1467.73 1416.36 1460.06 1420.38 1458.04 cv
1424.4 1456.02 1431.63 1449.77 1434.44 1446.35 cv
1437.25 1442.92 1448.3 1434.05 1448.3 1434.05 cv
1431.97 1412.26 li
cp
.917647 .619608 .509804 rgb
f
1355.42 1463.73 mo
1354.82 1463.73 1354.27 1463.33 1354.11 1462.73 cv
1353.91 1462.01 1354.34 1461.26 1355.06 1461.07 cv
1355.18 1461.03 1366.91 1457.83 1368.66 1457.24 cv
1369.88 1456.83 1377.41 1452.52 1381.86 1449.89 cv
1382.51 1449.51 1383.34 1449.73 1383.72 1450.38 cv
1384.1 1451.02 1383.89 1451.85 1383.24 1452.23 cv
1381.27 1453.39 1371.37 1459.19 1369.52 1459.81 cv
1367.7 1460.43 1356.26 1463.55 1355.78 1463.68 cv
1355.66 1463.72 1355.54 1463.73 1355.42 1463.73 cv
cp
.713726 .470588 .403922 rgb
f
1372.72 1467.72 mo
1372.2 1467.72 1371.7 1467.42 1371.48 1466.9 cv
1371.18 1466.21 1371.5 1465.42 1372.19 1465.12 cv
1390.08 1457.45 li
1390.77 1457.15 1391.56 1457.47 1391.86 1458.16 cv
1392.15 1458.85 1391.83 1459.64 1391.15 1459.94 cv
1373.26 1467.61 li
1373.08 1467.69 1372.9 1467.72 1372.72 1467.72 cv
cp
f
1393.84 1467.69 mo
1393.38 1467.69 1392.92 1467.45 1392.67 1467.01 cv
1392.29 1466.37 1392.51 1465.54 1393.16 1465.16 cv
1401.8 1460.12 li
1402.45 1459.74 1403.28 1459.96 1403.66 1460.6 cv
1404.03 1461.25 1403.81 1462.08 1403.17 1462.46 cv
1394.53 1467.5 li
1394.31 1467.63 1394.08 1467.69 1393.84 1467.69 cv
cp
f
1144.01 1422.91 mo
1143.32 1422.91 1142.73 1422.39 1142.66 1421.69 cv
1140.91 1405.3 1138.92 1385.46 1139.39 1384.05 cv
1139.58 1383.48 1140.11 1383.12 1140.68 1383.12 cv
1140.82 1383.12 1140.97 1383.15 1141.11 1383.19 cv
1141.78 1383.42 1142.16 1384.12 1142.01 1384.79 cv
1141.82 1386.8 1143.96 1408.26 1145.36 1421.4 cv
1145.44 1422.15 1144.9 1422.82 1144.15 1422.9 cv
1144.01 1422.91 li
.533333 .27451 .211765 rgb
f
1400.66 1353.03 mo
1400.56 1353.02 li
1380.13 1351.6 li
1379.38 1351.55 1378.82 1350.9 1378.87 1350.15 cv
1378.92 1349.43 1379.5 1348.88 1380.23 1348.88 cv
1380.26 1348.88 1380.29 1348.88 1380.32 1348.89 cv
1400.75 1350.31 li
1401.5 1350.36 1402.07 1351.01 1402.01 1351.76 cv
1401.96 1352.48 1401.37 1353.03 1400.66 1353.03 cv
f
1344.23 1171.5 mo
1344.6 1167.22 1343.19 1163.52 1342.95 1159.35 cv
1342.52 1151.96 1344.13 1144.04 1344.49 1136.62 cv
1345.24 1120.74 1345.19 1104.82 1344.33 1088.94 cv
1343.65 1076.38 1341.65 1062.3 1331.58 1054.76 cv
1329.5 1053.2 1327.15 1051.99 1325.3 1050.16 cv
1320.94 1045.85 1320.21 1038.99 1316.41 1034.18 cv
1310.19 1026.32 1298.56 1026.5 1288.75 1024.48 cv
1281.44 1022.98 1274.56 1019.92 1267.39 1017.88 cv
1260.21 1015.83 1252.38 1014.83 1245.4 1017.45 cv
1241.99 1018.73 1238.55 1020.89 1234.98 1020.15 cv
1233.53 1019.86 1232.22 1019.1 1230.85 1018.54 cv
1224.73 1016.05 1217.65 1017.71 1211.76 1020.71 cv
1202.59 1025.38 1195.43 1033.14 1185.52 1036.18 cv
1175.56 1039.24 1164.93 1039.09 1154.93 1042.01 cv
1151.17 1043.11 1146.96 1045.39 1146.68 1049.3 cv
1146.49 1051.92 1148.21 1054.62 1147.24 1057.07 cv
1146.51 1058.93 1144.51 1059.88 1142.87 1061.03 cv
1132.82 1068.03 1134.13 1083.1 1134.78 1093.73 cv
1135.71 1108.83 1137.46 1123.93 1140.45 1138.77 cv
1144.1 1156.89 1155.16 1197.9 1155.19 1198.03 cv
1155.62 1199.6 1233.88 1186.99 1239.18 1186.24 cv
1260.22 1183.29 1281.25 1180.34 1302.29 1177.39 cv
1310.41 1176.25 1318.52 1175.11 1326.64 1173.97 cv
1330.9 1173.38 1337.5 1173.71 1341.43 1171.9 cv
1342.18 1171.55 1343.41 1171.63 1344.23 1171.5 cv
.552941 .282353 .219608 rgb
f
1164.73 1082.43 mo
1181.15 1056.73 1200.65 1045.85 1234.98 1041.99 cv
1269.32 1038.12 1290.59 1045.38 1311.77 1066.59 cv
1333.31 1088.16 1335.4 1127.75 1335.69 1157.21 cv
1335.97 1186.68 1338.41 1213.75 1331.45 1238.13 cv
1324.49 1262.51 1311.27 1280.26 1301.46 1288.16 cv
1291.93 1295.85 1276.89 1302.91 1264.51 1304.3 cv
1252.13 1305.69 1237.96 1302.38 1226.82 1296.57 cv
1214.16 1289.95 1196.89 1274.73 1184.53 1251.09 cv
1172.17 1227.46 1168.68 1205.51 1162.41 1176.72 cv
1156.14 1147.93 1146.52 1110.93 1164.73 1082.43 cv
.917647 .619608 .509804 rgb
f
1261.21 1305.92 mo
1247.73 1305.92 1225.95 1298.91 1215.37 1290.79 cv
1214.74 1290.31 1214.62 1289.4 1215.11 1288.77 cv
1215.59 1288.14 1216.5 1288.02 1217.13 1288.5 cv
1228.22 1297 1252.06 1304.25 1264.35 1302.86 cv
1275.69 1301.59 1290.58 1295.08 1300.56 1287.04 cv
1301.18 1286.54 1302.09 1286.64 1302.59 1287.26 cv
1303.09 1287.88 1302.99 1288.79 1302.37 1289.29 cv
1292.01 1297.64 1276.51 1304.4 1264.67 1305.74 cv
1263.59 1305.86 1262.43 1305.92 1261.21 1305.92 cv
cp
.713726 .470588 .403922 rgb
f
1233.89 1240.97 mo
1233.07 1244.74 1245.34 1252.53 1255.43 1251.83 cv
1267.97 1250.95 1275.56 1244.82 1274.09 1238.85 cv
1273.44 1236.15 1263.66 1240.92 1254.54 1241.34 cv
1245.41 1241.77 1234.36 1238.81 1233.89 1240.97 cv
cp
1 1 1 rgb
f
1231.57 1038.02 mo
1259.45 1034.88 1289.35 1038.16 1310.38 1058.5 cv
1335.81 1083.08 1341.16 1119.8 1344.58 1153.07 cv
1344.85 1155.77 1344.63 1159.28 1342.05 1160.11 cv
1336.73 1161.82 1325.8 1149.8 1324.88 1146.52 cv
1322.98 1139.74 1321.05 1132.9 1317.7 1126.7 cv
1314.35 1120.51 1309.4 1114.93 1302.93 1112.15 cv
1298.1 1110.07 1292.74 1109.65 1287.5 1109.27 cv
1278.14 1108.59 1268.53 1107.88 1260.02 1103.91 cv
1253.11 1100.68 1247.3 1095.45 1240.45 1092.08 cv
1237.24 1090.5 1224.81 1087.75 1222.41 1091.04 cv
1221.57 1092.2 1221.67 1095.31 1221.36 1096.75 cv
1220.92 1098.84 1220.39 1100.92 1219.64 1102.92 cv
1218.25 1106.65 1216.16 1110.14 1212.94 1112.56 cv
1206.38 1117.47 1197.34 1116.63 1189.18 1115.8 cv
1177.75 1114.64 1168.4 1116.01 1161.12 1125.57 cv
1158.99 1128.37 1157.21 1131.51 1156.54 1134.96 cv
1155.75 1139.05 1156.57 1143.25 1157.06 1147.39 cv
1157.71 1152.94 1162.95 1171.16 1162.41 1176.72 cv
1162.1 1179.92 1159.09 1176.73 1155.98 1175.89 cv
1145.1 1172.96 1148.52 1141.62 1148.8 1133.19 cv
1149.23 1120 1150.79 1106.69 1154.79 1094.06 cv
1161.49 1072.89 1175.54 1056.06 1195.96 1047 cv
1207.2 1042.01 1219.39 1039.39 1231.57 1038.02 cv
.552941 .282353 .219608 rgb
f
1250.04 1226.05 mo
1249.82 1226.05 1249.7 1226.04 1249.69 1226.04 cv
1248.89 1225.98 1248.3 1225.28 1248.36 1224.49 cv
1248.42 1223.69 1249.13 1223.11 1249.91 1223.16 cv
1250.2 1223.18 1257.26 1223.57 1258.82 1215.1 cv
1259.53 1211.22 1258.66 1202.71 1256.29 1190.5 cv
1254.49 1181.18 1252.43 1172.96 1252.41 1172.88 cv
1252.22 1172.1 1252.69 1171.32 1253.46 1171.12 cv
1254.24 1170.92 1255.02 1171.4 1255.22 1172.17 cv
1255.24 1172.26 1257.31 1180.55 1259.13 1189.95 cv
1261.6 1202.7 1262.45 1211.33 1261.66 1215.62 cv
1259.85 1225.49 1251.84 1226.05 1250.04 1226.05 cv
cp
.713726 .470588 .403922 rgb
f
1215.45 1184.15 mo
1216.25 1191.23 1213.7 1197.33 1209.77 1197.77 cv
1205.84 1198.21 1202.01 1192.83 1201.21 1185.76 cv
1200.41 1178.68 1202.96 1172.58 1206.89 1172.14 cv
1210.82 1171.7 1214.65 1177.08 1215.45 1184.15 cv
cp
.0862745 .0509804 .0431373 rgb
f
1296.9 1174.98 mo
1297.7 1182.06 1295.16 1188.16 1291.22 1188.6 cv
1287.29 1189.04 1283.46 1183.67 1282.66 1176.59 cv
1281.87 1169.51 1284.41 1163.41 1288.34 1162.97 cv
1292.27 1162.53 1296.11 1167.91 1296.9 1174.98 cv
cp
f
1267.2 1143.52 mo
1265.22 1146.82 1267.95 1153.02 1272.56 1152.26 cv
1277.23 1151.48 1283.74 1149.7 1292.23 1149.64 cv
1300.44 1149.58 1310.25 1151.94 1313.69 1150.1 cv
1316.72 1148.47 1316.73 1144.59 1310.45 1141.71 cv
1304.6 1139.03 1297.15 1137.23 1288.78 1137.58 cv
1280.41 1137.93 1269.17 1140.22 1267.2 1143.52 cv
cp
.552941 .282353 .219608 rgb
f
1222.36 1148.57 mo
1225.01 1151.34 1223.73 1158 1219.08 1158.28 cv
1214.35 1158.56 1207.6 1158.27 1199.31 1160.09 cv
1191.29 1161.86 1182.25 1166.34 1178.49 1165.31 cv
1175.17 1164.4 1174.31 1160.62 1179.79 1156.42 cv
1184.89 1152.5 1191.76 1149.1 1199.99 1147.58 cv
1208.23 1146.05 1219.7 1145.79 1222.36 1148.57 cv
cp
f
1330.36 1162.31 mo
1337.63 1151.07 1357.9 1159.92 1357.49 1179.54 cv
1357.07 1199.16 1341.39 1220.68 1330.23 1221.86 cv
1319.08 1223.03 1320.57 1177.45 1330.36 1162.31 cv
cp
.917647 .619608 .509804 rgb
f
1342.78 1194.74 mo
1342.55 1194.74 1342.31 1194.68 1342.09 1194.56 cv
1341.39 1194.17 1341.13 1193.3 1341.52 1192.6 cv
1345.41 1185.49 1343.24 1176.64 1343.21 1176.55 cv
1343.02 1175.77 1343.49 1174.99 1344.26 1174.79 cv
1345.03 1174.59 1345.82 1175.06 1346.01 1175.83 cv
1346.12 1176.24 1348.5 1185.86 1344.05 1193.99 cv
1343.79 1194.46 1343.29 1194.74 1342.78 1194.74 cv
cp
.713726 .470588 .403922 rgb
f
1172.79 1180.04 mo
1163.21 1170.7 1145.41 1183.83 1150.18 1202.87 cv
1154.95 1221.91 1175.02 1239.4 1186.16 1238.07 cv
1197.3 1236.74 1185.71 1192.63 1172.79 1180.04 cv
cp
.917647 .619608 .509804 rgb
f
1169.05 1213.85 mo
1168.71 1213.85 1168.36 1213.73 1168.09 1213.49 cv
1167.77 1213.21 1160.41 1206.57 1159.56 1197.35 cv
1159.48 1196.55 1160.07 1195.85 1160.86 1195.77 cv
1161.65 1195.69 1162.36 1196.28 1162.43 1197.08 cv
1163.19 1205.18 1169.94 1211.27 1170.01 1211.33 cv
1170.6 1211.86 1170.66 1212.77 1170.13 1213.37 cv
1169.84 1213.69 1169.44 1213.85 1169.05 1213.85 cv
cp
.713726 .470588 .403922 rgb
f
1275.24 1081.73 mo
1270.09 1081.73 1265.17 1080.36 1260.41 1079.04 cv
1258.37 1078.47 1256.26 1077.89 1254.3 1076.74 cv
1252.26 1075.54 1250.66 1073.89 1249.11 1072.29 cv
1248.32 1071.47 1247.57 1070.7 1246.76 1069.99 cv
1243.05 1066.69 1238.02 1064.8 1233.04 1064.8 cv
1232.49 1064.8 1231.94 1064.83 1231.39 1064.87 cv
1231.34 1064.88 1231.3 1064.88 1231.25 1064.88 cv
1230.4 1064.88 1229.66 1064.22 1229.58 1063.35 cv
1229.51 1062.43 1230.19 1061.62 1231.11 1061.54 cv
1231.74 1061.49 1232.37 1061.46 1233 1061.46 cv
1238.8 1061.46 1244.66 1063.64 1248.99 1067.48 cv
1249.88 1068.28 1250.71 1069.14 1251.52 1069.97 cv
1252.97 1071.47 1254.35 1072.89 1255.99 1073.85 cv
1257.58 1074.78 1259.47 1075.31 1261.31 1075.82 cv
1265.87 1077.08 1270.57 1078.38 1275.29 1078.38 cv
1275.39 1078.38 1275.49 1078.38 1275.59 1078.38 cv
1275.61 1078.38 li
1276.53 1078.38 1277.27 1079.11 1277.28 1080.03 cv
1277.3 1080.95 1276.56 1081.71 1275.64 1081.72 cv
1275.5 1081.73 1275.37 1081.73 1275.24 1081.73 cv
.443137 .227451 .176471 rgb
f
1331.12 1129.31 mo
1330.24 1129.31 1329.5 1128.62 1329.46 1127.73 cv
1328.82 1115.9 1322.23 1104.58 1312.27 1098.17 cv
1311.49 1097.67 1311.27 1096.64 1311.77 1095.86 cv
1312.09 1095.36 1312.63 1095.09 1313.18 1095.09 cv
1313.49 1095.09 1313.8 1095.18 1314.08 1095.36 cv
1324.93 1102.34 1332.1 1114.67 1332.8 1127.55 cv
1332.85 1128.47 1332.14 1129.26 1331.22 1129.31 cv
1331.12 1129.31 li
f
1325.88 1076.29 mo
1325.87 1076.29 li
1325.4 1076.29 1324.91 1076.29 1324.42 1076.29 cv
1323.74 1075.15 1323.03 1074.02 1322.3 1072.91 cv
1323.51 1072.94 1324.71 1072.94 1325.88 1072.94 cv
1326.8 1072.95 1327.55 1073.7 1327.55 1074.62 cv
1327.55 1075.54 1326.8 1076.29 1325.88 1076.29 cv
f
1324.42 1076.29 mo
1319.23 1076.26 1313.1 1075.99 1308.01 1073.06 cv
1306.56 1072.22 1305.27 1071.21 1304.01 1070.23 cv
1303.59 1069.9 1303.17 1069.58 1302.74 1069.25 cv
1298.61 1066.15 1292.05 1062.36 1284.24 1061.96 cv
1283.31 1061.91 1282.6 1061.12 1282.65 1060.2 cv
1282.7 1059.31 1283.42 1058.61 1284.31 1058.61 cv
1284.34 1058.61 1284.37 1058.61 1284.41 1058.62 cv
1291.26 1058.97 1298.3 1061.72 1304.75 1066.58 cv
1305.19 1066.91 1305.63 1067.26 1306.07 1067.59 cv
1307.29 1068.54 1308.44 1069.44 1309.68 1070.16 cv
1313.44 1072.32 1317.95 1072.8 1322.3 1072.91 cv
1323.03 1074.02 1323.74 1075.15 1324.42 1076.29 cv
f
1272.45 1038.65 mo
1271.14 1038.65 1269.83 1038.6 1268.52 1038.5 cv
1266.57 1038.17 1264.6 1037.91 1262.63 1037.69 cv
1261.83 1037.54 1261.04 1037.36 1260.25 1037.17 cv
1259.72 1037.04 1259.19 1036.9 1258.66 1036.76 cv
1256.9 1036.3 1255.23 1035.86 1253.54 1035.75 cv
1253.24 1035.73 1252.94 1035.72 1252.64 1035.72 cv
1250.97 1035.72 1249.28 1036.01 1247.8 1036.3 cv
1246.63 1036.53 1245.46 1036.79 1244.31 1037.07 cv
1240.04 1037.22 1235.78 1037.55 1231.57 1038.02 cv
1231.49 1038.03 1231.42 1038.04 1231.34 1038.05 cv
1236.4 1035.77 1241.71 1034.08 1247.16 1033.01 cv
1248.8 1032.69 1250.7 1032.38 1252.65 1032.38 cv
1253.02 1032.38 1253.39 1032.39 1253.76 1032.42 cv
1255.77 1032.55 1257.67 1033.05 1259.51 1033.53 cv
1260.02 1033.66 1260.53 1033.8 1261.05 1033.92 cv
1264.77 1034.83 1268.65 1035.29 1272.52 1035.29 cv
1274.67 1035.29 1276.82 1035.15 1278.94 1034.86 cv
1279.02 1034.85 1279.09 1034.84 1279.17 1034.84 cv
1279.99 1034.84 1280.71 1035.46 1280.82 1036.29 cv
1280.95 1037.21 1280.3 1038.05 1279.39 1038.18 cv
1277.08 1038.49 1274.76 1038.65 1272.45 1038.65 cv
f
1228.69 1042.86 mo
1228.08 1042.86 1227.5 1042.52 1227.2 1041.95 cv
1226.78 1041.13 1227.1 1040.12 1227.92 1039.7 cv
1229.05 1039.12 1230.19 1038.57 1231.34 1038.05 cv
1231.42 1038.04 1231.49 1038.03 1231.57 1038.02 cv
1235.78 1037.55 1240.04 1037.22 1244.31 1037.07 cv
1239.16 1038.36 1234.18 1040.24 1229.45 1042.67 cv
1229.21 1042.8 1228.95 1042.86 1228.69 1042.86 cv
1268.52 1038.5 mo
1266.55 1038.34 1264.58 1038.08 1262.63 1037.69 cv
1264.6 1037.91 1266.57 1038.17 1268.52 1038.5 cv
f
1188.88 1104.82 mo
1188.02 1104.82 1187.29 1104.16 1187.22 1103.28 cv
1187.15 1102.36 1187.83 1101.55 1188.75 1101.48 cv
1194.87 1101 1201.13 1100.18 1204.58 1095.98 cv
1207.24 1092.74 1207.69 1088.16 1207.94 1083.35 cv
1207.98 1082.47 1208.68 1081.76 1209.58 1081.76 cv
1209.62 1081.76 1209.66 1081.77 1209.69 1081.77 cv
1210.62 1081.82 1211.32 1082.6 1211.28 1083.52 cv
1211.01 1088.7 1210.47 1094.08 1207.17 1098.1 cv
1202.88 1103.32 1195.85 1104.28 1189.02 1104.82 cv
1188.88 1104.82 li
f
1151.28 1093.89 mo
1151.03 1093.89 1150.77 1093.83 1150.53 1093.71 cv
1149.71 1093.29 1149.37 1092.29 1149.79 1091.46 cv
1151.91 1087.26 1155.37 1083.7 1160.29 1080.71 cv
1159.23 1082.76 1158.24 1084.88 1157.34 1087.04 cv
1155.38 1088.85 1153.86 1090.82 1152.78 1092.97 cv
1152.48 1093.55 1151.89 1093.89 1151.28 1093.89 cv
f
1157.34 1087.04 mo
1158.24 1084.88 1159.23 1082.76 1160.29 1080.71 cv
1162.91 1079.11 1165.94 1077.68 1169.39 1076.39 cv
1171.67 1075.54 1174.02 1074.77 1176.29 1074.03 cv
1181.72 1072.26 1186.84 1070.59 1191.49 1067.77 cv
1197.05 1064.4 1203.27 1057.68 1202.51 1049.84 cv
1202.42 1048.92 1203.09 1048.1 1204.01 1048.01 cv
1204.06 1048.01 1204.12 1048 1204.17 1048 cv
1205.02 1048 1205.75 1048.65 1205.84 1049.51 cv
1206.75 1058.91 1199.61 1066.76 1193.22 1070.63 cv
1188.25 1073.65 1182.7 1075.46 1177.33 1077.21 cv
1175.09 1077.94 1172.78 1078.7 1170.56 1079.52 cv
1164.92 1081.63 1160.54 1084.11 1157.34 1087.04 cv
f
1167.52 1055.69 mo
1164.35 1055.69 1161.19 1055.3 1158.12 1054.51 cv
1157.22 1054.28 1156.68 1053.37 1156.92 1052.47 cv
1157.11 1051.72 1157.79 1051.21 1158.53 1051.21 cv
1158.67 1051.21 1158.81 1051.23 1158.95 1051.27 cv
1161.75 1051.99 1164.64 1052.35 1167.53 1052.35 cv
1171.9 1052.35 1176.28 1051.53 1180.35 1049.9 cv
1180.55 1049.82 1180.76 1049.78 1180.97 1049.78 cv
1181.63 1049.78 1182.26 1050.18 1182.52 1050.83 cv
1182.86 1051.69 1182.44 1052.66 1181.59 1053.01 cv
1177.12 1054.79 1172.32 1055.69 1167.52 1055.69 cv
f
784.448 1770.85 mo
784.448 1770.85 778.783 1785.33 781.141 1804.78 cv
783.304 1822.64 790.962 1838.03 801.735 1837.47 cv
812.508 1836.91 816.615 1831.27 820.727 1819.61 cv
822.787 1813.76 825.277 1803.97 826.67 1797.49 cv
828.961 1786.83 833.26 1776.43 833.26 1776.43 cv
784.448 1770.85 li
cp
.176471 .243137 .266667 rgb
f
791.727 1773.35 mo
791.727 1773.35 787.769 1786.55 791.287 1797.76 cv
794.805 1808.98 806.24 1808.98 813.497 1803.92 cv
820.754 1798.86 826.251 1775.77 826.251 1775.77 cv
791.727 1773.35 li
cp
.917647 .619608 .509804 rgb
f
965.235 1766.63 mo
965.235 1766.63 979.761 1793.15 979.425 1812.75 cv
979.117 1830.73 973.088 1846.83 962.315 1847.39 cv
951.542 1847.95 947.855 1841.03 942.562 1829.85 cv
939.909 1824.25 936.084 1813.38 935.154 1806.81 cv
933.219 1793.14 934.757 1783.16 934.757 1783.16 cv
965.235 1766.63 li
cp
.176471 .243137 .266667 rgb
f
734.195 1648.92 mo
734.195 1648.92 745.173 1683.77 754.22 1702.04 cv
762.81 1719.38 777.363 1738.31 777.363 1738.31 cv
783.659 1771.91 li
783.659 1771.91 788.891 1780.75 802.944 1782.56 cv
819.765 1784.72 833.26 1776.43 833.26 1776.43 cv
838.253 1765.05 840.363 1752.26 844.843 1741.09 cv
848.476 1732.02 857.862 1692.51 855.457 1694.19 cv
734.195 1648.92 li
cp
.952941 .901961 .878431 rgb
f
970.15 1781.27 mo
970.15 1781.27 974.108 1794.46 970.59 1805.68 cv
967.071 1816.89 955.636 1816.89 948.379 1811.83 cv
941.123 1806.78 935.625 1783.69 935.625 1783.69 cv
970.15 1781.27 li
cp
.917647 .619608 .509804 rgb
f
990.359 1653.53 mo
990.359 1653.53 991.568 1679.33 988.584 1697.5 cv
985.601 1715.68 974.661 1732.74 974.661 1732.74 cv
974.661 1732.74 978.498 1743.93 975.88 1758.58 cv
974.29 1767.49 970.751 1779.03 970.751 1779.03 cv
970.751 1779.03 968.899 1789.11 955.319 1790.35 cv
941.76 1791.58 934.743 1784.18 934.743 1784.18 cv
904.033 1700.87 li
990.359 1653.53 li
cp
.952941 .901961 .878431 rgb
f
556.016 1505.21 mo
556.016 1505.21 683.803 1591.85 690.229 1598.61 cv
702.817 1611.85 725.416 1639.32 725.416 1639.32 cv
720.234 1573.67 li
556.016 1505.21 li
cp
.917647 .619608 .509804 rgb
f
1171.47 1565.84 mo
993.146 1668.24 li
1001.24 1615.84 li
1171.47 1565.84 li
cp
f
800.882 1445.95 mo
800.882 1445.95 755.712 1434.11 739.623 1436.3 cv
723.533 1438.48 702.231 1444.31 686.641 1443.09 cv
671.05 1441.87 620.494 1430.31 609.083 1431.58 cv
597.672 1432.84 545.648 1438.57 541.98 1459.02 cv
538.312 1479.46 544.634 1503.77 559.83 1510.41 cv
575.025 1517.05 701.689 1577.33 707.065 1589.88 cv
712.44 1602.43 714.174 1623.11 727.533 1646.21 cv
738.31 1664.83 758.353 1682.38 778.09 1691.99 cv
791.023 1698.29 813.135 1698.27 830.871 1698.24 cv
840.205 1698.23 848.327 1698.22 853.262 1699.13 cv
867.575 1701.76 905.476 1714.86 933.92 1706.81 cv
962.364 1698.76 986.36 1677.37 994.66 1668.16 cv
1002.96 1658.96 1014.36 1631.36 1026.03 1621.98 cv
1037.69 1612.6 1097.28 1589.94 1147.36 1579.24 cv
1197.44 1568.55 1200.06 1527.91 1186.57 1515.11 cv
1173.08 1502.3 1151.55 1490.59 1133.19 1488.16 cv
1114.84 1485.74 1094.39 1478.7 1088.83 1475.61 cv
1083.27 1472.52 1007 1456.42 986.803 1451.96 cv
966.607 1447.51 886.493 1429.6 886.493 1429.6 cv
800.882 1445.95 li
.254902 .568627 .792157 rgb
f
928.051 1618.45 mo
927.63 1618.45 927.226 1618.26 926.965 1617.91 cv
914.304 1601.11 865.384 1586.62 861.201 1585.41 cv
858.359 1585.87 833.529 1590.46 797.523 1613.74 cv
797.299 1613.89 797.042 1613.96 796.783 1613.96 cv
796.633 1613.96 796.482 1613.94 796.337 1613.89 cv
795.94 1613.75 795.63 1613.43 795.496 1613.04 cv
795.291 1612.43 774.982 1551.8 773.203 1508.13 cv
772.56 1492.37 773.168 1478.04 775.056 1464.86 cv
775.883 1465.46 776.716 1466.04 777.556 1466.62 cv
775.843 1479.26 775.306 1492.97 775.919 1508.02 cv
777.519 1547.27 794.27 1600.49 797.527 1610.51 cv
817.045 1598.06 833.062 1591.19 843.157 1587.6 cv
854.428 1583.6 860.841 1582.7 861.107 1582.67 cv
861.289 1582.66 li
861.414 1582.66 861.539 1582.67 861.659 1582.71 cv
861.793 1582.75 875.194 1586.56 890.08 1592.53 cv
908.349 1599.86 920.861 1607.12 927.345 1614.14 cv
930.316 1601.36 943.207 1545.51 948.326 1516 cv
951.556 1497.38 950.499 1476.46 948.91 1461.5 cv
949.744 1460.71 950.566 1459.9 951.378 1459.08 cv
953.107 1474.32 954.444 1496.64 951.006 1516.46 cv
945.217 1549.83 929.533 1616.73 929.375 1617.4 cv
929.254 1617.92 928.848 1618.32 928.332 1618.42 cv
928.238 1618.44 928.144 1618.45 928.051 1618.45 cv
.203922 .454902 .635294 rgb
f
807.832 1531.33 mo
822.228 1561.64 860.758 1588.68 860.758 1588.68 cv
860.758 1588.68 896.571 1566.49 913.494 1538.02 cv
929.641 1510.85 943.169 1476.62 948.469 1457.22 cv
927.153 1463.79 893.13 1483.02 870.922 1480.93 cv
852.625 1479.21 835.711 1471.66 818.077 1467.09 cv
809.83 1464.96 793.842 1443.28 790.858 1451.2 cv
788.342 1457.87 794.413 1503.08 807.832 1531.33 cv
cp
.917647 .619608 .509804 rgb
f
860.758 1588.68 mo
860.758 1588.68 896.571 1566.49 913.494 1538.02 cv
914.557 1536.23 915.606 1534.41 916.645 1532.56 cv
904.308 1540.37 888.927 1544.43 874.189 1545.61 cv
857.807 1546.93 840.949 1545.55 825.752 1539.29 cv
817.231 1535.78 811.063 1530.71 805.107 1525.11 cv
805.98 1527.26 806.885 1529.34 807.832 1531.33 cv
822.228 1561.64 860.758 1588.68 860.758 1588.68 cv
cp
f
855.035 1249.63 mo
845.503 1250.23 836.039 1251.86 826.864 1254.53 cv
788.348 1265.75 754.503 1294.93 743.03 1333.8 cv
737.191 1353.58 735.632 1374.42 736.156 1395.04 cv
736.426 1405.69 737.295 1416.55 741.449 1426.36 cv
746.59 1438.5 756.303 1448.01 765.775 1457.18 cv
774.242 1465.38 784.472 1470.91 794.103 1477.49 cv
820.289 1495.37 862.299 1487.54 891.535 1484.48 cv
901.964 1483.39 915.822 1483.54 925.254 1478.61 cv
949.103 1466.16 969.053 1442.57 977.678 1417.24 cv
979.423 1412.12 980.768 1406.86 981.717 1401.53 cv
989.091 1360.11 972.452 1316.8 944.962 1285.99 cv
930.421 1269.7 917.168 1258.56 895.643 1253.26 cv
882.4 1250 868.649 1248.77 855.035 1249.63 cv
.545098 .282353 .207843 rgb
f
917.811 1275.54 mo
889.048 1253.21 862.419 1254.67 854.816 1255.07 cv
847.214 1255.46 820.574 1256.75 794.269 1281.93 cv
768.83 1306.28 762.177 1339.6 767.001 1382.28 cv
771.824 1424.95 782.06 1460.02 800.098 1484.91 cv
818.136 1509.8 850.948 1525.55 868.753 1524.63 cv
886.557 1523.71 916.707 1507.32 930.486 1482.36 cv
944.263 1457.39 954.884 1415.49 955.282 1372.54 cv
955.679 1329.6 945.625 1297.14 917.811 1275.54 cv
.917647 .619608 .509804 rgb
f
867.203 1526.46 mo
857.99 1526.46 845.89 1522.71 833.656 1516.02 cv
819.536 1508.3 807.104 1497.62 798.651 1485.96 cv
798.072 1485.16 798.25 1484.04 799.049 1483.46 cv
799.848 1482.88 800.966 1483.06 801.545 1483.86 cv
819.022 1507.98 850.938 1523.74 868.661 1522.85 cv
886.888 1521.91 916.119 1504.69 928.921 1481.49 cv
929.398 1480.63 930.486 1480.31 931.349 1480.79 cv
932.213 1481.27 932.527 1482.36 932.05 1483.22 cv
918.481 1507.81 888.414 1525.41 868.845 1526.42 cv
868.309 1526.45 867.761 1526.46 867.203 1526.46 cv
cp
.713726 .470588 .403922 rgb
f
895.378 1397.1 mo
895.739 1404.08 899.174 1409.57 903.051 1409.37 cv
906.928 1409.17 909.778 1403.35 909.417 1396.38 cv
909.057 1389.4 905.621 1383.9 901.745 1384.1 cv
897.868 1384.3 895.018 1390.12 895.378 1397.1 cv
cp
.0862745 .0509804 .0431373 rgb
f
815.079 1401.25 mo
815.439 1408.23 818.874 1413.72 822.75 1413.52 cv
826.627 1413.32 829.478 1407.5 829.117 1400.53 cv
828.756 1393.55 825.321 1388.06 821.444 1388.26 cv
817.568 1388.46 814.718 1394.28 815.079 1401.25 cv
cp
f
860.631 1449.1 mo
856.944 1449.1 851.788 1447.31 849.31 1440.43 cv
847.845 1436.36 847.281 1427.82 847.633 1415.04 cv
847.893 1405.64 848.573 1397.27 848.58 1397.19 cv
848.66 1396.2 849.517 1395.47 850.507 1395.55 cv
851.49 1395.63 852.223 1396.5 852.142 1397.48 cv
852.135 1397.56 851.463 1405.84 851.207 1415.14 cv
850.783 1430.5 851.77 1436.71 852.673 1439.22 cv
855.415 1446.84 861.882 1445.42 862.156 1445.36 cv
863.109 1445.13 864.076 1445.72 864.306 1446.68 cv
864.536 1447.63 863.957 1448.59 863.003 1448.83 cv
862.339 1448.99 861.529 1449.1 860.631 1449.1 cv
cp
.713726 .470588 .403922 rgb
f
884.812 1364.89 mo
882.559 1367.68 883.704 1373.03 888.609 1373.66 cv
892.988 1374.22 904.23 1372.22 912.07 1373.28 cv
919.656 1374.3 927.954 1378.03 929.681 1377.27 cv
931.437 1376.5 930.049 1372.87 924.636 1369.39 cv
919.59 1366.15 914.798 1362.25 905.617 1361.32 cv
896.437 1360.4 887.064 1362.11 884.812 1364.89 cv
cp
.545098 .282353 .207843 rgb
f
836.981 1367.42 mo
839.366 1370.09 838.48 1375.49 833.61 1376.35 cv
829.264 1377.12 817.939 1375.67 810.159 1377.1 cv
802.631 1378.49 794.522 1382.61 792.761 1381.94 cv
790.97 1381.25 792.181 1377.56 797.42 1373.82 cv
802.304 1370.34 807.416 1366.58 816.924 1364.86 cv
826.433 1363.15 834.598 1364.74 836.981 1367.42 cv
cp
f
946.462 1387.71 mo
954.245 1377.14 973.569 1387.01 972 1406.19 cv
970.431 1425.38 953.796 1445.52 942.806 1446.02 cv
931.814 1446.51 935.974 1401.96 946.462 1387.71 cv
cp
.917647 .619608 .509804 rgb
f
779.287 1396.36 mo
770.456 1386.64 752.252 1398.45 755.792 1417.37 cv
759.33 1436.29 777.954 1454.62 788.937 1453.97 cv
799.921 1453.33 791.189 1409.45 779.287 1396.36 cv
f
918.392 1274.36 mo
889.331 1251.8 862.426 1253.28 854.744 1253.68 cv
847.063 1254.07 820.148 1255.38 793.569 1280.81 cv
780.316 1293.5 775.506 1308.76 766.824 1324.06 cv
757.844 1339.89 749.941 1357.81 752.589 1376.44 cv
754.255 1388.16 762.008 1396.45 774.371 1394.63 cv
788.461 1392.55 799.423 1381.35 807.488 1369.61 cv
810.964 1364.55 814.133 1359.25 818.131 1354.59 cv
823.548 1348.28 830.443 1343.24 838.105 1340 cv
845.277 1336.97 853.141 1335.46 859.758 1331.36 cv
866.706 1327.06 871.855 1319.94 873.776 1312 cv
875.704 1322.53 882.087 1331.63 888.308 1340.35 cv
891.496 1344.82 894.716 1349.33 898.75 1353.05 cv
902.713 1356.71 907.366 1359.53 911.982 1362.31 cv
923.338 1369.17 937.548 1378.9 950.094 1383.21 cv
954.276 1384.65 956.392 1382.91 960.176 1380.62 cv
964.852 1377.79 965.548 1371.36 965.304 1365.9 cv
964.482 1347.47 958.826 1328.97 948.549 1313.63 cv
939.033 1299.43 932.434 1285.26 918.392 1274.36 cv
.545098 .282353 .207843 rgb
f
772.222 1430.12 mo
771.692 1430.12 771.167 1429.88 770.814 1429.44 cv
765.121 1422.17 765.899 1412.34 765.936 1411.92 cv
766.021 1410.94 766.887 1410.21 767.87 1410.3 cv
768.853 1410.38 769.581 1411.25 769.497 1412.23 cv
769.485 1412.37 768.832 1421.11 773.627 1427.23 cv
774.236 1428.01 774.1 1429.13 773.323 1429.74 cv
772.996 1430 772.607 1430.12 772.222 1430.12 cv
cp
.713726 .470588 .403922 rgb
f
955.263 1420.23 mo
954.868 1420.23 954.471 1420.1 954.14 1419.83 cv
953.373 1419.21 953.254 1418.08 953.874 1417.32 cv
953.973 1417.19 959.396 1410.32 958.846 1402.57 cv
958.776 1401.59 959.517 1400.73 960.502 1400.66 cv
961.482 1400.59 962.341 1401.33 962.411 1402.32 cv
963.065 1411.52 956.916 1419.24 956.653 1419.56 cv
956.3 1420 955.784 1420.23 955.263 1420.23 cv
cp
f
925.278 1234.65 mo
915.803 1232.67 905.169 1235.13 898.872 1242.42 cv
896.177 1245.54 894.395 1249.33 892.646 1253.06 cv
891.715 1255.05 890.773 1257.08 890.52 1259.26 cv
889.966 1264.06 892.851 1268.6 896.164 1272.12 cv
904.576 1281.07 917.946 1288.05 930.265 1288.81 cv
933.289 1289 936.397 1288.84 939.219 1287.74 cv
947.087 1284.67 951.92 1277.23 952.196 1268.89 cv
952.69 1253.94 941.941 1239.43 927.579 1235.23 cv
926.822 1235.01 926.054 1234.81 925.278 1234.65 cv
.545098 .282353 .207843 rgb
f
873.884 1313.25 mo
873.744 1313.25 873.601 1313.23 873.458 1313.2 cv
873.572 1312.8 873.678 1312.4 873.776 1312 cv
873.852 1312.41 873.936 1312.83 874.026 1313.24 cv
873.979 1313.25 873.932 1313.25 873.884 1313.25 cv
.733333 .494118 .407843 rgb
f
874.026 1313.24 mo
873.936 1312.83 873.852 1312.41 873.776 1312 cv
873.678 1312.4 873.572 1312.8 873.458 1313.2 cv
873.434 1313.2 873.41 1313.19 873.386 1313.19 cv
872.278 1312.91 871.601 1311.79 871.875 1310.68 cv
874.371 1300.58 874.592 1289.86 872.514 1279.67 cv
872.286 1278.55 873.008 1277.46 874.128 1277.23 cv
874.268 1277.2 874.408 1277.19 874.546 1277.19 cv
875.508 1277.19 876.368 1277.87 876.568 1278.84 cv
878.767 1289.63 878.533 1300.99 875.89 1311.67 cv
875.67 1312.57 874.898 1313.18 874.026 1313.24 cv
.435294 .227451 .164706 rgb
f
768.668 1320.71 mo
768.613 1320.69 768.558 1320.67 768.504 1320.65 cv
767.457 1320.19 766.98 1318.97 767.438 1317.93 cv
769.974 1312.13 773.647 1306.66 778.414 1301.58 cv
775.074 1307.79 772.137 1314.23 768.668 1320.71 cv
f
769.332 1320.82 mo
769.111 1320.82 768.886 1320.79 768.668 1320.71 cv
772.137 1314.23 775.074 1307.79 778.414 1301.58 cv
781.966 1297.8 786.126 1294.22 790.878 1290.88 cv
800.885 1283.84 812.189 1278.73 822.162 1274.22 cv
822.438 1274.09 822.728 1274.03 823.013 1274.03 cv
823.801 1274.03 824.553 1274.48 824.898 1275.25 cv
825.369 1276.29 824.907 1277.51 823.867 1277.99 cv
814.06 1282.42 802.945 1287.45 793.257 1294.26 cv
782.758 1301.65 775.347 1310.17 771.228 1319.58 cv
770.888 1320.36 770.129 1320.82 769.332 1320.82 cv
f
764.057 1395.29 mo
763.286 1394.85 762.874 1393.95 763.062 1393.07 cv
763.982 1393.53 764.956 1393.91 765.983 1394.2 cv
765.328 1394.51 764.685 1394.88 764.057 1395.29 cv
f
765.086 1395.56 mo
764.872 1395.56 764.654 1395.53 764.439 1395.46 cv
764.304 1395.42 764.176 1395.36 764.057 1395.29 cv
764.685 1394.88 765.328 1394.51 765.983 1394.2 cv
766.292 1394.29 766.607 1394.37 766.927 1394.44 cv
766.57 1395.14 765.851 1395.56 765.086 1395.56 cv
.733333 .494118 .407843 rgb
f
766.927 1394.44 mo
766.607 1394.37 766.292 1394.29 765.983 1394.2 cv
764.956 1393.91 763.982 1393.53 763.062 1393.07 cv
763.077 1392.99 763.097 1392.92 763.121 1392.85 cv
769.089 1374.71 775.852 1354.15 790.867 1339.71 cv
791.268 1339.33 791.784 1339.13 792.3 1339.13 cv
792.843 1339.13 793.385 1339.35 793.792 1339.77 cv
794.584 1340.59 794.558 1341.9 793.735 1342.69 cv
779.461 1356.42 772.868 1376.46 767.051 1394.14 cv
767.017 1394.25 766.975 1394.34 766.927 1394.44 cv
.435294 .227451 .164706 rgb
f
935.718 1281.61 mo
935.055 1281.61 934.404 1281.29 934.004 1280.7 cv
931.136 1276.47 928.171 1272.1 924.044 1269.22 cv
922.008 1267.8 919.623 1266.71 917.315 1265.66 cv
897.991 1256.84 li
896.952 1256.36 896.494 1255.14 896.968 1254.1 cv
897.315 1253.34 898.067 1252.89 898.852 1252.89 cv
899.139 1252.89 899.431 1252.95 899.708 1253.08 cv
919.032 1261.89 li
921.509 1263.02 924.069 1264.19 926.414 1265.83 cv
931.165 1269.15 934.492 1274.05 937.427 1278.38 cv
938.069 1279.32 937.823 1280.61 936.877 1281.25 cv
936.522 1281.49 936.118 1281.61 935.718 1281.61 cv
f
957.097 1356.06 mo
956.84 1356.06 956.579 1356.02 956.326 1355.91 cv
953.392 1354.74 950.23 1353.86 947.172 1353.01 cv
943.35 1351.95 939.399 1350.86 935.666 1349.13 cv
920.863 1342.3 912.32 1327.45 904.169 1311.53 cv
903.649 1310.51 904.051 1309.26 905.068 1308.74 cv
905.37 1308.59 905.692 1308.52 906.009 1308.52 cv
906.76 1308.52 907.485 1308.93 907.851 1309.64 cv
915.659 1324.89 923.794 1339.1 937.398 1345.38 cv
940.827 1346.96 944.446 1347.96 948.277 1349.02 cv
951.444 1349.9 954.72 1350.81 957.868 1352.08 cv
958.928 1352.5 959.442 1353.71 959.017 1354.77 cv
958.692 1355.57 957.916 1356.06 957.097 1356.06 cv
f
950.934 1323.98 mo
950.508 1323.98 950.078 1323.85 949.709 1323.58 cv
944.396 1319.67 940.378 1314.05 938.395 1307.76 cv
938.052 1306.67 938.656 1305.51 939.746 1305.16 cv
939.953 1305.1 940.162 1305.07 940.368 1305.07 cv
941.246 1305.07 942.062 1305.63 942.34 1306.51 cv
944.062 1311.97 947.55 1316.85 952.162 1320.25 cv
953.082 1320.93 953.278 1322.22 952.601 1323.14 cv
952.195 1323.69 951.569 1323.98 950.934 1323.98 cv
f
844.539 1462.37 mo
844.883 1459.46 856.193 1462.5 866.005 1462.15 cv
876.5 1461.77 885.988 1458.12 885.933 1460.78 cv
885.882 1463.17 876.011 1471.21 866.216 1471.87 cv
854.959 1472.63 844.212 1465.14 844.539 1462.37 cv
cp
1 1 1 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 10.0%%AI8_CreatorVersion: 24.0.1%%For: ( ) ()%%Title: (2206.q713.011.F.m012.c7.people top view flat.eps)%%CreationDate: 01.07.2022 02:35%%Canvassize: 16383%AI9_DataStream%Gb",Kks?:k\+Y"Jh?.FJ)C*h9\RHn`,UQ9CAf_?^.M743VE=b:>l2"%BC/#*+`A`c2CGDN@BlkJ%r7bOFEF[/==oi>]5tBpmq&$5%Pj:;(L4>_edEuUg=/G&u6PaEj_h1jp[GIhs9$QLGX\rpkmq(X2k,Xo8r3#s\cb(o2.^d#HF-V,]IqWqI.G/rEY*>O-)@-(=-HnK#%H!@rRF]5H*bOHJ.BPZit+<..X9;Wgj`\UsbSa1YCAqb`p+((:VbKX'4h^[6XT-n11lr'eVh'ghF$C=uQb8C%6/jEq`8iujd8kU7n%3>s1c>8%mb_dmA]%R?3oL%6(uIuaK*hb;f0V#R;#rr6Zakth*@B"X)Ka/lHti"<-k*]b0'OC)9ThOJZeED."W[okbj=7WI+:W^]B%j9#-_s7c:i4'k[4A&H6O?b@Z.(s`LE;k`7;Lng.cr@"$3\sI\Caqm\[4i#`?CSUfgS5^FH'`RC%;JNkIQ<UY%+[CnPs%9CqWlW-4%=$N\FH(5nUj'Nh2R;_GX>(V.0arts.?7&F>Y^1PuSGu^nOr8\`>.mnkXM*R4Vinu/Hs^cUF+YTmj,ENa3"n_PH:B&9p?:T(?#^D1%+h`"DB<j.G\(2trQE0aH#93*q*29R5NH4Op,pP>^lQ<8P(O,eDV#T[YA_!n`WG8>Kgo^C;%b,ZB.i\'7`G0D,G(?]5b-sCIl)LD'%V7*G>[6O7!\br\7CZ+rheXDFL=)lQ[<W3VLX]H"oVl,O.@=>,d;]?XI/_7@'R5^s/X4EAB/8!JA^WDh!bW*]rZe<D9j9G1g4XQLK%f-`2`SLgp@b34n,-,6>Wg\kl\6t$?kQRd0_qP.#heN7ZLj1=,d]ooS])]?NI[p(KbOC.Ra4\%HL^f'K(%sJ`3W69AR*ZT4[mM?;q%po4.C2LZ]`f.,nE62SruOS+!r<A%6C)aBgo;@a_O;#nm!138Gmk$DZ+<i[4rp=N1.*O0!=0tolDZ-E`WCK:27GLhuEJ<NbAAu!uM%l*K*qSFmltn[^hm5$t:RG8pAS?Fb%+A'Xk_rOgG5If5WhMoDtUWH3md_D*!Zj]dGPjmmT$Vl.Z9<D(eNZ[I&rHF+5;(kl7;5MTtN%>SUtAff1Ol8k45-4/bO&b&$G+lQm0j3c_!D_dH-55UW1rR^uT$(e9)0Gk4lK0A2>Yl1W0A]qO\7/'Ft;TCHop>_'K32h#**_b=\?%mt454I[ZGUD3VL?>:%sd]0k&RNCNocLr*K/;J_Stpta1g0+%)as+Wb?T31@6TlF^e+u?nU\#\p<+7UR_3Rf3:cP]U)+)l`mp*]%N%G;K92qoo)SJsk4=pH)@PXp`o+g/,cS^8,7k07@i7mrgp_]i'-"YLS%Ml+$^t`F%_9CTmUZm'',i_sGh&Co+k4h_JJ=;D*-"#0,Hc%@B0:Cfij/jD)%!LKi6OalS[KV+MIAXo=:A)FBu_+^0,d1."+=Ep%H2):CP#127[!/<'<?G/%"k38j+l@cEW_M'VJU\eMKnC_b(I;%/ff0#X/OT->%LRR\uqjN@;ocLE%o<:pVK#;RC]q:l<QhkBsSa'31B@@qgQWlZ;E]"'M;/$47CJ0X$,t@l4r7-\J%&nH`^UhjMaaT%^4N,BrCQ,4l?RdEfJ0m;8.2eIR^@OTP/<iY!*.LNc^nGkm:9f5#1L@q)Al-MKB_q9-N?;E0^U^fU.&-aCZX]d2jq7H][tA:lAh#0%MeQQR%4nB-`AFfd"r:-E=\Mc^osL36RX:Z19uap[L.*brk^UKZY4SJgg"=IaCOc:Qj"W$UBjb4Rl.fPRDmkN2V&s7q2"m[4FcO3.%j_S!.c]]s\7MWZ^;>i>$fPHlFe[b9QeW5T'GFU/V+<?C=BpBH\&<=`1OH)JtIc'^ig<NI"e@GY-Y9E_EED>&@E%=bAO:##r7f6V?%k?A7`o&45X#LAeYG3Oh54k63Nf\":^8fNJ3:[9tuH9gT,1j`adY8s3)'%b3-At8:&-#5ZFj;X#,f5&o7[>3;&^>e_8eap*/CXm#I%s!u8R]&Gbbq5ef)IbOa8mK^F!^/+-E(5[1+rBK+Ns3DEp!UI.6[C+eR;rZ+_ge&NO!10g4^IB,5Y6(J;-/MAdIbu!arG,`/)s,?5%(S^?#AF0&pn,%!0l::_X%o`5*%.UNL33g(ZY^`5XVt1&hrg`h1pshBIEs5Lg2p/89K2S`TbdeMKXAWr@JG8o`ZedR8s+W):5*k:`%\3,-$``I8(/#C7'$%$lUe<$8I^l@(H5<"-Z50<iikNF3:TPkiEh5B,-m\QDDKRYduA^$.TQ'ni+.W^SIl(@CkZpCE[TA#jT1)aZY%%-tsp]%8Gko#:0.%r<j=GPNTMos`b'+G\jq%fVFL=)6=[cq:COIaUHLs*tOff[+P0aLM4cW/%[5!?:k[G2MsePjG4\VGC@YG5!+S%s-)g2VVM1`R_<n/OZ020\/4f%=7UK[cl0&i/Tg_,eSA(k^"n<5fC-rV;C\C;mp,]q?sLl)md&)3cV%j6TR\)Ik-$7=^AA96Sf@>h%\\A^1n%TP"SaTglkIu:>DLO6GXd1FUV$]<>pCO)]FiC11lW*\0h(LGIoG(FS,o4YJH6loHiRJ/`q>)r]'aK#p<VInPIp3[Od!NNb%];*uPA57P0a$+ZP,<tjo'W0nCs.$[tT))eL?>`uR5JjPp]f$Z=IQqkQ??X%iWP"!![qjOaTY'fgrs?75)K'"j7&*.=V<ck,`F9_R%r9:ot7jBZOQ<j;:s78@0G759lq*o;DVun\;UUiP_GFVD(gf7+_lN&"JhM7]B<ilV_Z??s]muCYl*nmFRTIVEMW0[#1'>4eL8c`k@%lb8=QO]UH_XnKQ;$AHBM_[DVB3iSi`m%pmtVmjUWST:RT;po=?.P-qS['<ojm6r>-_tm1[gM,.IH8knb\fu8\?S*AlK(+7<$ic[(%MjfM.Bb4?"oth//KBQ_QII@1RUd87RZa(D>ku[GhM/Uf,TrZVL8VAK#&g>PCQsF8I6kAJ/pEJX$-:1sMB%pTYmIN`%_@9%hk_4'S%2\Dd>',Vu]$ka]fM%DTk&Y^(fmoOM\-2ZXj,si;`5U&T,CZp,9p3J&PoWn)e9'%u_&Ya4H&g;R'6f/RJmtsG:T0/-?:9A.UE(-[J%*?07rOu>/LpYWaS^U&@*2;%Ue2h<K*q"=*C2S6?(^d]/F^XK6(I3d)Il/d8UR[Ng+@/]1f-<J/+J#/RQJ3dJbTY^_^)DJ+=?r5Yk%EPS7H;[dEG+b5+FFe/>,#tK4rf[E*8)R-+qf[E*6)R-,g?r$mlBu$=#Z)>l$a4B@l?i+CNrq*h_Y=AS.5U!g;8G&OMORB.j:rn-O%6>lG]7fk%OFAECq3POc)5HJAYjeojGD690)/lgIQq4ClX>B/4Ia?"!7EH/S:'t((*7R5S6:PJ&,U:lW"4Z)KgpX"$dK5M3dO'!8U%j#S%kaBp;>s38Vtq;3(c+`mUgR2_uTg:?!_d*1L4<`#q790;8#q/8%U'Jf>Z^9u;q/*e&+p\c]?7;o^KY9*Si<odhiD>*P?gV-J6%mV*F9R:P^!h#)VtkAr"oc!hlNoR5Q/]RRT_$2R_5DZ>^JWV9[mdXD`(^4-k$hE=R2]Gu^PWI+S=aF264]DEQAc\knJ*e<.?;a1f+%3i?ku@-[PW\[?WXCA#@uYFSM%!?KU;blITYaL(9nG5jF1*)p5:1k@s2EY,K<]ssONZ+SkHBDmF`K8AV3@X4s8ht<"3%f4ZKCW)Bf%#r,*)RH[F:%AK)>.-2RDH&]J.K.,h!M\ni2#>n*/[U7K3AZtO>NS\sd*ufUlR.R^aWRUq4\tVfBGHW=-:DM7&YPY%hNpjli9sM@;%F4`%gf;`::<I:D4;\r]QcIe[(+#\;\4RNgSNfWU,0%R4XdA"PO(FHgJADg3$\<APiD:+!G\\:8(_)i/45,CKAbg#K48u:g38Cu9`%\QUQQen0AqCR%e5VGShge/J/J\\YS&ZYA?6qP=o8S5&sVab8IjaJFcAl-2lM1%b%UA))J]q1$NlLTU1)@+EA[dt(T_j]Eq[>[3"U%F&`MZ$``2>>IE`7Ts]]X)sEe/)"N)ca>`F]JnSt[)j0RF$YnAf0)f,mmC*nXfBFfg+:d<#\pF,7S\ARk],:;q#/6"Hmpb4e\,o;9%SdP-r=@WR$(^&[7^iqO&?.9(mMuU*Oi[T&;l^qS5&$D6.CL^U:hoi2?`dMXYhit/=)s*n5PV6?'EVE;!goi%"4\WOr9Cd!l#P`(>%PM\_lLI"Z6ASIR7omHR?8*r0sB0E0>%:n-,d<*.GZ>86%VJ#H?Lp8IuqEU!F/fi_t[PGU0nc(OYg%>XWpPt&^Q81Tti//R>BIVCn%jE6/.AS.:;2YQ^\g0am-QU]bdZKCT2Es?4#K>QPR4,!#T:+LL;2]p(F3r\b*p%*EQkLBP"=4H\C5#g:iBpMpfoL>h4)c+.*AA#pi%rASies5=r9PS2h+kO>AN/D&ec#'Ni#fg/O`)"!364m3#MTb?uSpE#QNX3_/j[/F]$Vu+<sQ$Q&KC6-")<VS_YiidC-QUEhqlj>lV%s35/W2o66Tr>"f(:VaaZn8!dj?XHSo%oXQp!rBie]Ja:_n-&Z5bg:f!LOgi2%npBh#oHd?V\]S"W0QftU$!b+5s('RTp;g_f#g-d%JEg.j[NN9X-*O-64#9AZ4!?6.^%93d^0,d1."+<2<=:tRh^=.c^5Je6P$dnO?qlaO7k`uLSRX;p[CU]UqE@!D>2*_U>D;Yg;On:"%%,3=7H9%:$KDY1DDBdCJoM2ra^ojV[8hUVLg9sarEo#WLd&Qc3*7V-!nq4A(K=3F_L(W<n<[^,0Si_qc5n=@]W(UL5TG,HinX+,6%2RX,H,0I'PgT23FY[;7_S'pW]5MR;gi&s2$_MhgQ/>=1t50+nYr5BQ:7cY-RZASY-+Ze$b[a(rH^=hA1<]<J3ReY4"S9*_\d,":Z%Y)Nr1BK#?HT=pa.?K`of'X+@Pe.Z!pCo2d.1pEDEbjlV'9YYl8".O"41L7T:e6V1MM)Ni-aZ=H_h5el*RF0N45m*lr?o/=OVLd,O%0U`28;]f]g;s*qF9g-aL?oVGCaV!;6_l8u&oY9AW[T4pH2Y'"%Ya];`h2qX5h<g+dc$FlBU@7!-FA4:R#JKj9(&,JEFBqATrKXJK%qQllFh_F&prNR)7XRr'upU2UJ_Z!4u6+)$Q:i?6Ef8H-)g%sCNleZd:jVNjJoL@lTVifi%dJ"pW"R'uf.&=n#moO4C;ga$Q=6f`n%c^!ACR?tRT-@<n[h[D,[1Z'RVR(cG=pEHc$%DHq#qJ3:$\upp=4mg`f>e4E>-c]T.40H3GUb?;KY>tB6i#YRjP8@L#U:R6X1_1Ne%q*M&NbWA"7?lo<qm!F/[?f+MsT&3:f"!,,7c$?_0f:>!.QWM@;DUX_4U=]%T]B'inYcm#dj_q(q16CCA,enijAVPUd_gCSNQEGH%%ms;*>l:'YpI756Xn`_<GfAfY61!j#,)U#nE=9],Un!M"IV9E_RZ2E=VEVi]\h@q(*N=tXYi?[3-+mpE.VV]5)mpAMfTSKM=f2SJc%lJ@dLrj>PAlequlMu7djJDZ^Ip\oG*3i?ku@-[PW\[?WXlD<b?[1I':bM0584R:\V4HO,U7+;)abBfP%^WNjRa`elIY%6f"1"KuZ%d._#9f*qZYL+'Yt?IZeq\GG5*rd\7d#.sou-?+s)roS;N\In;@]n*jGDpf#V\p!VR7]Oq1gIe*Cie+o!Wd@Nm^1P6s5TkKuK2'@j%s3CJjL3-]D5P78sl*sAnkYo%!GsRJ>^L:_UAjB@2NKoD-W?3Sh7]7puXPL_;I)kt=D&b7[>q>?tc2gkq\95S/Em7k[.b65IR.?+?%qV%4mpTAW1/O&!T">+kf5o#kJU3l,(5ir$2Ld42b<Sp]bl/@>Yf1Mh*4I/5%U@3Y*q]D#S5cAlgV8e^>j(_g)rGn3AVRqo$Q/Aa/%hXp"E3]?c]c]q<+c$m_a@Lc0DX+aX,Lb%P\N0>.;;W$K^e*DZ[B#'`/(mX6d.Ren8"Y*)&)u45iVh\mJrI`S6UiQ+0icLA(#TC>M%6RlK9f=DC'#CkYCQpET6WViYGMI30\6!iF:b00Yq&-&IbNf;79)/!`i>&:s!"J>aVXjpTt?#ILH.8pSF/+&Y'SNdObf'uD7^T:KH%jmO*p>VS'!>HD\.138Gmk$DXG?d8&*)O\!&;'pMWD]/Ln5$t:RGEk8DOdia^AQo'S(A?&KH$UZue&f\tO%n^p0Bo!pajeY+g4\U6%\:2FW%faF2=-G^pla.?(A[^"?5Y'b0_W3&a+;`pY4^TYG>,<CdDLHlQa[LXk\[$`j(aUO!q8!Z1Hq57;#Ed8/)?9J(Y&C`eF?4lB%?n0@3Itg_8LXli#lZ;HMUsJq'Ke:L8:9?)Orpm2u%Ig9TT*O,Y$?#J83_89jn=6!&q(:)'LBjR@0'$74U!^",oXh=gI-]kTVn`+p%mL-E0's,e7-Smn5W0J7H=3Ac$TOtmg;G`TupL:h+;ihf-VI,VZ19@'#(/J1\ODjP;8/T_?;J,X,<Qi%t2hh1Qs--7eQ>J=D@_.Ns%C9=^I4)AJO)n!Sp%Ln'+$g\:4,;T'aCV,mN'Jo*d,UfnO-n/XFh$REENR&^4Af@M0Zc0.p?M)N:Z[?^oBfi\K\66k)]2!D$EmW2c%F7-7?\#.r^alH'7UJ_i1m*WXea3@dAJa3%8EarZujeAh)h=%L^3LX=,V6p!D*1Q3(kU*.GO&BSroQMgl==fAi>HX2p5OICUMnSh$%;oG6Q=+B;#)kD4^8&u_*fY(-s*S*$iq<ICAnFFeLXe$_lPN(P+V,SqY6C3`lq=[^<o[g"+g314$W`23a1u%2?r7]D!^#R8q^Fbdq%3cB?jrQ^ko'02pjW@A1m*GK(cX]Xr"/,"+^,b."D$_gqh<Cm\rY]Y8H(r(7HWXEBCHpnUUY?<M9:f5^lrt$]R>hn?$/H4J2D3n##%EN[l-eIFW!n,-Bu5<A7TK[Rlrg(;8tWG>Iq:85+ZfkGAd:jSsC/S/+;0rINr*@(0m$T#Yrns3"0)aENH3aG)LZV+((/!]`\hT1pm%=6*Gri"U6+<CCl,NDek@^*VA`f*_<\%]me0mBpSfPpMb89+.:84+H+?M[*&FD%B$`eb2XZH%$"s=a\(1?QS>q:mpFnO&G'r%7ZbF%_g5UMY*jQnG'B@^+/MH?;,32:j;uBYgB'fmR7:8\#!Gnk9gRRsMpfq0k?b*OlbXDIlBTfT_A7=VhT\u@gj)2<a?0&^E(O/gOCXs9%[3ld=GtC/1/%'IRp(8<GbaD*cgGCm5RXb/L^Z#1TkjV*4s"#a.k[U^Jh"m.O1hXDQ>;?u`DB@:#9Ua#9?.7W/euE!b;&NCHD5>[`%bnarSNr2V-q7j(J]1h%RCHf39($#pOV6[)tqDq.HVW7]C4)pAtgF8jM=FV3iXr#%FHE,SRd-pqsRFEt`MD6$m.i^H927Zmcp?1r7%?8E)m$Bn4UXB0NAj)hQR2&#R:VfEHL[(5d0+%tWE-A,p,>e'47Gfk0![`rpN6G')foBE75EFhf-\r:N0rqb]V?:HRQdaNPn3J4(c%!VcJ[H?h"p-d[;qn5ZWiD>Kg4S8J*Li,r.;P]s_DLcCOGfCXWu-^W:a(gjt)jjIIGdT'*%T[_+#7JZbgo18lB4@W4MCG4>j0j#Sc%OG-l5==Tp9Zt-%8CTV)2Rni-f[<CWbaHWatVq=!'Z*>7uI/U1KR*GH]%cHl</#?_Nn=[Z4ppjl8nAo0QQb#.&4'Z[mf>H2u$X[-8%.@na%hJXI,T6]buH.D0Tl1>-gjOspL9b_]\GSesjX@I@.NB2dU3h8UXkD$fc9WmuII,kGi4RTMp%G.]]D55S[epUWmiZ>R/2o7al%ZgI*A[B!rc`LP_eP<8'"];DnVV.7e8_=#Cfq+Mkbd-5JVm2W$gY>j5>3ce8q,dVETC5g/=33lA]+Q.80T]U^6^+JN[J!.rM%SWW7%NI5mC'MCEn'L[n@#'O3jHLE(ig]g/3dEcU_9@]S:k/\4kAUh`b/sLPMLQtp&D/"@n9t=B+9s<'TL%%0$Y]DGLW=j,pKRRRY\_4"D%ML'294["A&mu#M9fFdG]?td5u+C)3Mm<K'3@^g]aiSP]$()#-_%6NqSLLQ3jW"'/ggoL^&Ea4Ad'IDq&lI5s-o*1Hj"H@F:d6N!r%fW*K6c;$kfNZNYc*-J?_6'ePX@L66eB"!2$()l9V`tCC-?=#c8[5s%`-T:;g6!a4WDjA%,]$&>n$p/U_*5tJ4`JgQoC6j(E*RS3f%+sPpQb$%ka:tmF#]!*aI)U7YilQBR'`ef_H_Wf$?)EAAb`?P_tWZ6-h!W<Ba"XDcJ#i@"X_:V43=)4$hrQ-,h<h;<j7g.(CXmqI4%$I0MXQ038IoCPt*Eu/;U*Fg+V`]85Wl]onFFWL5:i\`V%oh+3+q=pXn$J"9-Qn)ZMjWi%<r:S/\<V#hNqd@HM0_bG3_1#-9g[.Vt%+s)Y>m8nh1LTVVnXS@SW/f6)%h(#nfe<4m*1H?>-$M0!9F.D'V4j@i^ZFc&E1hu\96_FIE7;R/cf'#XelLn&-`4,>tjoqZ+ZiXZW%>p[Or_6)G5N/7)GG0#a6gsHB&`d[OS1jU!d,fI9Tm?kmr1p^+tjbf=]fpe#$2g/rdMg-1q2%R/plLW:^US]TL*E>>q'UuZ#16f3T%LK$pYH/qP%3!^iP_XnXS%E=5mWEstUMS\->l-djhA24Y`GV1jG([Mb=Q!0!V=(Q::K/rO@a%&R2EV7*4\RPYh:@5,[NQ-f#()*2o%EqeY9F2h@>fBP2B/f:Lc(Di,H+a2fhOe@k%AsT#EYZ<D^^f<@eH,5>Y5k4>kSOE`>D&*E7H'f4T(R+R2/M>U9`/JGS(E4@%F'(#!%J4_lB>1"c[SNSJ5bu^r[>2f^\\etX)K+>;']_UjW>\7\i4u>hJ::WB+Ssa^D\m'rAGLl3*(g'JnPF5:Gm\<?*KnH!6WED^nCTY8[%Hat)Jmo9.1@)SVRca9=)h>FK[>,W1'1Y,"8<Yb?SboSg)B@BL/a&8a_.1%]!o5_RuR^KU!dR"0l8X&AfbOW$&01'm-jJt_=Km.!`%*F(G7BGpd`\N)<PL?$C6N^$++/AM$0]rLt94Q@N[LrfeSS$]=(RQ8NhS=V7/SqbpXq5'oI===pBk*I0rg$I^,ZMo5h/,T>)6Z6CZ%m9)49,X:"-0Xn<n1:$8kXCeeu[n_+jJ+i0t]sYn_V#4cbdm*BVqnp)p@o&HWs8;Ia2EUGO+e-/dHT7K8Im,tO)@+HDC]>CQT0+Fc%5&S#<1@jC)"(+!"UX-Oeq(VYCrX?hCk8ot]E^!u[pcWm"k4A<Rq/H3h^Fjse/3V&*)1J.JigE=3\u(*=58<PECOoi*j-O(X5)^$4%hY1[Cokuq_C#T0-D@VXi]q(Y+/"c9<d."*6U\h*`I(HqIWu'sBc-9sMj[=`TgoIEOI$c\eouVT\nJttDj6P4Sf8&8(nKBQ8P$lSk%gMZL2f945!_VjA9pF#PoT-*tEIL,7dMqa`Hn<<_WLU0!Zq9^4$DL-&GG4U'%oZ?+J*EVr\r:AqAXa;-+G&BM`?$LAQIGpK31VKJZ%DZ8_`89W<b=RoMJKj,Yf3FC[2=9&1S<km10*/;e_]A_o%q[`+(G%to@n)3/8H6,GKprao%iP"*QLNdD2K*",`^"&4H)&^FX:Mpam%<t"f6/G&Rn0*9u`VdkMNiH3YZjHl]E8$e22/TWR(*l[!6eXUnGp\r(2fiQ-_@rmRW,<k6GT%j5CATHbgre&1pg:KFBk<=T,kP"?Z%mlpaM^-("u8k4)2'0O0\4-j4ng]'Ha:tn-\ErX80=r=t%]U:E;G]n"GEFmfcrr/i-9eJ%_=Ui&KLP:6WRGNGm,!5V)eVNQ%<M/0<%h73?l3a^_q[Y@8HK23#!$`3!\B^s!cPI\a.<kn#t^Y"tHUP"WionhA'bUbWDXY"EPG7S=n]H>ghPPd=!2jM&R\?Jq;\ihl2=*\'@%jsn42FqdY0GJ)Tu@ED42-_E[G__7Y*PF$'k)i*+[agjiakNT'^9MI^B^V)cL:Z[<IG,@HK$ZdgK%o47GT&i2TiIA-X'4r^U,'"ni%>^Z5sRpC:)$dLZmZe7jp>F=TX4faE$T80`dX7*c8n(^S(&BB(!1;ZrUph+snGqr]aSU\Mc;jGJFc&(6n5>;0fZX_\IZ-W0M,Bjr)%Za\`3mHeL3Uc\9X/J-^PIF!2-*Ih&aR%7@7W+GG1R)rne?OkCnn%SVg-9Lm7nQRo\4Z/@mhCUt53X=t(Z_eV*ZJJ.<<n9?[*G0r/%qp2V-h2sADaD<`>n`(?;Rlp55Aad=XI`]kL:qr0A0_REI5(*-Q/c4bVKAGnSWgV)Vh7L"TSc:[TQ!GAFgr_f`s8G"TCpa0j]<kT\%ahF-'SBW\L8%5e)O!Z6[lXSmOp>u!a3P2Q'ib)U[mp9Ya*.AjP^8p'qb^S2jYU<6Bo^6jdrUR8b.Jn6D\=;<'o4fLSHrn(Jh'kNm%cL06RXmH%So.56-n,;usD(YK=qn;LmHa\(KI5[U$ar_+SeE9kea6#k2L<'&F]cNc8J)h#62+PCk4"L,p@F)"p%#k`%hsNWLN`U.[%&'s%3IN!Z[4+DbTET@#liVC/g)oGIc]^U]C4tfojQTmW;)dY%tpqs9b0<<!o>AlETh`GkN:U?>FiN8++f'rBa4F(ROaW3"KQ5^g&%e3=JqfAe0&9'c3:E+F3gEGK+/J$_-i;;Qa`1:7]X)_p4HGU+-t-:d'JHunBJf9r1la034*(g0sh^,GOu_g+#Cr-&+VaSMg$rlF62%#?)l97j`,7HqrtE,Ph"[A#-KDEA6t.IIV/fFJSbJIW)#B2S4<OGjWo(XkS'_GAg3)H+J4CR<e>i<fh`XE%Cakp&3IZ(\R-sq#tj:%eh_5flIO,=gYgY`]?LSihWF5h^%H+9c2+R?]oeAbG#hr9h:hn_4M4[44jAsuB+?!lNK0%4>?r;@4M:W,e?%f5UL@q]EqK@rfYc)s%B4k`Hl/'Usd?PLY-:TqgguHfV_l\-X?Rks17uQ9IiTRbQYNqtVS\i3F[[?g0DXSBKNoe7jl=59"4>V/!h0^2h>b2rX)BF/C^3MHA%nnu3'[Q/O*_:XO0:UeC8:>$`D/Hm6:WXE`d@u!trDf:[ohbN"!.S[[imD&Ie]05b+k0r_.(H)6ddb71\pA1\BO)D]aO4S<"3S[iL%]bA,P]R@#sZus!gs7h`G^Y98@AB/aQah.'s$1Ej<p_L?Y(SApa)da2[35/PO(`WMI.:3oF5-HW#=6?#l]J]FmGiJF%WA$%i5Iiri%/MB>YGk@i#Rs=dXTfKBLgFl=7HTqIQibL.C@\Wd>;k>c7]b1Qo7Mid7hT:b**4Z`3?MK!4d5-:Pc84oil-@JW>5lhE>3X5$m7RB,%Sc/-BO*=d8XcJYZ'>'kah70mN3V.'3HZJ)GZST.<GG-efG3*">1-aP6Sc#o/k9aENYG.`<]Am*?F*HFf9<3:*:XqYc?#2\Rhd%`h%8+++k]^FT-I.\9D*c1;[SJnYKmS?Q:5+J.#mS1r$c)uMF48#>R;k&(HI.F/KIX8U][@_fR2g)Y-_9#EsI9amJA)!:(j1W#d-26ED%ptOSnjnlN-q%p6,jXSTWQ0I8jhYl]<=0K'1j5NT`4b*7nbOjN%Q8ed$p%'icJr%88p[p2ocM72$IE-[tZL9m_nkYe=Xn<:hc0iGQ%BD\MA3)t7,)-n.f*Z?nJF^j&efU1;I96k0h]WO]+ff&FZ;gl+R`Z>"aSorio[jU!e[De%#@fFPtpYDCq;n#l_LtqIB,Ib@CKoN)K%q@d5Lq;CRSD`sP9mX7iJ4ncTAn&G@rgGNVWe=UX':\kUi7q;PipQNMo]0!K*Id-g5VVh#`21s$L409WN)\!$JkN>?ff@+LK6"+N[%$,5<1'8:YubWQ;CoCZ8]A8Z]<gjHN7'lI*m/)g6`rE+1)P93997.H,TZ_q/:]SkW/FSDP>UNS#"(*Qm_f&"F@T096q0BVHqpqt";%e[YP:n[E%>mBN.jV&/I>gt8*BnoAa=Ie'mg9B\OQJ+qfjo)"dJmQDH5$I=%jo\TJn?N"2Uo>/;jkfg.FQ.h0]s7FFW_SY^&biZe*%jdG,_kI5)-H0=RCB7(u7s*4NIq>U4s@Hi5)r\SWpqp'u#&#LD]T7?A":3#:0C4<AU@-c(>(D#fW"7P4)V_8r!+"V5XI^o76cI0V4%%kD\s&*r?RfV>FFq>Eeo<u[bRXjrci+6B-M?$OktkEEs8CJUiMcUQdY`uF'6fuM'arVC@(bNJh,0E8:>]3'Hq48X3qmEY(-g\JOn%g\:HWbp>"R&*@3JS]9HO\YgZnogWA1BQQGIHH2MIFdF2qDmW]okBFA,^0.u=m]a24XfXJtT!.6r$_Q>Ebq@M\Y&#XaO$,$IcGauS%(12R6c7YFO*5$cAqsClTPF:[KjN2.Ns7MTC[8um5p>3`?Vnl@1jlt43W]]D-kL%/he*iJ6NFu#W@fG&tH=R!.]=l1=cOTABG*hW7%^3I.E4#-8Bl1N*6r6i(8C#f$-TtC1!@;09Cq8VRRkN@218e59fYC16$Gjs\8RhoO-,f24XXl])_nUC;MQ9.#^]"E$0p<N6cRucH-%-;=-Xb/<f*r6"0fZFf[EDC2tV)=?jocA%6!=5O3,X/cL"5:rtu<h@O:/UVQn[?&4\GLsP^mb_>pp[TQp9927WY&C_^ZsI?/mi9'#%T@AU&XsN,'6_c;Y-Gt[Aj4!>>X%2$Ukgc/IqU)?re^r,+VFtF&2kEdZg>;V12GrAU%Y'r&N&Mj7hd!oT^:(T,g=^q'Vsn<Zp"[S(%pKi@%Gl7,T@rl8^:%77qH*agNE95?if]'BL'6>,ld-06;h4</95K'>7D]:bK(Z0qm5(@pg2E<tmDKgT,n:'roXm#`#kL\JW5C[e8%&(u>UkJP!Hj[UCNn(t*n3*;\Qrb-JDG<Wb1G/&DUIbB2FC#VE%qe:Mdr8H,&mJ=`Hg!@46U!_1BX7s%e^OE_ur407=M8&c\E9,2G%p;>1BEcgL;<poYH`N>tV'5\K@m7i&#n<XX"c<&9if.S4ML&A'Lm8*OJO5IUpIsAW?O[!)SJ%7`6C41O-:%?L)G2pmAX$XJQH8@B]%fP$_7L"_H]Hni:GqlTY!i&$;rDa$p\r9$gO>(?$MY#Lg]H*uZqqd.oXHi*5MB7K*L\*LT]ddGi/f[d3mnC]tnAT_U'IJVmH?=gn!%./TV`B$)c6htpNYXtGY+q(5i)/:H:J1jSSm^:X#F58gL9pYROG7f1GKomGm#ilek&rm6l>L>O"64Eu7'j5AjRqrE%qp3:Vi\p2tW%WYVJ&#IV0@Y#TiJb^3RKgO=C^mQ,,.p%=<HYP$U[pA*)!p\='li;;9*r,<nHj[tNQ\^,14>Bcg>c&'i=jSp:0D>uEYeHI9"*QqF7%0E'\QMTc\?]4UC%;SI-%PG;D-Fi$XFcW<o-8"D2>6T.Z"iV96AjcE7:=sINEo=kop5MPW5@t/pcajs(d=tAqsC'UShg0[iS"[D*O%\D[4jlEXo_.(tk5c0+CrJ6>((8TNfS0(,LbKd^Z9[d9\q$1"uk3=Teql/h<G_!@_#fPHc_<oB#'5'/s&>?^<NbaeBEV*i_Cc<c:O%Fnid*R_l,RDT?9@3h:Q^kau]s'Zi?nM-!2EOn$[Z3S[<B;9H9>8f=,8OD1"a38\?1YJ!gke'.gl)Wn(<TYL[NRMK$t=nsCne(+Tk%OENp00(ZZrqo[eC00=@3T=)R1>u!%OX(Ft]:n33qF#RI/B$++[QK^ZJ],>m1qtd<D-e#*S5(un3bj;ccVNU+R5>gR6YL`rm[$7tT%jp!TqV<S+lo1/Q'kN^N,mg`pK[@O)GPae)Yl@)aS-[-&'VFW<u/i:`DMrP',Bflu,ITtNT;_J%!rLgPl\=D\)>r;1A;<C;G?lA?:%B?]jMqV>u/??R#pT/G!Y*a%<:YP>W_%f]hQ4uQU?C,+ToG.9jl?If(qmEX^W0?Vi)Ku'saMl/4S10U3n+,0)u-11php@`J^@HE?i%=d[!3[DmYCQZ7Y^gIC/p6`98104;VoMlP*+=4\q_M[nObLo"iPLgN'9;c$^mK]blE]-6T&6KTiC=[Ikllujt?[f4u@ZirfMicV]V%W,:^%bP@d,PT'Lln?`:1NY(mC<<C^r?f]2c7eZ$>?tkB5lK("gCXjX#GF",,XQ?!n)Qi9*pWfrd^R1'%hku[Vgm,+h4IKQ4P.'I?%]09SCJ3.d*K6-ic&'Z3-*qWSdd(aP?J<oA.ep/](-^D'JV>h,d\oSSud%Y5n5C-rj*>bi$8Q8D;Yml>7*f^1WlKCqj=u8U,_+>Df%Tn]U>\(Kujc@W.(0"@iM`^LS\6C]&>d"O4dNtHGLF78U+]:(BSH;N3FF_l6nVWk8-Lh=e(f^).a]3&$A4i\kF\^9]s38DN1euGiR%5b-]ls-Yo<([YSthUr'&$t/m")9%!X=D[FsR\T=4*@>h&mnuTuf:>guN+DqGU4F>/grTLDXbcXHQJ'S*cWBRE!2$ZYU?GXHX^%QC%GZ4^=na!%:IKn&u3l:]j.p*Q*q7f\VQF)-JWPPC`P.fUcFrAa[m:,JMbkk>FT4te)3o2r6'Wnk&/a-m(7Hm!H1AXdRPo$o:Or*'&%o(LEiLLo7tb]7i^ARhhu.SsJ*/]_PhfI[uAqr;M7kgsNdK$8(IaN;ZKJ+*B"kK_Z?e(W0rHi!7#?%2#$Q$r+Mb*V;^iL>Asb(pm?%aaF$QA;[n9X!*c5C)-$M;#4mo2dFoUgE4l$G(pM&cf*>o;&DBdRrNItjFekB%pm&#:eo;mj+,t=grL#QY0H](j.T+Mi!+X^M42ct%F.VQ@RAi/cF.OoB%fhT1Y)*:MaJUG0UJ*^(&t!HT5o9ip*uO7cD.=eec^.0!*_(Idd.9ST78>ITj&f\9Of*qaKh3n:OuQC%X1]Y=%RfrHoj'4,GPE?o8GB$,;aiTJTJbcT&GnaX5B5g@G/^W.kB6gqTMqnB>o\uAI'<EPkEa]M)R@e,pZ6C65-8(6Q3B:T>d-l@'f%f%s%6'1V:XYYHqfO+d6NR1B$\T\bKSC!+sK7T6Igb=WT`%VueOfV7Ub$G7=YE<UJh8-mhH+G&iDCBi`Eu145MgPc6^s+m2-[6@C)&F3d%0[GXcp)n>7>S%9A+Z/g#7`n:^60Mde6Fke\!0_D_NudjT3@EY_^isj?*DXRrEcRtYN0G=m!lM>TA>G"V"Mc\.?&`l2UAKG[atMOM%-V.K$ltKP_\35U,CZI&+&D6?\5"J9U("aau+3-#(4ALP4'V53DQNbLN:.5IJai.Zg)?kQuW1PjX2T_!`8KCt'Pb:i*187>X?[`_H%P"gf;$(XJE!m;;=M38Fs:`^rrK>TB'0*4J[;4R4[\V:?R"A,>d-^:9*]CMHt8/`jrr.7u%@X1`8F,O<iE?^0UZ/;h*o5Z^E-$"!J%-o2As@/qX1jH`B90JCFfU+#1+,7*iBq9]>Mgb90'V4R4"3jS,)6qR91*#Zo)61'1_&SO.[6*J:gEuaujdn)Z!3<NZ3A9*.YOP5]P%.PY3U*m2Ij6#_E:TcY]Za!&G?_9XA-:<OA,(_HIti18oe(_YNafFL:8Y1tB+;EAj@Se%h:H3h'hE][EgjW5"O*@Y"3b%*)t:k9T<%G!^@$MF2?I&/5l[('neJ8i^o?EmG!si$L54#g\Y+Kqu>:LEMQKrL$3ar0t2dn%CP,<J6VZaV@*C=]aSq?02!<jGE4)FlH.=nX;ij%0\KtI9*NP!Lt)P?6K4=-Z2mO-YbbaPJS2/ejr4\<&`e!hI#.=/2un$]e9J7fCH(4kEn594i+.EoM=,@7#a->kGn))c/H!dPECs_\%^tH5K*1J$!]+iPV_G!K9$>OWe^"<LS'U793Z)9ir2aR"i(Iu"aMX8;KT7!s"7Q?<4*6=+uS[BEH]NTJCjrJ"P>X9qm=WZe=Y&:=l%K]8GS_hR*aKLW,JRhJ<NnImm)<:b].JqS_PfE:)!$._h",oAlrh>n?:NeQMDr<"C"#a,O+"!+,?^g&,>",JPm*cUNKFMQ!)EeH"m%ZZ?5sPe^Ol3ae)AS%[G^Pq@_uOF]U86r'I1-VS!',r'\"^g'qI1'3[&d2K5'Lm(ZVd)<)@M+GJ%O^&MFp0qB`kge<dida;-^jqpY%(.X40FQ,cm_NH1M'9?%'+QR@SjL@Td?bVO7'Xi?8..6E-,:B]L57/tu^bP_C6Glotm=F^Ra%kUcH/T`M%jdY6M9NT@WgO/`9*3YR%]GN3N!Da=D9_js0qI-&%M:;d=M)sdd,Wr1gRRlLm0M&FCOS]%=Ld\+udK=A$@kp$;8E>"HpCmgcLPqlOX>TRA4pe(m<;$WE<$YX4%Pf-f>p^8Ja_]6X<ZtL-cN=>p<"4_@Sh:P;@UsP1!'Z#D-:Gt5\h38F0JiUJGjt6G%jXgu7;\P"8M^"$'cNrO@<6V(%*Wu5@jPrSS%M*_eO*a(II$PX#N#5B9.JR7er?^W<o0N7ZhCu:4k24:jDB``)i1Qk[\il#<"I,`\S@$m'mWhDHh)c%0A(g@[n?tl^s-MIs0UDTV[%$c6#9fST6laql3N!afRc,ioXc6Ie>6iJbR9'aifZ@"X/^KTp"1fU#!.5it`k3+'jL^r`-,l:Ld+!NN_m5=@j857'4fF=[b.`0!S<%d6c?u!3HQC8j_aJd'rXH4^V&QmM%+-$F>Le4+\)W*"uL6$iW\a@jo-4VNDfIp5&JS6;LJ)F'o\M,1_s>G\2I>/houD-OO-BWC4Jl%l2\th1+'ht!4!*==Eq</62^nA1eLRYWBM:*,%t47<2bRp$Og3cfY1e<)iD&_-lW^`R/$Ai=a$/Lb7f:Xr[7p:POZh*Jcmt=@$+s#%l7'cM<s._<Z\i<#?E>B*oKn6X`j^/NUWB_e;:Lh:6eO_[>7""fF?*7kX>l0'4<g-4+>CjP6X7AXol3W"NDM>s\Dr0l$4<F4KaKR9%=f_uC'-uh6GmRJ6aRbdP)>L1)($Y&BOEANK1&ulNOc[Dl4YGA(Pf\q/&ID.4(>$]CfD(4'*irLuM']3($WIg1eLs>0$Zr1HUm0?T%`E\<bJa1:-BF_,rJmKIDP\]2i:;H#u5NBSsU_K"r3L?hnZe,Zq^7^iHqFm,?aUA4ASE"jDRR/Fu1CLd:Nc,)h:qmX(m%%hNM8bi9%ZE"d'bmH&&D7WJR8oeUNECma6OfR3$?uW2/+6\-/#D,O]@WgZj(,oLUEV4't3lH0nFs',g`9d+IAf9SSBECgMbd`sX"mSCoj"(?Q%+s#ncc`/b;:6!-G+L+8_o.36;W'=E*-&EVe*&^*?s-tBDSr#$f7BhV"(8`>u6"oJf4j2aEep\<DcId+V`gt^*_'sJa6Xa2\4*!a]%melP5*23G%>cbTqo6aQc"bfBUA#%s3Tj$eMIYPS%0h-<j1<,(def>KB$nDn5LO&;lP]oAH64Q$9V7b=lAWs-n5U2Oid,bojZ+^cF%b`Ui2NWXE('T,G_D1U*>i;2]g8OVTF&2JuG-aSXpi7<u^,'C'`6=tg^5S3DnaEUi2(b'P;i<R_,,HaLt777EA(^KAXAn:?Ql0O?Q%=(+q?aXV\:REAiaB_g`65$/U(k%PChj$<0E3jMbkbLeX/ZN26W]:=k5eJ_FN+rK)<a\"q>s+"i,DeG$jb7;h4?n[P=\;3BW@&Flf%^)W,.bmZ)#Cuinu;;cit/\859%\A#MnlnnSg^/oAiWo6->$L2(92__(KYS5S,Q^=j'1%cL\V`@a*9tgoO:B2RM<L$^d!'^[_@6Un%=I<kPd;eS</L"(Y&4@9QKGAJP`%G2K^dN\H']p@g"jed<HIo2dE#?8l=GRKaeJEr^WKTST@DquO?utDm!Y\$p&IPHM#8W+#lIgHI%[/p^[-nRi(Q#-SD`0Sl1A`ATNYljBH!(YWgqHN0:(2!2:RAh02qbfe!!&`X-e#QJ)&m/g<I3!Nb[]9lY5^c's01kD-VO4;qOHZJd%,-W>hEp2S8MEjF:CYK6HLZo4L_QDq8R"t-\_:T]aWNBq?iB&L<Kd':ATsn1(b3+f,`*AY/]3p:oR.b9gL4g0[EnI3e!qo2NB,Qpq%H@pTC-Z)p-UPX-H!Yn]c79i\;F<n8W@q^2r_;!t9$Oung561TM'`$]4U'7&R"m45PUG*9^M5"D;/"[,U(E#Y-T`g.[1c^2bEgp<\%4pb(nSf>Vd.KMhOn4FK$XCIf^M+>8`SOahG[hYCE%8&0&0c'^s4]=ZLf1do9_rRK''ZM@2$oIGeV-!PNKn^p/l#WeX5`WWXd4*(7%)R))]BhquE<a_VPd1oj*`6fWthX0oFmucZG`)`L4+QNmd-!H"1.JTBK<Chpg#Q%uE4-7@S@tOB:]tqXJZ!?7AJpBZqEl&lF2Y<'J%K2%,TBJmRQB]&</MkNT0.sscD'1+]M"A47,M7MctTb.UqL"+45c,bTJ3l>oh9?&,paV*\Rkg5CrL;$4S9h='d'eR%J:QQ1X^a-9,%*,@eh&Ha$t\CHNB$c!k'?;B"a$kqM2NC,(B'FF%S(!?-@8r9DNA6/LT5aP`:.\4b<#Rc8SB@d4@:A-Ci-7O\KN)N2cH7+2H"=8Xs%9t;]4.*Ah/Wt>ZE(cjaLK8B-G!XUQg!"pdB)8QX;F%bR:KkUV??ujF)E?5U["a!"cC$rP$e4#1D6qQ,f+=]O`9$Yrr&p5]m4u>qM%l!h`FlDfr0nN_=Cp2^h*&o`1G5&_&eZpqMt"En[%[@En@Y>#k;9Gc(mlJeO5At\G3=s-Wd$79OUd^k"S#1&0g'kV@)pFoKg8o=_O%=qjJ(AcrkNpV7=IBC=hL\q]Z=KBhickV!Dd=fgru9I,V!S:q^m!eS"h<C4/TRZerG@/^N:^.lF"+L;p]F;K^hK-LNe\^itKHk[:r%kR@pI5dQ64b<XGX4pmVPN'5SRNY;[m30)Ma!br3:$#hbJY55p8bO/iL*QW`h@TGf,qG(;'=Cku/W"+CJnj&sV0!'GKEhKZif@m\&%"#K500K'9;k;]a>ONOh]WmEO_BcW1B9[d]d5\KSib46"9&i*#h+s%jeeA./g=A9%@$`CE@`W[%k["a.np^jrG4`WkD3'WKlUiiJ;%jocUl!%Ghmd1oQO>1a\uK5de%f`b"<,M7:IbEXjqi-0/@iT?8T%=m.^k+2f1T$S^+bed!%Y_&L#9HPf,;)^6#I?6Z;(,B`[?f?J=%faBW709O&'b[Q>P_6/?.!DM3tj1m_sATiV0QOoC._&2.!N.AcH5].j7,)=:=)uM\R7`+"nB8Bgffk4D95SOe(AiMrIcP`(jksmWS%%NNEXh'<IfU?-%k@Oe&:1Bo=R%(/JG0p6@K0lddg*]Z-WN#oYUJ3",;0IiblQA[!F1=;1g93.(7EWB2EY?I:t"pL?tB!KG,Ru+h"%ki9I-H3qKH6IA-@\0D('^7oc.1D@T)W9]j:__$ndrRMO(TRi@6S;[t5HEgR+Jko.;9LK">"&,@]LEg;O\eq*=:a'69B8Nd\7\.C!%"sd[50!c#V5`YqH3<8$9)R;M[.#!,+iWY-@-*\3W$"Y2d<'`*l!)\+F$_^W?0P1t0"?cn1=9;81oGC]"_E8C1,^0W0(srQ\WRJmG%,"M#G%]HDI#d5Ps5\VC(?%Pek2CL'G%#d4WeL=$t.*)Lu(5bu+-q"K.oe\oL_4+*J#QiXTFV\-o;%-2F9[Zjt-U_@opT01(oYB#P%h'LC!=p"5p,@SVedBDkEItZhBQrO.h$aiGj#_[0`8>Da_Tm_n6E?po0@D3i9Vg+60NJ,?p\bN0n=h?5.e<<;N5ZC0iRM[HH+"FHP%l3kL)#)oM`87r-Ngl3c)KWW0`5*1uE%36Al5\.<ra(5ms34/*P*3:9m;4%mo&>QY;`<_@_>(l+u>kPs%,p&VGbF0be+!XV6=8Y?D%eApt_@6"X1D87!6,:lShmdOsPBd:2KTJ5Cd!H!Qd*'K%t)W?odp1P^@'V(:4(r;n;B5ee^=Psk=&ArM0-,CQ=QNKqR1lZIkN:]Ja%$;SMN-Xa*W?*J/'*ob_16elbAQ4#Of#mDF+>rEHj"QOeB1W1!'1GD@f7^F<n[m1N<:pp-"FYj1%JY7Ze!R$Iob:lDG'X^ZmdGr*o%YtTsk0gLp*[Sk0p?=Yq-"AFGLdqF_SrHgFdlD`#sbRIRmOQ@.L6=6;?Z=`pnn>q/6M=9_i_+!_F*D7C.>B"u9*']'SVkp:>7WFgB%N-5bl$7KIQ3n%Tf!Mp(nRJ[5U?u`8%f4.Lon^J/33OSeoaEI-IXmtDd.S%@FYT?1?6hQ^"Bo6"6Wl)rW)$O*lZD*d$/*[@SW"PD@%6ktC5^!LYZM)65$KQKc5/b0@[K-V(_p?KFP.>]II_>TYo$M33DVsJOtqHUFaY^dCM\L/<n_>ZEF/ghukG&H!4c/ki"FO?7e,BlVS%7$S^o/`*iD--UF$ap.B<C;'ajA([#r#nACW"I+58BO&XJiRLN2D[u9YZ`o*kd)_n[;jN4b-";@kJ9fM<JFH)<haiRZoF.*e@+8I*%0OL53Y;S:Z'iHrh`c#OF!9W#i$Ld1/9[k@uR3G=]#gsfJTM,Wt$t>Y?Yl-lq(I8MJGXWGnCFldbJrmR[8]i/9?._uX/3s.8JcPGn%p8&tU;&!fsemKgNTmgZ7'%VE2%q.p-LM<7a*6))>3qPmr^"XD<HnL*]=5k*D\U\D<f#!l0!_qFlnNFKG<WqA9n.'FS@icCBs![S_%]-CBEpq12!d(Z6J@NV@9%L^2Il)Y1&l13>)Q64"dhK/u8-R*/2lDYC<@5in64_`6%/X?^K7d3Kk5-Y@fBW,,<Nnk$$/bE#]E"uE2%bDN#"*mktm5k"o54oQn_EUk7*@)<=maT`p`k\4-.W/Wr"JuYC&Jj_rH<+_I.#2;CN_Cus01>rRs9Z1G"eHs?[0(VFYHT]5E,#LHC%3Z191f,=2F!!,.)#Yr:iZQn#$*RYtedr#Q0f.DqN.'EiKHM2)rMMe)S,`U.sT&\8^!Hm.pd1)#MNU4XR@/E"*=>M\maUuF/>`/e\%S^c&H<?o=0]p>N([`@t[cX(GS-Go)AgWa-@DQK]:&ZX%'m<7kfpeHkj_5Y=5R8>.#'l.2OfJPEP&7cLb+2JHEM$(]V4@D$!G+0%g%d.e^fU>qlkW<qJo5iTs$+qVb6<T2N5GQ]F2:UlFIV+HD0(paFF1?"n(i$AkqE`93^-8K,/kl"44rsYJ-)V,s>[ui#c0tVJKLQB:%%r%iXD&h*YH![b.3W)=Q1Zk22RWF\?f'Jg>F`#4)gT^PBIS&+LMM@h_d;fu,$"9Ti=-kVin/eV6_&D.ZPdrK!(SNP1'JN!2PdlEd,%-7m#T;Uu%u-d:&04g52dE<ad667WHa#;cJENY=L?a;oM?nDlhT<V/@.:"+mGP;"Hgd1km.114Ku%^U99;[PW]e%iX1_sQt:e1#Ec%V"kTJ16h#LoIh@PK):(O$=4ZR'b!UrJ/?WojnV/MS@%H.%.&iV#\2(U9c,Z")\uL"kT2"#3a7<8A&&rIpCnD/;=dW%[Ki+DU^1pC%l%q(p'/C+rF<ep0Ue_/%94!2U>MPf0o/`c,=#Lt!_[9\r]U+-e4M0kYk;u,)[MQE^%'Eh9qO1?@'6e/KHgk@]P_b9c-A4\J2(B!t%7"V]J.(thU4g9#7'B2R230.RQQFWG@*luJ,6=#k"aQKDr05(\qXrq?5GfVFZgie?"@*YSr=Qpt"<d+tNkQ.5`fBABcl7h<CG[mq2%":M^Tf,tE8AZ&$?QA6#m8BM4245n!cK*a#[6J*=*KAFI;`?-k^I)l:(RmZksB.bBQW@J@5*P5`7;tXE]%2'L?-%7LJ8>$jX#W<Vq%`YF(7Cf3l5*;.#O'^6'7*,o3%+h5$$HKo3"FFbQE8mk1Md-RY13]1.b;f9D+.Cq7%l@IV2q]R;56HCV\D\H#6C:.@Wil2ko@bC#O%mLtpQEYk-i9Z7=*P[Seg!h`$Gc##kW/hZi2(*1b-n&5&:kSaJbQP+]L1'DDkH3h\+2N%s7_M>pO0nBMI&Ngh[i2K(r'c.gBfrW*9%oCV#Z)iCbO!U>HqYQ3?,FLX?2)KB7Umo+]eir$O66NA"Qq$Okim<"AaF:CeZTE0ub,>,./["k5'2aRQO-mPN__c]IM^K!>s`[bpt%Yo-]6%)-eAK=0]PSo03j!lD`c3?,MM5eiQhpTLd+)2Y;2/-1s6k/En5W?*gE,Hrn9QqdW^km>6O@e"1]N'Jd%CSal26,I#pLU*A)%[NngLQCN3:LEk.-(W2&_kpf*Ca?2sZmt!4V"\@KYVJV7t5A#]o<2f4-!.C<s?:7jeU=O3K?4\="fhTQ]G\mSp\(5U'`C6sFq8a"t%2&gSX!!P3:JND!s"AJ7H[[0\fVAIX>kit^*-7E7Ve"$L1_.Wtkr)k\$[$[>m-PjK+HL-Zc:'g!O+NK$#!MjQ>8<X>eR[G-O+^5?q%HFhQ6B_W]t'Mub"HU&&rD$n[*i80IBK2.@t&l_ag4Oi#\DBh[h5S#-aVsfX#6;P;B/95-ANN_%EbfpFM-)rILCg9"_6L[_75;8-b%lg0/I(]a4?>%,u=Mlm-@$"0?:771^FWJ#d<=e@B@4'_%P_@^>37Yrfuq$Cu#3k/a&>T/^bj,)k(fK_2:#X7D5#tKU=R*#T^EC;>9%H<7Qm,a&shesS+Z8ebh^PaMNML[iGfTh>)4.pl%%KBN,biAGgImH?F'nNSC\_2jYJ&Mb,R#%r^p`Ba8Br$^nPi@>$W?uWaI:kI5N%.+]Vt(#@KN;@41G6*$(kAY!clKe+-OOVt552k_LK;Ln>2Ll[:EB>n!ZN@H)eJG[?m_U/$W-c#7KAV-*t,\e1WaJ]ae-B02l;uJEZ%f]t<*,aVC];[:=YK'iA7J:i]ZA"PVX=>8*WM=-2E3BlcZ1fFu0876sBYK$#C@se<OX0bmg306&6W'Cbo!"9,F'E\"0bh,`P.\aj4%7BAb^@A>S(VTFNRHB8;^]$Ru*?9oonQV%tD@j&`ZR#.UJSWnG#JF(3.$rirH$tdB^*6V$?j?*tUFB2@XKtd4gKdO#`Sg6L*S&ffL%4qE>jYnDc$+d)=J_k<s04NDPg%p6dQ3/q:[%I*mu2HmooG/tUl,EY,bgW]LAg-C9hM0S0='87iZ@"_8qdO;O90r\slVE**O=Vlc/%#[o>pb>VU4Uj%LhR!Q9XS4M[[\>M]")X_e_4'!Y*3u`)6..f&a]ttcPCRdCMKcSE``8^o[DKF=qd7ql3,$*]Z&duG9l5bRpgQd*M%jAu2O63ZJA'sA#XGc].XYQ]#W_NMj;A#t.0Fh:Ic6QJ`eM9D2tlOAOO0T[^HQ70QS;52?0m&nMW'?j[Em5n)%oPq]js0q^5gfJYY%Uh5:#$:g9m&X6irVEcC!OHG5C/3%Z[]!]@HI"^om<L6s(p1.Si%7J8[L8&:]8K:4"-A:G+;#?Z+5D?ID;*(K%(l6:3_:M"C(a8h<%_7nXZDErskJlPZU@8Zl7"M5MpA,7]4Ik\ha;FZL&5.u`g'n_T;]?EA+6gG^WYh>#<T&A)OM36"#dL]*6JB1a>!u7bSkT\'5=!R58%kQ4[Za:3;nKWJV>RXG2LI<`.9VCIsk]RtLC3eCQm2>[H7n\n3"p0oA;/+66#M<=o#4_7&I-c:TJ4=1EB/e/q!a(faRH8U45X8j'-%$C0GUTT=)C=LCO5R6C[.WF?VuJMGR;_U&JdobbiVg`(BbY"*&f$D%_+1HjM\5!JO>25]Y9\IFTLU61b1`.T&Y%2u@)el#oe36:_e%QKri.]cIe:h3?Y:P6Y>qjF_''(em8OGr<7f3:$X6H:[]j;YLX"%[e:ZGWZn"a]t#X;I_X^*[*4JU@MERqO2F4'Gn]2c#O)_GPD;-%ScM0X6lr:,nfb@opmnLlPrPeX1RA[U=X"`[+@ZSJ';QQQ0]0hB@[%3ip+[HnV?)uZgI=1jW,2Q#pMQ^K6PA%O56oIB;C8KkK]t<'%X/drfnLl676.]Oj1s?U<H6/e51,*.lK@#^&NGtsc$_W+p5m2jUB+2bBB.]WC'lt(6fm?%YTdgHGm*JtQ/B+!AbK(8o9Q;r"N+\n^%O@aW.-Y0L'Ic$HAj(`'PWEEMsStT$(AEs<)7Z^H(!e/.r*;UJUO"PVr@QoambsE=5<_7i;6O=g^4ij93ChRsj^sg)1_eJ,//]6or%e%V8E'>>T+)8P/H%5.,fO(Qnp)@!<3bIH'GK>G@-58[IX8oZ=$^:I7j8Kop-4+J2=oQ>FU%;ZcZ6g$B+5&(?0DtVXAQ2<t#]c&M,%g<1Pt<@fa3=Lj<17>cBS`>T$U=E*`>#VrGL+Nm.o(s\4W:c-a:&_":a+n\B'cY&KaV0Sum1Xo?iRW;s10M%W=W>2"s8/j[](0pg4%=i&aNkf\_"*;bS-<hV+`BgZT!KW:?dF^V.O+e9=FNm_C_-4C&dWaR%*'d.N%(oqalhDrTc$IddEfO@/tau!3N7-CfoCK?+2+dlHo%VoO0.J='P71$]'Qb%?(EGTUammS*DEjG83V\-=E<6Dd[1.*Zgbe9@n^TR8/`Bdg3=oeX*bkYX-&nXSe-K0r/(.0R5!.*.AYZ-I#N%#6OI0<;eQ:9UDrf]fP@o-UkkDY&"OO1E.WJ(RZ.qL\MRI0EIP1D3[\Z"rGK7NIV2V=pTA%"prXYMgWr,)dkuO3cVi&JJuS+7`S7Q%J2.$s=N!HK+6'=M`B9O7@YC%$!iGcX^mr2=_;s<X-2VQSp;%"r3>TS9PmrhM!JVi#4,om(lu]!cG$mXg..JHIW\`GRm)bs_\.6kk%1c,J>a8n-1+`4SB_6lo>-]Im28BM#b59fb6G]8!4.R*u,G4fLgC?C3VO1h;A8B>gJPNX/;lIRc[=p-_t'IB44LRJe2&>bW23l4Rh%UeElb/WIUPodcQ.JX,XBboMbr]*,>`F^$%e5^>0V%ZKemTm=[($J)ta?M+'k#ROD'qO&D:hA@XEOfMUQ,6RI$TeR1(kYKUO5Cm5L%S$/NW=EPgSJP9-R/C,bYl;C$_LVi0#?]<'1)X'I!/g2D(^feVi=hcm.7qf/`NpS&]:t(PoKA[uTd#Cu%\\fg-dZnZY/9F7a*0!9R%bH`aE:OO+$a+PHUc<0[Vg<QI4VsWdAD_3A:i>?=2BF'-I%U)[_/>sa892N;?*kAK.&p0Pjd%VR>Kjk3EYrT'?`Utc=ZoMNuW^tp*%c2'.cljQ$t$P_ENY#X\JcK\Og7a3T^.`<8$Jd'+%3Ej"#W]-<@SUfpt'MP1pjJE6>JQ4!a/P@ofc66eEcr7(#!#*pn8r&`U6QHP&%MN4=]W*+`->D(^7UHU;@l.IZp=J4qEC-VrZDGM7Q!<koLiKVggI1^(a@8kN_hE>rk`o'!<&+DG]NA(ED_)P#Q/r1>Jic(+>,RsPb%g@`Cam))_[I%-fLCF4S>*s7u[*!Zne,tJSV.ij]WC+hS"YdNJBO0GX44nDbpKHSM*Odm$/pGM,l2#s>AO;r)$lFic.UuBV;Z-BtF%J@6>e9ii@A-Q#q&WO[S&Nj6Ye[*_XD]n.A6,&?374rrEdUF?$V(fFoC0P-ZD'3UBmm?*(X;j9SBV0[nlD>8g!_Qkb&^@lZ7s0=Qh%>m,.XX=(hQ,m<eTONc#D'%FYu)YAhO0mkFY*r:9:3XXKh=?cl]Nm6&[@GK7Q%k"SBBMjCM4^G/3O?Q4^TN.*cr]ql^FjW[5PR/j)%dO]5h"dP]2k&`Clc28d^&>Tp`qc>f@^Fb..S;gNofFrn-_?5KQ$t6T<gi8Hk&4*O_&m"9@XZ3%1!7TTlXkO.cKmLMm"e`ngh7,<(%^ck)9Ke^6YdbE,_qq\Z4(Xj?\N<:dqC@!#6,UTY0mA)cu6LBV>F.]3a-K>8D%B.'!UD],41gLSd4I`tbh'LQ-o$brs$WVs(VX?0i%!GQDp]S;'2a`n3s3,/VAg>7O40\7(i1WrP,5>W44X5H$0R/I8,PkgSp7;5aV]P&?.*PgC[1ic4N@n1V:&:\JF*ar*#m>D0UTQ+G9%l-*6AIFJ`h_+>Q"N2\BGGQh=kU%KXJ(A+"cWJDitOmW;)jY4m_qh`jA825YY<8P`E2h1s"Rr3p4%1HIB'.HHEdUYZ[mNO-*f#05I%:#STbH=La*Ns%i41"$FA34c;b#-/$f=.^NZ1:WEMMKE*XAMb9(@n508O0X].Z7m.QB@pfCBb*%4Tp&+n=U>p*5BI*Kf`EBm@Z%7[%JE+Q;=:cd9PubsM!Y];T%e>o!X[<(F#cOoD"mDCWYI7Dg@bHFc"70$1O9"FtYW"+6?^YP9>C+*$ii&W@-gWA)W3Yk8rRAE96E4Nh%dR%!:CL]j@9?*Bg`Bl7>RV:]u$Ps]HB0qk:*SRI>O$i4^MA2pXdWoBDC$f8n`HZ2t$9(_UeeJR&>h_uL%404PF9@nKkkZ!\UT$fR%o(l4`bpB`Y6j5kE-..:D$G(dh9Cp9JC613eY`@7`'r(cj.8^h%%K2NY"7:C+,\.sbLX%:p/LX8.3t,Y3OGMGfm.#g>Iu+#1mnH)[%L*R2.1c-XO2Ok*C*Z@^AR[P)/ZcP<V?R&#A"2h&"g7S\F[D.hR7m5"f^<L0UO3Qco&ep8$RJ@NK'U->=jqtEdR*=L`b,3^o_),o:%d?k,VX2I!aW(mE0`-6S:AX+NNXgHMqZ)>uR^bgAq+Mq^m:rombapWV(\O!7uN7*lnLd"En`F\9C@BjE=dt-N*j,O`TFlrb>.90pQ%jc6$o")@E0ClY-`IP%>201JI2r6X+m]?,</a4r@0%X7uI7V`hXB#beB/DG.k?j@A$m9"(ga/;W6JIXU*)/&DQ,Qq-3C+$@BD4p[c%0T@MX%n(*eRuZV:ZWrSm(\(TpNU./h.p9Br+"D#@Ik-\C%@83K*`1m>,OMe5e<csIVf[*>,.1*1KNcS<?msU2Z#(1!'`?AgT0b!F%I:#?1bec3F(+dm!&PIRieJJ^!L,0t5'BWFQrC=adO_nB]Ga&D=4UoQ7;B*N__?<JCKnd;kYaQsA=R7hh*LRVk(3$Z'fq93fJ<BL\%)oHbmA=:eGL@>drS?58^+V%""n:Krh5._dW&LqB9Uee`aPD>gcBVm)GoSH`mkeh0.73it[r?ej#*62Bf-+\UUhU=>tP4n%lIN4Je%0P-sEVu`8)7E:JJe:H;*FOE1C5T!^ig)"i:\"SIh>T>HoCmbm0%:VGu,bjA!)B)h"!MkR2DbKT4^p-bB`+R[&*&t9G!,K&S_3)(`%!)W%m#5c:tH?EV"q;K+6:W7q569siq&:+_K(UJ$5'2?t]Ug#;T4%o'.Trp,YR42'1PncgCBE?rk3]I/h"C)d*XI&Mq,gmA<qA^L;%dNQjl,3aXndGIFu'JZ1kN29>baP$c.<lSlBKUt^QpB&g`@\+7e;D#\IKXnAOO-#+aiQ#?**Zh*R9p^e^JKloWrsBhg,pXfB1!@A@%3qcs0\2nW]g2iDD]]NpB04CGh7>#GfVE1(2fa]?Z#)i]$.2/rh'<oDgXhEI)YcR;u<su3iGYdC21?0.DAX5B.f0uASJ#p1Q!^lWj%)X2tmW6MMT-(N?5L]L'fbtgiuVP.[2%=B(gBC^/-U:@HQrC@O+NV97VKS4tPf9Wit.R4SZ4OA`1->@=1a0rT7qm9H:Ps2!UKsA)5%<%*r_&]@1fT\bbn$Q5E@.8qCPO:e:m^n)cT`(#lC1AQP*'Jk.]f!:tL[:jC3KlE;q4(9=Rb%&UpQV!(aF5/Tf(HjPV,*:tj+j8)B%021*YF5L)uU[CO;MTfd'\n+EAn.P'TGJW)tf;9Xf23WQ:lC[]G[_qb=V?%=J>P6)D'\X`>\i4_kn9QB=gK;p00cPH@crSe(&8<D@%D'dM-(<3QZeIG>N31,__%1Cj:NEQe?AWUkt(?b`:,0PMKD0(#bdd5X<4H^LHNc.G`WShBG1m%oTWM*o@V>3C/mPo/`NR(=8BJFIj%d0.Z:@g!GmkesoZ]@cn%U_h_ONh+go?gQDV*;[[ZhA0m=1H[]R]eHn,'@YN_D@sfY\e/6cV&G,AP"*D<W)9"X6]6c"cPFW-XmuUN%[4qhhhen%uVB^ClU$JN-h&mO$A8aTbl`X#LQH+9pII8@3c^Ic[@)pAeMcinU6RkRWdD3KdJGm)X#SS%;9c-/*JuW.u.s"_HLYN6j%q<&[^"%/f<OdR!qIG;u@F;`nfkjc`t%7jh.bH^FO$4SgcW-ZF>D3j<%>?B&GBa66*"J_1QakFrFclf'_RMa<CiZ20D7PCZLe:M)$%e#$u,lD1-7nlQKq:_b_-K#?56'1P;g9@4!ef_CZ8:!b$L6^Rb7d@35)inoZr#?`Q$4Z9cACud+N%D=lIUXB:)0J-JErKslX=Qik)%gTDGa,=LZ]1S'8CF!2!f`1A(JWY),!GQFT6_8biK@Aq5X@_,`:=ukG'rDOPB9A+`ZL3%POmF4DuQc8#7;!Y,a(WaH,:52IL>_RF:%h$:]s=<VKMF!sGSY!gb8?#AlKEeN)O``_<$[=FKW.uG=BbqRc,NU3aoDhPgY`MA8aD.+m&A+,P5P=BD_/W]C;+<'Nu:O3Kk2%jRm%3K[KH8E6BO$V$Z(*].u6ZcAYq&iW]En;s2V?+*RLg_=7n.&BfpA1gi5b1tX,7(h:uA)B'R`YN0&PPBf;[`AeONFLq5%;d"rA[B7<%"3,R!L3hN<]e4FqUc\GSlO6ml#B#m\f4a[;;;J;=UY=!6K5Eql!3%J$"<6pd<M)W<M>ed-m%W431#sa*d.s\m4(ueB;1R-%7\LK1%.Kc5b^=Hd#N%QV)M3"0=S'L66D5XKGoUsSD7`-hIl)6MmOfuRsPXt1)9U:](oM8KK'Ud*-b;WfLX+n]!.Gprh+"qSM"]aP-G,,J)%%X^K,(.p.I];Y96BT%TI%3DM3]FEs\C.U0U.rmIu'3R[@VeUp?7a+"sJWZhqTQ><F'a=t`Ctf)[)sTfK&e!-GeX$c&j(Yq;S1I\Y%F0*N71jemN@%?9264!9HN\$2g?f?:0.`o`X_%%8u`%hZl]<lGZHB$'=gN`hmL2>)X@1cWP8fA[2(WX!6#&"ZAR@uG/m)>YB]Km,4%Y;L%pE%6lBd)#$&BIYDJYR6BW#M<@ao)MOWe8[G(8a!W'3+uq+3@&>[I!H=8_D;<H]Ig"q&-%EW4QI(5-WcKe:=\C!jafq?2,M^6%#Sk/iFB)%;2aFU5E1g49+o<roGp<klCsW_&X/e'#!55oO/6d\bPp*5g?lQ9LN5;`?M3V]>AW?%&!?sp?]5kpXTrDN82CD:=5])83%6:2pu-brdYlj4O4)Xh'8k("t4J(WpG/_KP0Xh^f9B,e`UB)$*CG2-S&Eo^pi.CMJW`r#<9-L_tIeU3#cW)JYf\7bnUcl'`p#F%LI%ka!0\Ri",M6H*1sh`/$#3<?K[KCWHtU*aE--7aZcot^54/Q!Js^##IMXQS&9dGdjnP%L=JQOe]*/%/a&Tou^]ehF>OG=0J9+o6m_%_%5R?YAn6;3e*409Bcni=^6L":$a#!o+U2jP>TEc#=p!aY/#gW<o'PK'fGs*(*!<9#Vm'cf0bT'P+IM^kJp%s<aZ'DFbX@`hLFJf%B040?IX^].qk^$T!GYJFmN-o_B^Dc]%'.]^2&Z+7JciubQIlModUL\&KGXsTVHdNT@e(GcJMt<_q]qQ/AN]\Re#Q=YM[gX,Kl\Y^%m*d1uC&hDl*@bNE8H-"ANQ#]GKQ<IED)L."?1KDc%GYJnD?PcKr6Vd6nn\X`3q96Re@?d0M=eZj%fh%DbU4M&m1&E_>'P\H[N.*D%:T%m8^fWPB;e'#")X@iq;#A8b):79BS';KMB<0jG#Y`m*4@W;A7?j[?>JWIQ/S3X+kej;8lPm^RA*8.R%NMm<V_4`W&K18u*p=38%7a/OOr"KsSZTM$S>m5Lkg8\KrmFe?MCc>pfa_,*5SgN'"[fS`LY!Y$'hdT]$e@:GHF$a.?B$>f&_erM$dfbH&S&QQXJJ=aJb5Ii,%M4_@i80%0$980987i*8th?(Vf1k^k%%/C)M`=^"bq8amk!=cN]@EHSnHcSMhCp;dPESG]h(@GgdQ[]Ukk-p0213"C1eCg4J+(?QN%H@^]LHgM*GK:2j`c%F%LJXb,lMueFjCGrO>+5PY%&)`?S^9]&)'(?&Qi"A>C!oZR:>>C]e9/hgW9$+kMd2O:UCas;C*38-6UX%MS%U*-^$'Ak^aIR\-b^l2ChoT)/X/Tuff"K^O&Ns)*0:%5"-m$Q^PcP1a@1B4-1@qeVGXI,kZbcQjE4-nTBPW<g"kC8QZ37.iiIsN2C%jKhoLG7@tR2gpHX@S9G&-UltXM^hsbM<n8&G_s?LIF!V]\VeWAi*et,>F0>/:#]Y,(>@V+Wj&c-cF5I`@@W1%!9HFK65LdR7?<UD%r38U\A7G4S9kfTMNTERl4;h!,6e'"d6NhMLeV#_1`+&=)2BY>MROMi+-"oGBd.TJ^SH1)JEs\C:).K)`#4^n1qt'1A\u:1_fUH?)%p6`qA4tr,U)`?1n8NW469G8SLYm%,@8ru>&m4\QFkD)dC%ID)iaLAHHR)12SP^l>h9Y-!s7Xlb9I&2a\6fVI+;g^fu=;&?fS@+o^%Anc!052+hJ9!0QPNdR&17YN"*?8:?i7X&F4cpX4IU*392!jIhi4mAQi:4\ak#VD3n$r?BC21"`m_kEbuagWtN\?5$*fuB'ua<(+]%^_n*go>:5uMTg-fY.OIqedc!F+mUpQ77J_rYF,eaHrZ0Q4!Fah=k9<mmXTnCh(rmR<$&*r"1_%5<Ph-4!oXWo"iTV(jYJ%^`H4,8%c(\&i%X3dI6Um8h81oa>Bj+%UE12O^0t+=pT,$=hQA>7T,G4LIlKs/:gka4VK@oI/&E5qH[5nU-;%3"P9rtOJ!Yu[**g0qR:ps#U%WI(lJMiC'n/S2#mU-TOa/J&L5i]<35=UC9hfI\&ORUSW&[S\=!@01rd+P+I8atn"O<!9N)#b)AZj+7o&7?H:m1cF<-IE"J7=$R-Y%]))3Y&XTZn0JU"1JO(b<lQ9M]a(XGlUhV8G0/LJ(X%F6Z[A3BEHs4Er:mu,q."Eio6q\8N+K+AZTtVo]U<#qL[#ND9(rhQ".H!=M%>Rb!?Q]BeBi%%CCU-9WhT9:,)i3@DXeKg)H4+sj4[5&kA.iiCl5n^S^;R"!G`0,cI/:2Nf=:SZ`kS%NI1-n=;Sr4"Cjgk`>Z)9Zn%!M6\?U\%Q<bhfgP-@2[\FG%K0%okoViJ(jh!FARR99Cp6l%[D`Ntc#2Brc.mIQ+i&$p;-co>6kVi@)gag$PR9%QM1.&e[62KPW2\%"u3mmrSmh6jXA+s[&!7ZcW$R*XKWSUcj;;;-i+$*]GWP(m2Z4BUTY\In)-SKFi:4ARf3SugDtE6,T'XVT.'QI/>Mo:"4K,B9Oc<g%*UDCf\/J=0!YK+X8(7Z(G,C5QVL-O)4,1ilCcT>/StT^]TmBUN,.eaN`E9kPeu0`,=f2a-!E$0/eWt2s[:%G.oPhntY2TQsUM3=E%r1R^Q3c-sPodTFUaU1LE@d:q1@$hVbG"SW^7!=;&!7OPQiZ=N9%irgeF^kNi(o^U.%=$ZV=4<H@dhcl=7+;'WlfW:gl%+1aF?2KA%LoE2@/H"!624]:7(VNC:*[,jj0>*-49Sj<?.HVbi7*,@L'"U)n+<UkY0ZAWbZ9NWKOW&hcD,#Cc_:0=U:r9<-:)Mk["rKG/.knE5%*&0#\h'n_Z?SE$Jc\Bl,n&6GHZN,egZ0.t8lha!XHR0gOS3,s_MP$h0o'%Sg7U2VcLU<+(%=M_B,Sa#OPE(bn`<Hr7iSktV]6#PW%epolq-*@t%b(1d+E'o[L\j1e0=fg4s3/W\@q>\+@bDmmXQ=]psq?OD]i!H0@1m2]ueLi!!l5hf]JH#Q%(mDDG,MZ(ZNYGW]5c&M?%hS.80>`ZGX%#RMq6Dph)O@dK&CFdD<Kd+Mmq]6mVgr\&Ub5gU`3g5LK^0ZZ"V;?4P*7ktP.5\;:o1=+1YJB&XK43o8VboTHBn=LI%7ADf]f(TgtS'X[s"Gl<!p:N$9\Wrh2mWMNg&k_38:uF>sc"RP=Og[Un2.7QGAe>_e#]qoG4mX9#_VCQs9?AWBEH:FI(]9:F&.dBY%]\:-^qr?HB3s(i%.&uOd`Vo0f#dNW_?QPoT9*TiVDF`,p%nlCMhBVUKhu2onJ+rt*#ptj"4+YC<A#]JLF'<N?LChB1fh!oK+D:Bd%5_@e;:gjI*pa+P>\VCK9!p$,'>EinB>tHZ*!(\s#&Go*-#Bm@_;5VF+cfW9p@1bYVEM"#HF!NBfg0YfWp?nN5T(Ubdp(V2pPJm1J%(fdN9dnJ`D%U*0qp9IKn>mpFL#lf*[#8NVEk#.o!ismp.OMib(c*5:$_5KH`%t%q*pZ!akjA;kT+nPjuS)?OOep=V!R?XKEgNS[G%=RD3PWrN1gG)?m_>rM5nYmAL;bY-3d&P]lgchuF`,]=PD&.`t\19@j.'AiX)B=I8fN+C]2#c@oK53F7h:&SP\Y2lQJ3Yd2V:%Fd^%5M@;e%b\aWZg]%)!J/J=El@WME<X*2=8OEH.R,6XGPiHnZe%Pf.nnC;:'u)jQLCdZ>C_ipY\;AeXN6Ht2:F#a#?J,`!<XBI`Z.rZ%.O/mV=]l@^BZl3Q]1D&`REsINW7*Hs*j1!@^2!Y\K)iphR"%u5n=P%4!3Xqf!K,#\l"P##F^mRHZPW&m(u<OWF8XJ?gUC@<b*cCn%coDcrrL/]YVW%Y.?-nY)]l2$&>.!M**k;Z!X`46bi-7\+D?#2?aViV&[8dJ1Ce`Y2W;YcP+clS/P%P)_.Q`6(mB85lLK[?#^chY>%Oib3RPP*ttacJ]%)d1l@@&_IS"YSAe@)'Ds^lO*gUgkopTsAu5!]US.Q@SjAegR1CnUd#21JgB=\^#1KIed\VP\-tZ'*bc3CWnlo%&l=)1DEsFKb;5>phAB4>bCl_HW]^*[[?(=8;G#RQCDO";(G,')YnYA;N5WHFA0L=.T,V.AQUfjaHegaWS/.hro<rWfq5_=>C@jjL%5f\.^+rIJ(lmGWgqPte;38BpWqFFBV&&ur1`uM(E04r,qJ.a^$cGpdORSP:(nWt4_V=\E`a>0iE8.1`.miGQ5&+hF#C:Om[oQlG&%UsClJ0\Du%U?ZpS><q(qPEfO-!^tZn45#(1mIc&,o<&3t$_"iM)AY<i_*t'&Sb%-]NMroh`(OUt<C"cZR:s<(EWd\JK3sVs-fb/B%Zd\m.c!L?Yc6N6#F#*Ptf:Dg8]nY(M_sWuZHH>F?1ERDX]oo2sb]+I[*;#MeIJ^K2Z/#H:$l,j.;DT3$ed_t`3r(Wi.&.u0D]NkD%`k,&c/$spe2YiNG6Vu:p^+YhK6i6tB"(NZg*/lT9Nn[5tpW-W-:R*$0920mZO-lZfrOoc1UdoNk9(/0)%[i,7kdQdD7pGPMbO!rL%R',g@H:5!jC0%OSJ^>XR(!6Y!,cK_OVAI=[c0]H!oN(CSL?LG;G0,sSnf@U:"_B.<>[>:S4b)C+>O%YUZ"9]PPY(Lh)*.%[&HJ:+%]Wo!;iatNiHL@Xo>3h@H+9PF]lCqV-g.u\(3e87i%D:#"!KGmPpog;8[5rBi!Ua^6;SnW$mN\A5l[555&_m`b3!+(G_3L[P"P3dq%YB(h,-5gKsV<nV4><TXr:>#%Ag]$t^90NN+_m?D1:>9eok_"J-7$MCB_(o[/f^st&S"=Ie2u1("g02l53e2tg5`Tf^J`]63lS2^6%55ijm3[eD>d"g4F$Lp$S?<\/OqeUn5ca1/,mrnXeJd1"s]&L0R8*aT%la8u=\F8m2?G4eQTrI9`BK@bmPg?f4B-[0JHcUpFM.3?k%OXg)/B;6Z4eGoM@f,`\*WT/C,ZJ:%FAA>>,]mG9d<$E<!Ti5Q_HN\#$--nuilcd[F3Ae#P&Bu_EH@Pr?j^!*0^6h&7'O<#4*J?e3%o5>lPE.Lb=g@osc>D<!?3:OcDYO7%+#3;3MIJ>@3,:gCpR\)]%]PA\L.L^LQl/9/6J3'!p3?Y"O:GAjW,l<&LPke2@mM1?U0JIY"%$CT*UhICm&FH?kQep2(g-o$na=].["`eecL:Jah-:n'U"`5Hi@WfjqQ2QIj.W-%,!#?Gk>5mPOrO/acnUP7s,aKU+X(6-+F5)@,7%3H)6EUatBAdrP?!W^tKsc-kRCPcHp2Hl'[A-r?V!-@P_:U=c6B:n<Mf'o,?.-,nm#fOPlTOtNkg^D5Ui"l#ajZ.SabqGB-/l^kuR%@2,L_'gJm`I^11'!r%-\SKCMQ[+L,X5VD',PODE\.8--nPHT&b)0$`Yf-OC=g1,f\3U%GYasH_5K*hudWf<ftZAtamq8U=$]*Wru%qWf4h^K=W7EXH@U%X9i!W;&(P&KE`,g\'3ZqW3@!JVD`aVr@saK6gO<B,g*/m]iU0co=t0[f-.]1E*OB,7MO]2K(5:39h.HX^,o0%5nj3_<r,A[R6qO@*e8V^(1=7"H)@u6#8&oBds8eP\9cp8%WabJlpJlemu>'sI.@E>E0>A!8d.?DPlTh9:`B3?dMR4U!%SIm%RE`#%mGrYa>>,KI7cji=6;M@9,tHXF3mr(/,hmo^ZPdJA=`0_l1KGgL]>j%"l')$Sh!Z>=^TTgokIB9&B/9?)1?l=94MMK\DdcW_2:u%'%H`q4[\6HV<PD[W\0EiHe4Z\06`K)n44-$^?T"rM/9/A(]bl6NSimUK"^G\*ifKF"FG*p>+L*Q[B<(8+D#sGEP3f:t!]L+.%1'!,[%MT1BKF=#QbO<;M$L-jQ>r6k(EZ0fc-9p09B%1_Sc^YMuKm_P].kM3b)3D8Pf0WU<`IqK6$2,f.4QtXE?ViD*RgN.h%b9*B;;-5k-%LsB?KHeXO$JofBPFrLJGKrT0D]hFugKA009UoggC#]F(tP<rJ+;sUW\L-gplre)@UdBXH0W*Df`$!q,0GPRdF/78d9V*7+.p:UK/%7DaTV2bl&)74L4=nRufP]bP"nI6%co/Fo`[LA@oqNVTU[!'^9XLPd%!h](U0=[&FjH,sR358i<dD2/ZJGR;!9:RiDcZ2O:Sgg6;;%-T-5.+nb@%_AY:L\157s%,qIS+*NP=W:EhSNr6Q`4*c#F99-q3PYtj!E#s@.W93Dnq67!i_<t=eRY&NK;9IJLHj8Mb7t;SAg:%K6%Pe<O<B*oIO*-8<7\^Co0'Lk"KIef.3N'Fal3JF]2D!7?g+'.<f_s`<5NpG/s>k/)8!HT%&aad5]i$[UuSbt()kEXd=o<boQfV)TW%XkMo(+4364Z+n`4!hRqabJoG54+29De%OY*+89aNi6g)u@>sedMp1WET7O/[baU2W-+4uM1q#,Ei>U7&r,)2'gV8*)k9I]#+.:.'%3&XYnH3dZmA%W*/V5@&<Gp!k(i+<YX);?/cFXFdh.5@c+6E[B?0?i'?eK=EGT=S%4irR<Z^A_u6n(hkTcUcImF$?f:QIJpC=`,`%%BOM@0;)gSS.b.9PNN-[k(:"7'//!g$m,t\oXc0T0=a'<GV#0)3VfqG#q!2p"#[5qrC/rFK2>7r4,JXcGbC8'f*8qa[.&CD0-,!u]%n(/I6)"''Xe3!^o3TJhHK#^o1e81CNj3bp?c._s&Nj?Hdc>g;FAMa&KBn1\M]PB#ZlB0)u7KC[>ZW"Tf(cfRE`7I&AJo!/OE:0's%%ZHO;j4\ujK@^LM]?NOeO&lDaR@u/,ZpQ0Y5C8ttdeQ(GG4q$890V1h6DSnJ/=eS&^,()_UFmI[n3ZOTgVj%SdDE6$C2+u\6em6t%"X(d@BHOR1+PMmeI]f4?]f]7Z."+<Rc1hC]guk)@d[d2<BZASDjOmpNO4G&C+_PSVSCCp.jhhMp]^0s1pF.chf(8#R515>ZQo0U:%G8k&'2C;3`j'>8%%mI/ZPF`2kC@@QZpe'InRdKhS7s(p.pU=@Ip>'TMUL#]Egd<r^dP9]#`i%Q^.J'NOe/.J.&o--o.<<MLV8jE<%[DHBCgu,N87(`mO2;.NkgnM;e2O`mBZ"`a^`dKM1`fjWgX6h)ek5OFfa^6IG"U/chOcm"7@Oq7QI\0eN?L6USIrb6--i/,T?mX^>%3L23uQuT21m,egrMs]U')RDpIk-:u&UtZq<$kN,*/q7ar&3jmhp2;BfSXD7W(:mFoRJRbiJ[K0]C]DogI:%=B/=b3Rn%,+2g+<cH%RBl2<9c,t_\@*H)pPuBo=="LPA+?JVNmk/&9!::&M'pC?T@^5Rm;Rg"bITSf_0j]#[pou$$f>>nBikNjJjl\5-FHA[rt/$56p:&G%=9J@!e2tnJ!f.Jf0[",TS=tPFfl4g+PUIh7B=l6ji?a589?LEF6Fj8P2(l5m;Ui9Y&A"[pA[4uuWRl'3o#G%N_h>HYdesD;khV2[%DZ5u&Cn/dGCm*IbZr&j'erKG,#s4g<_$2d=6k6bYU>EpF3UDSdnmGNobRLb&2A8@$ni10GZ8.AG*2e4mT2.Q5D[Cob+0.OL)Lj7.%`K<?-PVZP#MSS7d/g=q-=5PCG&dFA96SD2BgrMY`F1?ER!4[I-JJt'K0i.4rC'+KT[@`^JTe^i<e$[(c6GRZT>1fD_:l?G%ZEhGg%DW?l1B:FM`-2Hur2.#JW>>4n=&;!_@B+STLTOZDFhg:V9H72TML>^3d]oerpRMD*TrN2Vd`P9S-E$kg<;UilN`e-oGP0beUKe"MC%')Sa.XABdo;XXBSD=`er>tR\JB?dht7o010][[KV8_)@e#f6*(^5&qJdNM-)RBVR9BC++RTq4p+G+A*`0cj%ELEO(>VhpW?cIY)-%T%V1Q1L!>9(pB:D@io/6';s@WAP_<?R^'<\Y@M82POa!H6-LJZ+NLW#\8uU9!b<>;pngFFq>M,<E\E%-?Dc-7%#hDQ+=OQ@8"(rZ%LV<-Kngre`p7^rKkP]a("CI]/+&7r:CQC]eLQ%84/>?lHFXu^$,=CUFUR1S'2@[=#J=s\)#)!/eYWRH:c%--)E38qNns/QA?sma\%::P.K+=*!K-&[E2Ts;8]7gcTLJ+d.k/88o6nlPt:"%5*iBOX'<5WQ_c-F.P9]4%UMg/\GEm)o&YXV+0G./rf%Yl+?-o#1S"FOi,A%$,jnA.a3YZG^35e]3k5:[oW\)`P7ol/6PaMp`lEM,a?5qr]SgUfgMo$3HS2mW-=`0i!BS%kl)j$ZjOU.h<V,c'Dld#kc=YJ3%D/C%aK3aDQ$jTioJj:,b?j5@4lSHOX_2mtSujAHS>XsLNp0/QJ@KK6+?A:I]RKuc8M;Ybbq&>D0\KOUJ@60BdWf^#h2--`hH($b*43hI%gAmDZqN1M_Knq"fV$Gap40E[^`b.?RS=bpcU/fL8Hn^Y:3PaJ1KcENF^b+;<GBmh@i3'>M2ho!X$i7^oOXo>2,cu%_4]RSQ_.[,[%pKjhc9G8ZZnXD&;R_/60_'u^1_fQ`$"s"*&Japf#9o7W%D-a/uK#O'$F=QCb$W)(7Ae8&g;]8(#OJYI^.7'<;Y=&S]+)>QuEmX3&%Y-G.,\-7X6Zp67]WNZ<CK)KTOj^(^Rq@C1elq\S"`>s1BA#r2k^""5P+PaUDYdo@4G8YHa571^cZ.:4Vbk3NGWQ`^5gCo7-$(U''%J37.R:JOXTN^%fR9u7EM0b6\U]c:B'eYK/Sg1nX&0mR#*lJ0n2*u6.tetbu)Kt49.ZZR96@rXu$":$9=`994OY6nX`OVDM2`&3WI%8=)!Grq/eb*bD5a:oN*MKG'<a<M3\L]KOW?ab,#6>.A5I(0sM/?]42RHNZ`A5AA!#?7*sbpfc0qS&d.D6Yj\tib\<G.>T5e_$8Rf%$s^*&pf+-$SPcp%c@"&8q!:Y(_Q,hFOk$X0?/OsC?.,IP,Q4rcS!8=Wicp-2C[TdjRjn_Q:$NHH_qZo`pu13j-*`K92(\enm]n:L%9Ek!ant*spdoWud38`9PP<C5pRQp:t*'h80hIZq'0ucs8JdA<EXDsL(/<qru/j&I1B2VbeLgAuVA?e-uLH9IQnu20I$ELH/c6]Wk%D$m5]195880't&(LODDJr1k8H^X:Cu1YG,,*35kUF[O^EHIb-p(dut0f5q#@X5tYWGO<.[)km2OjB300^H\b9lqEXnKL:>e^*s$F%2sNutg(GKEoCM2^3V<=%DK,RJ!;Sq$e3?9\!)T$9HP6(69goSsaI^OglIkarPb6_E^4I[J3H<I?bAg3rIQlS_+DJ>kVI[$ADVF&>%;Jd=Gl/WJJ4"1P/b`]g_[>4Vt`X:4h*4nsds!"r!OH#*tRK?o\dk#Q*9RN>8@]#/&>@JG[NcKD@\PdhsU>hET%^J.IIWTV?8^m29%Es#%/-dm,2O.Ju('4jIb1j;s)Xp6j`A560^d#@(Kj<]rRa=5r*!1Y/MhYdRtQDGXU/'u5"'9WQKG)''s)a%Y(<7C<*6XnX:>R1AT%gnteP+^=iCX67*&_l.l6+"$rA/]E2Hd?^_;jc?4&BmTV=3qm:Hns;AZII2?>.aP#sr1Hfp23SB!"m[UeRDBVD+AZBCAE9TMgq7&A%eJJ9XjtqR7R)<s!+1@_n,qM[L&1W4>H5OJ]49W&9j8H]-GG\Cpb@tg^ZrT8\ce@e5ZX,%-24@PA/SojI#E0:q*?t>c]7l/b]4G=c%kF'gn+Wu+',,l@/lcId$BbZ0jHp=_g3"f+c2X.c=a_C0ZfT7Y34C3OU5Bg#H+uN[^b(=jHP_8E4+7T.j)98,bAU4Z5D-EdgM8OWR%hsWX8Ji;)44[?mr,W!p"U,ifXW*0St=2lVg-sCTYeDMh@%V=UbC(g7Yd4`$`.`t4GD_G!OMROEU*NbJVM1u8o@6?<$=n#.7cSFfX%<ZP%%hce\hQqhh//ukE1gi1,O[rOOQkHcEE44's41\KA&;aYrc"GOuYiU)+7.\>8T%j^R*&2k",LO=`QXX/=U^TZ:(.C%,q?=\&B%22t&*mntM7**O<Ej*[lTpt>Oo=6#+'pkrT(dWh;ZI8;_qm2$`0XPE/#0cG()k>S#-p9GVCC6"QrJ^FU\lfUkN2WgH750s.7k73$I%I;)&F21[$ZY\QmZJ![7(#@48)!GHpQFB=LHK24AMp]-i[k=.?"#3fb]b*L``YX2LOghWdC>5;t?Ian.A7a&7uj8ST=4^PL%ggH<,%ruUbaZFnEU-=&;"KUa#3h#cgpd@a?k0@hE^%p@H70'R-*-O2hL^V&;D>Rk*+\=gcb^0S4?HXA$KJI[L!mA6uAHAZQ2dAaBhXO9`Q%.+Y6g8t+Ygrh2-*4##-#QncsW[4`W3B]A79QS^^$4Li](XFRa%>9P5_!mb:Rn.)geN4kgh68b6ln4g&0q@V=;m^:]qV>FK4^a3":%6d=Fp=o7?n^Q%F%P4CsZ6\eN@Q[`Cr3\TV)pk*BD&77-0QR&t<^6>GUQgXl0E&l-<UfmkpEWE8Umb)-.K3V5Y\+'mBZ%D,O!"n\Z%4H2#1c(ZDJ@o[62j:Z,La9!'dojn?m>-DKL`mSg?XKP^e-S%/X`t-7nF\l?>B+G10p2)?oOib.KgS2kilAnBf\d'<K[=C@E[XN+U%/RYa)SBk(_alD4``h/r^;tb'JM-%SQHJb6g/Lh-3=1"j$;>/cBp55dsNCV)KO^$`?6KVD+E_8H;InQ1\Z@TLL##DP26M$Dm*p(@r%g>pYkUQM+ih*)<E3Q1["]Zh-iLTNc7A:nI2.r>8-Sf?oQm8<%"*Yu(H)=m6q``3kXrgL$;hZa60_B,Xcm6iD>Y;X6)-W:rQiCtgK%D;T5t=TWKuCQ$Krhcre?0$+t_I,lJ2A%RP`oU4"S[gsH-`f@7S1W7hcT2&f-nDfTXd5]STIp_\QD3JXdVIn!j&h<Qojq!Q<:]*Uq%B_rZD303,l6U#:KlBp<jUB$JL0>/E#[#s7/Ra2SVbe5LZ:hQ*CX.kDTJaOP:nSG)bm@/:i.0C'RJ02f0],)^e_>`%7.)':dqtj6u%]([PAR;mQtA8<BLltun4:fbJjChGrRf\4)0N]M<,S-605-Hd[83k+i.RcFqgqZHO7[7pDrB>_M>gQQFka/1LZT6%sHi%/#.\jq^m%5!LsRlLscD^DA$L?LI>"jX]5LnEoG(LZ8o[=@=<M*b*dVZY]Y!P3Wo]()K^97aZn^#i#booU6^]8s*rMa8iT*;H.Qd.@kItRC2Qq%rs\_bo@PdXC^bl<625@q[jomHD85U5OS$ZDIs3%Wk\g;Ub-:WX">@nMX;1a_iCD"Ls(&9I:*2pcE[<n]&(%)TkHk&[Q=skmT=c6F%T-!U3c#hlhL7U%p(uDW>GSp5MjZQrRl1!Vd0gEd;"LN3oUi2(T5t@ak>?oDdkb7o"d9Lmk!nET3)/qf"bhP-$CF-2K9N#n_4DJBC%ik;ra)<M?E5&,DEAV\D+F$DqGL%?&Pg@]]I)eA+$)+AAL4#;+l"0C\G-DmR4&3(GOOADsm5(@^A#jO$^?YX^1a%GNdXYDqPAD^X'%C[6I"TXWZXJ;L\>]*``%p:H1\A5U!1?E`NfhX=])Z'))Q/NrU/HJ+p67P;LadIBAll8d<>n,.*<*urBo**1d921U,C2blcL_qc]C%Pp^[G8a(T2rRq#E!DkYI1HGLZ[MY^'ab#]i@?[K)%U?2[-s3#;jXB;<<hZO>oOC&PVN'Nnm63BhD;u@3(-TG2BBsk]6<aUe2+.\c%X)O$RRn8*]O5O$J3VS)mAD,Lm5\JA?^g@.%G4-7h*"@WtbKfC_A%b(?9\%0Th4u1n?V!HM9=71td/.6fV%T6r=um[1Acp_"C1uD4%ooNG(D,eH1#6[5:^.Zk?\DtGaR%Z=kd$!$E=F--9F]6b;@fA5ZGA[(OO_XCX`IF&g7pkMPT,etkAm\'A-VfdhFCUMcjBQj7W*6d=%-g,BT[r!k%)Q]EL4"qGjE[m3_GHVHQ@elc5&!Ag.%<n3KnrkH=FZg]I8"44&fA!i6d!@q/+6M\.<eV=\\H00;++&/(LCAkW:n*;P%O?G$O=VqI<iE4JGFEX5a-4^p3^eA;>:Vb7BB5_3GaoL57f<uabi7aq^TB$b9EU&O9EnanX3#H;V+6,Z;0Fn\$ol,Ood#Y;L?uc,O%GnmHc@/7nUr:9[)4<2E[\Zq4%9_Cpi4ON'S4Q%TOk1JpN/0QYkHU/6V$>G46NK;#jRg3nkIIMYU6kE8f'0r]:R\+e2DI,bXcDRs$%.e8qPTD-rU?oe6HkbO!EO<qXd%r,bq&q$RO=iB2I0N$!K7=5HK558]^Ei-cr*m"O@&''A+:P#HtqjldaeRf1W]su6\P:.rHL1<$/%$s.f_8E?_tMCVVB/I6s8.F0o'SIOb?1?,Ii$="9N]V$lJN"fH-@R8YcY6Too$s;lum13OjfNlbe]*hCS[WXk%i^I7^"CAc*>nV:?%c.?Ll;/lEJj"G,G\+7h6c0EBF6ZR,V7\G0-P\iPgPX0?X;Oj:Z+8PoY+t*YBleI`p.u6>bke!`NjFc&_`Y]6^\Xgss!67P>!hnTR%md<0FekP2E_&oC<>'2>_Y&Q+@TZ1]UJo3]-*4gXc<B"VUGJIg8J9Ja6J?UW4%:oft/XqRa9O<10NSih\M!iU]0+Y\n`s28AJ5t*F%'Fi!l*-j#q/$$@&VsR(sL'1r4_=qV:ZT%m?OA21<pK=+X]&SX1B`m`SAm/joCqK0m1,3&<3T3A&N<U+lCZc2GL84l"g43"sk0"dm%6hX]^1auA>8l!g_rdZd2HEMn25nDIJ9Ob&(\VhT%iWe(ln`@!M3a[&?I%tg02+!?]^(7G1[$F+-\&77d+-Ah3I;qBOq=%YNQDWAM%aN=/kdCON5J\*<sonDmY<k"`k'ZE'VoWmOJXIG&n&pW9A)BMN>kBe4TWT*WBL\0$THs-%/=GWf>k*rRNP4CS9<;LLe's;.S%Z6ko%/1T0rRkn'cWR%hhNh$s"^#5/_3KEcIVI'[e/2Lo'&CL(T534sR,cNKM;#>'a$W"*B_XNt<@0@2#J!k+Vp4/#!3jsVccCBa#?aa?B%B.GVV9e(KVoJoU9[0Wj9W4i3FcV6C0?^e=?$ZGPDMTq5B48!6P"Z&$R59BA[XJG_h"LtZ*JD+k[_'KXNF_u9-04p35-O/V]gX\Hn%/N$"5Jg04NKCH9mB`EY_E/5<qr(N4Aam;;s&?ahl5Xp6)'&hsc!(YMiL2F$:mNb,5VGI%B$aE9Q`n#Xboe8^!/0o'q7R^_(j;Hb@%Me)]o*AJE8b;=DREfB>>I=PB#7#dq3hpTNR(IhKB0d.%bE7G-'Lq5)?g7%#X&sU$'_6=cm3e[*Q6Z$s)111"6TD^N"+"'p"Mgnn^%qAM'sc=,>\n)KB`4qP>O4Y<*UZc7%QU>;*C;0-/%]qbo28gF;UVT=AGa/js6D,`85Ibsk'nA`]D'pKeEf_;l"64l];_le6\l%!IO%aD:pcD3.uOWjS+O5/k0,SlLk;h9Yq>&-</%m7]gm3m:eFf4J7F[oV.2X:J4W;"a@XaIFiRE/Y<,Udb485;7;*%9D:]D:bq=0Naq-%>sBh39nr>rC?@@F7k"[aSL,5bLI9qoIU54`@@#&#3(*`]93fg!j9]4WnD%u?QW78&oJJbu=)@->>"X;K2l8GYKspljY@CZ%<jUA"%-?+q5iK@\_"9.TuAiAIH)9!lFO"g!r-?@h19kJj(Y!rh>LHqnbMofFo)#Ms&@1,ltMR^U"re^"g4h9-UW8K_8eUEG:8=--udoYGA%/_NU040*lh)REOM3bDKB`Bj]B%dMhrH+04a.I.;BGJqgKb;pA%+Q5qn#c-.QeqeXTo*R24[nNJ.:oj!W/j6A!AH5c&78Pp$9Bj[D%_fVep<oTXr]3317(MH@_oVYN*Tu1?Pi0&o:X&UXX=9ZBG1EZODnU.sk,!h%9Q]dZ`"T:2UjcL\XSP`=s<jYl#5iAnhpF"0X>O!$j%BIh)YhHgI780L"D.dTqH9T;JKen]+>;*T7@4Q!<t"=YlRj4o.37\`Z^EqFakQA;l#e9W/Uk;u\MOt%r4TFI?Z#\DO,*,`f^LJ3=W%)"6r:qUS/kLY,oN8Ra&;S0'c7()s+;`sSn4>pTtYdd9>`\)Z9$?D?h3)6/hF[f]RG)Etk4cKO02_Dfr/Sm(W(o;Toi>l$V7Z8"&f%WXkG*"#aE8fL,nG[Hl>W"WAKR@?Sl%n05s$qlZ..DE5c'fk!0FnqU$&2$H5_MkleUO7_soN3,UuZ#4`cAUEa'^X6k@*nbhf7!39L%jrW!"iNFAJKLKS?o1R@dl.(17N&D-<qC_b@[HQ@E>0,1FL\W33Q+k8leM"Le03I5OLHhlB$_B6k%k5`M2C"JB/m#']kaS@LPt#dE%fIFU6.MK2L,eWcnacMBtd#'`BU[)F)S%oP5SL#tnc!Ra.0B[Yl(MOV5=gc5\_fei8^72$j,20IXCS.d4bL2#:#'=$ChiTH/:D+aW%,]$Yf@Y`2P1\3aSHtQ0%J!.G#EZ>D]3HAb;YO5R\"34cLCd=uUa3]f%0[,r1*FYPq=N!![9HM^g%f3!g&B(pcTlp??B*Nt*FgVG[%H$c:?)Vs*GU)RGh29bG1m$iNAnkL<82,BMM]0bCd3HTX1#N*bV$\`SCHdNU8&t[$i@cPqa:X`O+)lerjhq-GcJkbc!n3;/g=-CI@%g'\q'j%5<^IQcLQdt[h^a2Z$U103-9Z?rtD:'mJ,]tfrQ]2jIN%(OEVh0>JMTP^0%OA/*EptbilU8L6G_<F,cYB$_"G2h`+ep](&%&#4J`pUX_;=f6"11XIS;PC;0:P<7tq&F1\gn=u(WT+s!W[II\<^O<Di'AOf!p?isl^?*Q8?4TN+NbueF<p#]F3r;;%To2Oc?m\KV%&BhdgEUn<2=U<NbCDU34dEjDsC?KA[RBQIUYL]:ZMuje$X1fh$l.qfN?[9f>SA+;8P?agrb>6ZQo5m4?*ibJDdO4)L_qU`rs'Pft%&srE`>dYu\8J1FIG<i&"qbN"[X^+`BTtQ'^jb6<YDbr!8ao;(7?/roHk9%:E&RoZ[(nXKZiDqm[UWPq0Es?+2WB6@2+[EorI?d+d%EC?MML)$X\](,B>3^tB%jP+4^P-;(_;6PAZ[jSh'S@3OO[,ZBRS_%<K6Z/.[.<O>mpA12kR\oucn>$E[cC^_gchB7sDC=rQKE'].%,40D*4_VM:I+^YunF'U2oYB3Td>/)iU(A\KjZXi;<kiK-%KfN;bp[%Ka\aj_K47M!?SW82i_0offqoJGALcW7Ms>,aT4Q=4^4O7/%\t(jRP\8qT<-tdEe;3fsGK7RF2!YOJXUl\bEuhG:]9=lmIbm")iOYg'VaJV((jl(Sgf%7Xf*D,idV$A,eJ+1$m1b/"LOl74?GJ#d%LsWH?^#7NChQ%m"Ic=A!"rBjZ5+@0h^9]R;<:55FEUrWCWghG6KGGt$4a^GPJ2[nAOlQ@M^#!Z7+0X2,6uD\)bKF=J#E1Z55q?Y;%^YL!e=XaATH+;%p>/I%H8U(Z-(qnQ[p[ER#R"'P\'*#\ZqEGmjDkLNgpZR5?jHp,\QPji'&Cf;iO>a#cIAle)F;Zl/%/%Y:-rb"n%/A];RVU0fNC6fOgM>`I-Uh&?7]RE9uj?@q3kL=rtCZe?0DI(;-$Gq]:GFJ!sRL_%7W+'6tX[=8j#+@ki&.+1RP5tcY6X2u?hiY;4%U#]h"%#OW/fT?YuXo(lYj9WU2<iaY.pHBIbmg3Vn_fbm\'.ccmZSq"LcWBMjON=f,GYGTMF?(Wb2,R-C\1@<X9?cI"oF:%2//p"U%a<C-,Psh':2Q]kPl-a=CZ4=XDdNSR:knS3,SK(N]l`V:hdd[!)D3&YKM",loQ+EqKK+9!KfX^^HK];EJ?9)BP$j_%nA-]mIe<Nue%.0ROBY-I8:mQcHZmT&qdFAU7>i*TFEWYZXfNeZ*P6S+0ja-H+M62T.$][+re,IMTsI5^TpridX;I@gao9h4l?7pnsTPF2M?%L!a=%e!,RH%'ul%P;W3k:EfaXE4YnZ5I4@B$;0O#qiJ@n-"I&_*jY%0OAkMG,l\!nK3P:U-PScGAGl8P-Zej^cX,YhT6C7^!<!I#!qOoS%iSNW%*?rcY"OY4c89\?<Xct:\T0$U>DRZ*ALX#iNYQHTCJ,H,;r%^]2EL`I'2orC#jN8Tf:B:gFQ[)NVi0PbEAhSqU4'WAFJVN)s%lT,^c[N!+"ebZfaL\FjVdO@F%k<jbR@FOY?EC>FSR4%Etee4Uch?cG&^*8!p15.-PNc.Q/@(P+:?e,>.LI(e2da.sW`ql/c:e=2s%;HoqD>P@qi(Jphq&1(='0"<<(ETWS^_%?P7P>FLpXN^A=i]QEiRnj&H5iRaEN63*.M60<3JT47T58AXX%jl%t2RM;89Z*?,-+S]*%OfIjF-I4.,">jqV!e?IrY07CalTu89ZrQU]I'/Ug^LUe8rHk$ri-l!\(I!XC2"sF5[!#G*S6ugUma-$#-/XU*aYH?l#dB4RiPdk!%P>=mHP?c-<?ViO+[t:H&]-:=kkl'I+@+XE)JK4ui'RmGej`s5AirCoRcn$3WOGKUn6$?Z,-F46`?dP[JHVQC]7@QM+S*]T4*p7A6%meICC*@V'#]_;A/8.or'>Mp&)f'UHSUfut%G!$FMht6NR&-WsZ@sX)U]%FiP7H/#4e`>j,G9Dh-`C8M(T!/8[%iTjbmV^L9*[=@0%`aJ)J&ZMUh6T^hjr']EFFIG1)0NFUN0\+@h[D:(==$5m@]jJhHWK]eahO@@Hh-B'"E%qN!Y&WjlKl[_k]-KS6LR.fB;n$ZNPC-V_%YpNOo)ZdG*S&DCK[0ApD#!bAdRc<q7nZ:'NJ($gF)q$8[&:N>F2`mmp*#0g$P+$RC)tZ,SQ(2N'h])-!&Zd)qhkoep-)RFC)?\.9%eFd>4`lR=HZjS*c@WdC7RkA<M`h(#6kkjGAD)9XNS87o)n8$8uI<R"qA=W#MlcQ9Ni)04mZ'QGo,`aQ(fqhi)[H(?\F\][YQLn=I%Lp^[-VgZ<05HN]HmjU(sL]BcGpC5JTfT_SIm*dSp4SDdIq=]!E,f.VG+5p/@n6KW%3P&`]SX9iE[[9&Jm1ccNOVQfpq'PJ2r])j#%mWFDd;TF#L&GGg?X!Xm!Y,?_TR;UrM^7UNW>CQ!"ne4.m?C*m8/=K$Ae>BM=O"#"(-#/EuLqJkB%+6e9J=lk;=U-V77K`k+K8sh8%p:UJ><]Wch3CS'5]O"k4J,FD/W:C:6o&/=c\1/?C4ic5MKu4q]]mC7%.m_H2L^13@KF-WIooYG@rUn('I.-99f5]\aIkg_tp$hC)%Iq!HmS*i8m!Ct1o-bjjY=8+j33+_7Mh]Q57%p6efZ#G`j5,%Cg/mP>7>huoqF75n#hTW,&*`7Qgi)Bf"H+T:lP`re6Zho^q\j+P^%$JT*U=L9HO6Nt]%Q_A(lX(nPldepLEn=2$\;3DbL`c!L*P@^NK53%O0Qq-20+$(/+:#AMO2-,[?^VJ\c+XD@Q-L5ckTclSD:(=TF%mnl4k2%[A*!*3e^#s_/GYnC*pT;%?<CiN#eI37jt>b48aKY->+:q.DZA#[Wj%Nt@efQf4,=G%b]i/cf^Q4$3I#F]C)@M6+?>SoW0%VRoEJrdI)nUXV1Bp*>!kTOB9u'uVA/+h745CP(H6MOg*+;(Xrh*I<@_m<7'L?\IEhP5oL;78Fs5I`8*?RmN&7,/-]9!#0\(@Actf%5JX%K?CQ)L.A)7ts8>kBa)BQKOBQWdc$\@-0!;3T]e9:Ep*FoY*n^f/pU.cY])GjH@l%-_l4n[S0#"'kpp0gS:OM^p!b:h*EWmp:%X#"(s1b&Ud#jOI#r1q&d*!IH.3d!^amY9f6ZmR[_b"EF0/)"%LAo/:C/6NPbl0iOW/RXd.rQk46ih-asb-Y^*C-pm"c#WO+bgL0#%kF3.Y\i81/d#5UtEfQN;-0Q;pkni2\#aQ7,Y[:EMmq791]2Kb/NBn-5,r'D3o(dWkC5e8DrS0r./+R)^#Y"JP5<23IGHBVMorS2Z%\SRidNNs?CSRu8%29)Lbma&inW<*esA/#8&UhOrM&4!m*?)f`^1eF]M<?+IU*Bs3K'DV&)ORhgu2,HKc[nPYQ@Vbu#K86aIUL+kX%pMRR+5a*5jPMPX4V?$HEEY9I$im/\[3<%2"ifj%(TK%/Vh;R<8THG#<MG#?d$9K$.Le!0&/C2t^W\7r,Qk6(Wkr\\PZ_/RW#J?L1%_rf>#c\KE@Qm;dAe=^%#Oj/,>2WV5qLj5"dJ=03bjsRA&]`n9TNU,I,_;.E(L4]Nd3bXZU4iUo0pDCB=Hn`h>T?::=Wr+Rmdpq\"%I#QFWffET:Zt0bp8N;8uOL&I4*!)#Ocoj->G*],"WDeA/\d=-H<[#c"__'as14'VTM&#%=V_?*KY+*8dGn5gY=5ABj9]?cC,0@65%XGX=Sn*du2E7NqEFr/WoM+J\gYL!<.CJq8nYNl(pNR*F=%L`!k]_m)'^RglZ*rks(oG'^O'DM#\XGX*r/U,c7`W3!g;dhO`;)m&)%\3J#Z1hXPXa@oXGh,L$d@SlM@r8_bqjX9]ILWO"^O+G\['%b8n_jFZ-Ol&AH`^hIEjn@GOWb1+fG<<k'RD\;`F9TlOZmL$]Qa\*E%\C2\S3kUlG!iPICM3VV-#V8*Nc#p#o0Tn.VO7['Y.UsB#hb.DRf1&)B921#rWXL%lL\-:,E3bIcG/5F?3hFBe-_0]&?IV)VD;3+@%JEQp(T.39Erj!+`HJnPp?^m:Kq"6UGkH;Vr38]^N-PYL(G,$Qb\GRY,T;@K#nu:48&Am[Ia3fL])0@.NG7;3AM\QIuo[;*G<J[5`%b*7Wu<MT^PT>U(&hVk-cXNGER4EmZ2U>!V([)H/8klN>LF/AjMU`+_Gi;"O1C"CYE<722aBZ!Z%DBp`\HR$4P$9<&!'m3,HSXFA8%*JGa;Xt:8!0;GCTIB\YUUk9VBaX[^.4kaCV+%$#KOu5qq8?44Ca-0Ob"mEI\Xs\uMC6rcN\?Xk"UlJP619)WTR)Cc"*;^R7+aHM$%9K17/1fDqmQ3^VeB4U3#lD[Ut%$Eh>0s+"$E^oo+'%j4ri/T<C?WZZ/mOE_Z!&;fXSS*C\#$>7&V2*__SAuqeKeXHDYC!#ZSHdjH%?!i7fDRUi`$'WV+<J_rJ!/ts9<OEak4du,5dUJBIaT3I6TB"7_R>EUhL[!Y+jdV,+H9H4jB:igCD%:f"h[m'*N0m59LG<e5@63!4%R#!9\Za@t1WB7lalVCM@h'ZXT?&1q+$<%qQ6"<N64Bll-8OG4=d^tu&XF?0FUjh_*n>rAaGWlLYd7X1ln'K[M+*=&OIHaN;eUZ$`%UF.>i^kCRB.]+OGB<m="!,]8<MJ)!bk9jlVei1M=c#>_d*e-7q[133BfT)J)O-'NaKeU)AEfOl#`8$J`iPJbohJ2mjFfI1YO5>&3%h\eEn9k@Pgi-:t<VKXc;.$5a;m#t;KH#[n)n/9f$#rJr-f6!arqN_XILbF7#p<,IfA1K[([^@qTpk<-<K;rbW9!k9PdqU&npV^!L%77[g\DLB/=`dc]^!>J1KXYDqs_&K#sj=>Tq0pU;`kDk"<+V!.*ld!!Gk&^"L"mH^5UI,L:Hb>2rStE5D;>htBB:+54+4"#RYgB=q%)I1Na;a`E:DlV0PX!*0t7=$i1!P*me*8P*0#cVuG5F)`c\=Kq#;bXgbVkKa7&jGeh'atGOn$D'k9Jg.gRZ7o$K:sDV;^Zb\U^jPM%58-;LgWQUB<TX4u`p@_>:Cp$YZKqZT@Mt^;/h*rO4m(YG%FYcM34N)]3ml.J?/+=IHu-1'7Ijt[.+bl*E2BBA<GV$Y]@4P4FZD/;%>c1jG4?Ad=UPCDJle:7/QIue3W+[)ncp-eDhn'&gZhoeL*+q>sMukN>#0pg"WeRV.eBi%akA\G:=t+;m7=YoG2XQ3^iSOR_@4C<P%5nsOR.?i2;/W<8T'skJgR.U,#Oq,+>#iDgQ%pa2CD*ajp4;9;!H2"A(4R]gp6QDk$H/?E]o_7DEmB#C(4#WFrC,762*2cAY<f\i1%d'5f(O*4:!(-gW`8FI=o/&ok%<gtmXhml>Fk]ATOO.(GR"Z[^-LH_P,k2QLT$E;_Z$5fZI2iJe3PTm9=^NlNcN[Z/Ir-c0nJ'f\c%@KD<:3\KX")HS\un/PBl_;oI#<c1#r"?(S?3MIDcS&5q#>DIkqDbO_''@/(T(e[?nI2Z,**3PSEbBR[L,eM\f-K"/EOd<]%n"&3(%#__GAI83[;Wf,$C<_!X+r,*X%cDUQfBUOb'Y8Y<59b(lV9480mKY38fb"3djDG(K@^hJ!bM=!^^i?UIj-1%p!C)'Gu*:?&K89Xc;%Qc:<r&kiu6n$5iEKVOiMRo0W"1'QMe$9@=\ZWYZ/0P-u4N0b:JFsj#Qb8fkehB-KpGP(>7'&e3`"B,kh?ep;U$G=c+Fl^UTs/L(r%/rVJSs1)_[7)#(mYG_54>oW(SOPMP$;9:!V+7hJi&*RO4+'og:kqh\9r=Fj]1a*H*L&@-`K)8l-PLpjlAP,3YlDim'@t@PDk@X".%k)1McLPAR,8VkNg#+CT0M?Ti"S4R"MAM$e42ra@=28;BOHJk3FSIFY!R"K'^KIW`i<J0$/T]eRdl\;!&'7bo%aVbBLBhB9"7B#m,%Z_sOMG>e!qZ7:rcChG^940Fq9Z_N5ucK8h:<<>]8T;`ud*36N?EjSRIBZSD!a`F1O;F!C]6aLqCYYG_^`goM*H5TW;o@1kITYmqS%Op26GY-\mk1AA/%MV7sI9!NXG81LCiL>O!3(i]Hd4YhX^I;c"gRV3A?WZk.*;[<:CBdIUq_:M$E\XSUGS#(m+S^kH;&VnI9!#`E0%EfM$4`Da(UL40ip9sH\P[T:;b0nQul8<3OCoA4;M_a`HPU65>V2:ALkMkR!\`mi14IVh;N=cl<<>ik&5kY!JXg.7tZ&^motZ(sbl%kV@3-G*N^k*Ag-5ZKT%nTQrU*J!CE2T-WogeMB/5kk#[SRD?^QVl'pX*!uO8HMYl[;"\tn0'i>]c'HSn!Q3W$N=<s3X\';h5`BB7%1(A,h2hhIK94?mlR$]/IpDj/Tp$V/9raQC+$V$E+-I^*Vq"/h9MTI/X(*"k.&UTS!3;_c-CB9U(h(,_9LEjB]Q:K"P04R!>?X-)/%1]WmW3bdC:c.W>#EV0[KqV&'gBc6#QVr,uF'i5mI2@8ZGINqPY<q$cE%RD@GblFnsPLLh[P3OU=rUQ4MgDCeoi8-#3OC(&^UI!"'%aM]JFT>pQ@p#qnB32QYaA_,0,7nKJ!c6q)"dNRSoII<GW;u(!8?%fVW/tG9jcL;m`[4&Tt3$O9#?]15=f\4jLc>+_3/qhhUk`qBV%IJSHfh]";u%-='D-%mEP0%5&F0rsY:[EB'8Fr\WT^Y*6lIq(:hao67AJ88jp[f-_jh0u>Hhk6<u:0ed'q[n>?p1j<fRGS7\X%H*P%SG:;r@?Hf8^6]B,9KU9PXmiBM6-6/j`<)<PZRP.9gOF%DVJNjuAL8o7/-IQ)mAZ[_<uMUh&WbEhP<+:DZDhn`Z&"mI)7/:U14@05%pK)@(`U2;ANAJtlj\1`KVYQG;n3aSeWjQq(6X6meKB>ARVYE>k5^B<rgQCc\l$W1UU>4i9i7@bc_2>38iPOM%l3lMo?lN,A8q3BS%a/tTd@O%O[.1VPA]PfgF9$U.T@F0mHi_Ecd4bt_,QG[iK'"*NHC-fPX;,V/CN(H4Il+c-J\8g<lJ$#7FhO%TQ*b7fk[r8@i("ALk%^6`IgJa!^IT->00J=id/hE_UJ4V'd#lW3&?GG='fR$s_T_UO*e^:_Am`9NL<(rGSIp+VO"Ho2FtHI]^O+LfQ*E"t8%]KAg.UBElE%kI!t2mL'Z6+("RE%H)Ff!rhG(9$=VD+!Pl6lIlFPU?;1(7a((-"=-CLQhi>Aj3qHu+tS_Y6Fc]#_?21tJ'8Uq=6W:+_]OS-<YI<#%I[-?`GE,.CZoFFCQ3?a]pF1eBGofWI41U"dC)^ia:Q'%:'D#;=%aV4u:(#1k>sMWB4D"t:NHZsYD6jVGBI[`KdF>VD5%q[@gY(JK%1WOXs@nAq0Ha3NZ\8YM#a,$(&p.Z1Q-/56cOOU.uN-rp4%T?XooG#<:a$mX]S2%$tgk67(r19BFLkF0>/Z7(23.rg_^r.1AlWu1k%hYU4k_.0t\mP$)kY4c;F\si2g*ZiNRIWeZ>bOZ75VET/se_Ds`(njVA!>U)=C6FGHh9,Su!h\WG^E4q+_KE1goVO(LINR=-Q>meM%ANf,JZ/IU^A4WUn@V>*bh4<DHrWCtf.o%-!FH1;_cbiIDd@"CeWe>fW7Lo#\X[^;WJN--epYF3INfl@NW*,N[<]uHKD<G-(ML1!d%(a5>,g"n/5ga7@4/9!rREpVsk9a#.;ji(R,d=jhf<@t!2po]-LDpOg'F_6kaG\sOWQ.)E/VEo*WVKm^nRMb'\#5ENti^Itaf-1eB%TrE#PoV3H!33[kTH6*D;iLf_POi]`SJJ@[^bRJ;ZW=4!M-1WAo>9<7r0T$+!:K<.E]N>ir1pZVq17unUE3F5\_Y7M`C;XhV2'Oam%LJ&Xr4<[.@DI\`J%'J3FR@pMpG$F<BkL9QD<,,3jI>7lf93=>D\nEZt%R3F8bHf$l)CfJ>M'a.b>f6pciH?P<Yn!p]rY/N#:Ib&i%g]I5EC4FX7s$:2oUe7NkF\]:!hf??Nh#6!PR:NcVL`,<?#hU]>;C$H8"(Vc=HkhY!otelTirHX<1LHXsI?Kn4b]e1u1<s044Ut7?%RV34_PFeGYDK*VT\p\t[n*P[H]-t^LhCd:j,X4dpZ#`PcjN?bc&!c9'gqr($GZ_kRRdLi1`lgG2g=ZT%DTNrBm^t/n\>RIi=0HMK%935p'/tf:*'*SXOkG![/S!I.WE]K5[Cj*-T+!13(IaEB?M=mK56N!Uj_1l7`TGCkb\e>kR>EV!go5`D+4PnAOlpR\NR=rP5i/c!:%)R(k$M[4i4KPcOg\UkD42<d*!hNP/\QO+7=EGDo^5qFog1cbtH5ONj>YaV[spfVVkGrS[gME2%;Mj8T%)\'YW>_5Vm,emp8?4TNL%0uo@)#0_Q'N7N(;If8dmq136bfHXBO,Z4pJ*imE[JGJr4\mh1oA]Y9kgfTAr]LNXP]0(sQC1bKTT3'.N<hd%D5s4+HJ)cRuG]rSr%mheaI$0h;oO1$\<4&Nm![[+6Ol5=O^*/C+/4Vre)e0NA'nFKVg!1R82jFcQu+#,W6hFSX77%"bW#!4ZhdJ=3`V2qEmpLS4jR$u-l%!\jO%D)]fCrUNleVYT_^?n0L`!5q"73=b!!=]9$RoZUZcB3.`6AS+IcDg]Q:Nf4oP1!sFY1MggQ?e8$pSoE5*Zo?c)d3#Zm1ng1&%WLu6<)eMt#&'7t01rLruXt=d5cLC-+(qK1:fMP,.oA`rhWY<"dY_DeO5dm]>`7ghf^a6e0'cA7-d6S`d!jKS;"SG%&LcN>]$fp1F%>@5?I)e-59KU$!,'e"5+;hMS`C0abA]qc1uG)e6_ru054hTt/PiRm(0+r&+Ii0AMlnXl<]5:jeM:P1MEa:!/`@i2U%Io#W54lhqA%;](0BRJZQ28&@jHQ"49(REs!T1C5m34./ir-&uZ*(d*:Bh?$?Q,`kDH)EGVm?kW.f&^`.jl,k7nd1o3XobA-3Fm3[Edki8#F;+-:%ZAb<<L&!WU;pnd-<ku=0Zqi@Zr)_>umG6Y1AO?7XN2FDVi-@iI:6"7"iJ--d4,.sgb03r5LmL(j?F8hLL#fEAr0rPJ\.%DTKXCq^%%0D[L2)[2T0-d>UJ3IJCKOCn*b8r`TYqUoBN+A[1Y<L%<.DF[&EYgl9Kibi98JR]Q`]!D3Lm5@9(E6BD\*tU"6]'&;B2"edZRYB'%pZE%3r&A6O,&#rQXU=\]8o6p(ZJePM="(T"g/ERAfTAM!0&mdS0XC:X1$qQg>7c4DEB-LrCeQPODNg.[1X!R=`Uqsj_b'A$Z"F_(%,STgZ,Q>s3"K:qdh$T%3LYT[5:oY91/kg?/#"bn-plua0??cp!nurCLcuF2X'pZBH]Fi\H[;20g%+i5@(j[).C^9I\A^@5%gn'=#%T.IAdYFj"X>X,TI\#hW9&rdJ)7u9rRTZF6-KS]XI#U-7%>Ondn)CVm?B[PI4WLr_ufD.BTQHFHO@c!SZ*1RsN3#(;\HggnZJ.dSu%ao-3`%]Ho=<1hF)lQSt/7M--ge9:273J%CL]tH7cMmIG"G2<UkE\-bsVa*U5eE$SgoK&[S(:e!o#Ekh1K!E3&12,H!F`QHeB=Q!e%;Y9.U[$I`IK)Fu"=gZG@$45un(;olaO]JVH`qWnZ>c89k)E#mEgp9EAi17I"8:EX^5"l2=85)aN#bI'fElj28hS(ANCa9&oZA;0P%=--jVp:P[LM&u7]7QR-E%&4a_hYT2OJ8Ol?rVMt.HIXFA#URqJ[b?=M(?s%/Wi;GY&1Dri?O[\OWX@ElCQoT;C'\(-K/60]+1'9Q%-spYgie=dGd-tOYgcHV\)@HV$P0=!U2-4r*<CVZug?oi>J,!,$i#a>$j2dCY:7%6,b=I<ia>>Gn)9n#*mD7;g3Elks%MO92]r"t)%Z_$t#F.;p,CK;]M2Y6;PGMRI/>+)RUZo?ZuXD:bY\:;3.d%\$Z;cO`k^=H\=hi*c!;b\Z>Xk@*``2p(),coNQ$AhYYq99``,[CjY%Z#7*#@j[JWR_Ynk9j26IY]eOeTuJCKO9$h-0%Be#FBtCA!\&6Y3SYM[!*Ki^M%A8\)ruN-j#",O!9'=tYnabLXbM/DA<.H)m2U\_%r?_tSd'c7B5a#U1F"R8-Dnl/BG+:,K8:5PEJB#Faa5jE+J,%h^Iom6@%<YWe;EHc:,&UiQAm\#uke8W;fEg!Up';^P)!jVKf;jrf%2iD^_l,4g=#`K%`NJ@]Q%srt7.MQnJ[_fYF+80ZOdHoRo49bKnm&_;+!Ul42PIk;OTgo(s/m(fi.[i)UA!jIN1U%S5`3PYp"jLR`%m"`prQpEB4h*eno8n2h54";2:j5?J"Eaq/.R<UDc+M[OU]k*.Zcg=Q#C!bA^W!DXoE^@D]n.-0G[udLC)MCKFYW5JiC)V:Y`i;F4%U(]:>*&4D+$Wb7mBaoM,@A[J9Z$k<5Iqc#9.pJ+B/&Da"[P6ZYrb;Fk\]g&k.!ccnP/O5;]..(SA07+c4\Yr@SK9hP$O8Slb'*5o%-4HG,H@0!2FJhAaG6c4Y3a/`Wpgpm`2.J4VY/VrAJ_oXR"O%,h1Wf9Q>4%dqdad'sYR<nO]rC/eNT>fB8>N?o,hV'A7)[U$i7.9f%7UAD<oWNF9lPgf_F:&G?g[0u":Ks^ql37?3jdaGokZ$]*Om*)hLpK%a)?TY0=j'9R='`/&PS,PV+d<P.f@'RHToIpRqZZN7_Jq^>%l8k)G-Bq)h;1Q\Jh2`/_8c_jb6<:/We%)gK08)kU7Du24S7#E#/[eD>[C1t&-u8!of!SdDJ`k-7LnoeZYNV#ZY2_)&?H5g8Q]qLQ%S@Y/e1Q5pV[uCcQ6RR0LDM=.#!1BZIbMstn6d:I-YL^5*qjn$u$a;nr[$_K`C<2cdYqo_<m"/)'B$p=N`?gBp]aoFV&k>P>f-V'u%Meh$D\"qI7c^1f(I&-5uNVo%Ip69,l:.XljduJto[coa!J_B+W;e?[?36.]rW*:=4;6/4V]lJn+-?9_28c,L-KG0hQ-*&A3(2keg%nHf,S0fC*#g)hc-(3&;3Do8bVT":M^d7*Y3FWDRe=6o.hqKnN>(VMC,.B;+:CQ-]WbK*TPpqCq'QE&IFn)Zf:$WC&RCgVZ'V.Wf:%*>@@no$&ERUBGJB568dg8gV9[AL5Er[I55J%_It-'=A_:cG[G*]d(^(W\b3UFY5u2*BkDM]#h!aXm%T*_G&U%V/bs1.T(Wo[0s8A%9_WIjr9>,n'_ptbF?L3j&(57_LF&HODRM@chCJ/lRBK8"OJ@*t3Mt0Vs"`LS-H>!<>CPe>n@$!LOCnkhL2hIZYhH#"))MFH_K[PQ%GKA<4:0Auc,e'Z2_9otp"tu,F=c&iP5[fR_j8%2:W(/\L(.'orXVKQ(^>6Cq%XL=9^mfh3+s/RM\7Hu5!?cDUJPsq9[9EFB$)8QY%<:hHF6?7PT[?#8&gLm_ih+i&'=+?k,q;HEJ38!:$9/Bj5mP,_pb%S7;H'k5ff2QsuLApY530`qOb'S&?riKc)>@"^2>*ZOqD.l[.%65`*>JmnH7-i+!eipgA8G'&bAWINV3ILdCY+j!j56@;f]#*lc29/?NITc^/P0P#2p>Ml'Y?VS39)J`NC0j?iBrKHprhd>FS:@#sm%XL_-Uh99Zj;]UFuql<FZk\dPr((+hcPM1$79<qXur+ne#rU`t`m.Vt*f)ft=T1Tr?<#8_+BhHDlK/pkOcCZtbb'OZL4U]/%f?irF%V![7DQ[f$,i`KDsaBh]1QdFSq-@7A?IWq_mmU(Wh>N):Y/L_El(oBTTHJ<Bgm)cgQP*;42TEe#`lCc/521=6UL?8o\kZ&Sm5*?[H%r']!khnDl;1NW;P2C4?#'Dg`IJ>fAe_)_)>pjAE"p:a(Y^PX?YYg*UD],t3-?b[,*DVG"LV]3R#1\m1iW4p10r=[t2q^/%KGMRLK%U(*@<=rW[B!_-5SSq)1c+7Ng]o6'cJ9JA,dh#YUb6tEURc)dSl5d@PJCEZX3ScPq3VHpID5S3k%:%uLG3S.O\<DGJ%*R:TBnE"Wr%X63poMK[_k$Gi3F19j3S=j+MnM2[PI_0mqk.2%&-!Frka3ZAAE7SK_57s(r)8$lq-nfc&u4LW&cZ1PQ0d,RN[**]]$)S'+B_>H2'%r[%T-fhO^:5T((6c'Z<nq;:oOkDZ_r_3800Y5!"iLk8MP$.V8GOq2n#i$'%r>e:ib?#kHrJ^Lb?Fni"C.fjXiFWHX<USJ14?UW`)%`$_'_'jabjQ3G993e4*aVISqWdSs.H#cnRl*gn[e>+Br%(3f`Yo.+7oa/m!/hFA[b]9a^DDp^&L*tT(VR1$DK62Kb?bETH^:YXf@%D-^Np:Wk.#&'<oaJf91gMUZU`:28Hk-':B+QV$eJ9S+Y.*VL6K=q`/qcTkF5]!p*U1G:[X;<MZh<FAXE*s3=UO*Sir?2%cc<5V\r%al]b;6-K"(73j`p&'ZHVB/dn?51N;.k!,BuUc]b'4=/OQNR;cHW"D/M]-&Yl)*%<L1uEk3g,?INMQA3!R"EW`n"1;]2/><&]+B<u%lH4Vdjg6:W+8.Wbk[MU3mF7i2$?J$KB.>X5Wb466+gC182>Jq>pmUOZ)*/1O/oaGVq22/fUjALiV9Htf]SaWe[teE4FM$G7qR$kQ%h1n1K[X!rW@hmZQeO$c('@f8.Hr103BP@Gio4NeKZ6W"H"dm2?g(g-Td6Z0V.9tZ)`D&Z:k.a,D49%J*Ylk>V\Fhf=7":*q#rcEo%1=<(ES^4\Pa+1]j+qYa?s)hNbkZ0Jk/5LeZpTBogZn&9//a#:Ab$p563Z=5lC'%1tA&;-n:5Ya$<Chp1+s'hrQ"N#[Fb7h72l.P+%ck]Xn&3XhQ&T,V(cKKt%Ji&[*$5S4s7'5j^m,.30\Q?QZ]t?7nBiM/#X2umAibT,D:lpn,AgTN=3h`MCdG@>4.]o)fS2e4`pk\6D%2#ofL:K^W2jkel`#tKp#FL[RKk-nD%4Gq4'GY!k/bI[XYP.!%LJ2o$CE<t"H3YQ%8B,4RABrj6cR>$.O'XWA[rYurJpFuX[pLb0>%4b)KWT=4b_"eCJPD/lpTRV:i+!aSZ%(l2iKq)e[tUs)(i&7G&N5G?m\S*dA\N1ZH\1G(Jp$+Tg1PcZp],J_cSO5^3R\GA;1r@tSZ%h8o%>Wd&F$_UQ3bKR`,rlfMBUN[%jP,o;,!C/c4a<H00U[nrAic.2]tM)MSuae%[ZUnbRR.$%*JiD53j:FiMrD`<0ODqWC8Tj"h(%[c7=gkk4>c?7EnQ!O?JI(p:,"pi]?f2OcKs][SOu<)As!=eE'Ll0)Rr%P>J\K7(USK7IM9==;4DVF-Jb\bIC(iib2U'#>6FdS,5@%Zs0&p]+^S`CaO=@C?hkC&/2>:B)G;NT^*"9i%:0tY8s`JKt7e!^!'lLGaFa`e0XeXlh%=D@ka7k8Nu'MTj8`imh2^o6CrRo[(D4O%1)4&cM-u<U0`TRJnnjt"b9k!`]9#sjTO;(+k4!_Y\,S3.Ml@ncLhQX]BV1in28#X%MQHVs#dB,,oZ*GdTIu85l0;SNbNnYPp5GNA%8C*f,#9cm=R7\LgL/nVZU7tJ.4,!!#LGRbk!/$BS;3Eoh)DL4DD#a<LDNXCEA)'T'?\:=eEmEL74(k>p.WTul$JnU_h'Q%^n_g>g%L_"U3"Sk.#QKqq8(5GrFcTFo[<u%2bW;+p4!`BlH="DM+QY`mb=X=<m0,BmA'+Kt+6\H=b60F9(Qnpu]KQiSd^]+F4J(dTKiH=?B%^^[f&7b2/\#<dHIUC/U2r+Gg6!=ZhqJCYYrENL5Zjn^a'3.FG;1"2rgmFUDnG,)lnM.OMk]^.H78K(!e'-r+pn^#1.=$"mL[]+Qj%C!ZeDV*)_T>\5D<&MP5@o&,&qAGX$0B/og=IkfT0;!m8\]T;eSN7`7p3$J@j3.tbE0OErm'fI6Lb#SU/Q:$llr>G6KJV5SZ0(Gn.%*Y&:?;FK$<FD7OM;L\>>D:sJnP7kV^8\A\_\$L%NcCTJD(Ic@Hpt'/nrM+P[a8,QP-_R?W+^CA(^q*^)KI(GQ]oS_6fo7n&0E^*(%!OeBBmL]L&,7]*-OI$OD&oXPmqVH6ta\.XrI44:">-9@Phi]K\-<CR%GFSXsWQ0U?Ic$4m#H[j.+^EB-kGZcUo?_?MA7cYDlb4Jr%ID=7/bP$]"0N[u-OuePr?$H#u&IN[LlbhLMJ$_`2K3p`Jg*;K$h:LFg@MUA[,5!_u]O+]Va"5tlD,WBJ5i3e,AG3a.0T%SY<.*h\%QXYBg"Gms1\rTMfq"q"t+%'5LS.(^ko\bekR;'o+c1`Un.iJuUUH*D%8J*LQ\tq;`@(JP_9_X1+8K9h"gd.#U%A=nJD1ckA\8(TV%7.P)\?9SjjHeGhZIZg<UXoe])=0a!kB;;_k#8;g'nYG&0AurE/4M'MG*h72*]c[4a'D9O5ESB?j?Kk?qoj9&t%S@D0ls;FDs$&La%fU4F2q/t!FJIIU[$f)8+04;[iiptburLicDJ,YjDHB+?'41<i[8MD28e'*#:o6IssN^UI9i7N4"+"=G)f+E=DIdl!$DEld6Vmb@+%dWaD!7:e0%D>TPcr2O7'C;"8m,j/k0?n`\hgXs);DZ[lCfLa-_?tOq8c'f/T.n20gs-V)7X*%oN+T@Pn\!qFQ4i0s+k!XnLU6_B!%kO1mX1s%ggZEoIaG==i(Rm!-hJ5h6qjH_IRhKaO__J#sYTWN(OggYu@r)gF&DMYK5c!gD4gOr&:2rCc8f$36>\kVFsW&F!Q#&k30%R>&'nL#X86gbeC+!jN`5YU_JdNEuES`bU&C7[C&fPLa-<-mMg6ig@R,3)t0i>dd?nAL:ER4stIW%d3JnZG0XV<l>'Jj[>/CV$enK%Q^j8NoXJn&F!.b2<o*)JSONp]5'@K[KO!m>ne&*LH-Tlb:A8u]]3W7f(s*2q9=g7k(6aNh$H#S=XXV$Z)sbBWjA_V1D$J"=p>/AR%5IM3]O):@7Kde@*7AblTa$b4scjI&ZD`X.)SM8s:r^uJ:</@Qt-@bJ,`/R_"G-lo1;?$+r5PGB!.A'L,fW#1>`U#+c<&<.un^X&2%OtiV(i/Kp+!Lb\Qeg[DuP#\\M;dR'Hn@a26YT#n1gC`!ImZk5/AsZ=o?b:'P61!Urc'E)bJX;/r&/7r6:n$^*Igg'mF9?d`3J1)"%@6Zs`pHr%TkcG":R_dc&MA0$7l+,;_U%dc&57B.PkQ42(A;9abFNd8WpD0'RoPSkM?5Q+JBb\19l+"`7Zi'2o@"l\b/Co@n!Aer7%CQ&hpb=Geeq'o'tMQ.B:X)1f"6DgPI>B;_32OLs1M#a3&VLam?41#I1k8!F"hlP\W<fslLHm^Y]B't`m<HjA+)($Qi9+V>mZ[re<%J4rB<:=E-J*"d`!&P4RD\]J>m$`,NrruRnJ``"3p]?J\P_O<r"5*<OQ)r=H_.\G%J[dM!pe,GtQP^&2&0@iHg:R;.o\!B+Ye3MSm%\S]6%Hh_Yr.>+J.[Brp9>;'d4LA>n42pgAhQ+:H[>JM4.^j2Y128YRp?^nJ^cW9(u1!,mZI\K%X#_do\0sQh3/5Oa2/KuE6J3I"N%P$;G%YMqIfI@#]e*ESUpYlV3"G?J7(1]T"D_D"NU).,,OHHVHradZ3PRtp7FPOX$RPo4?@Vf(6P-0I)`25NUuSA=_MMD;YY&&?<D%,&4:VglWYK,P\&4m79>gBDMJJV9E,0_u3baRLmC3Z"%-/ZtN0^;Pof?VCreVH#2'*j%.5@f*>t,18Lf\4P2hcNK#JiPGF7N,'Ch@%HRM^I%GT[p7(4g^AfC)mjEEYmp9eP;HHUNs!jA!2=Yj[GL7rITLWMqZm^2JrS,Np+je8aNkOJLPGTBG,ZA.*k9jdM\f(n%I2W.XX%D!H5pV@Scn(Phc-5L%P*Y?Y!Rp$\mTg9k@?-Op0DcfI;C@9g3I$3K>#!eWY1@1).,#up6!b!'HhSio$m1eNm1q+<)djPlH)h@p!j%ImCR(IQ19U[f(_r*8FI?"m`HUa;TC8HJ`Tdr+4#HClTCO;i'\pr<1^XQ(%Wh=_!-@Vu^-`,7pK%2\#k&KhXFGSBES/:Z1I0qUOao%$lSc$nV#*GrX&9i:)BrJUp6_T5G,n\b1s%%U.?).\%Xu$r_H0*e[p)Q+g?=cW1?b+!-,-Bh!8$?Eh-qD7Z=+tP=,+-2k/(n)#R]%%gp*uJG@1=#:DAcK4EO78&bIGdm!GJ2s"AF'GR"NXe3Tskj7aC;]A=D_e`Xl5QUOia+uLB:)=0n5Fsr5s\qY"W*_n^joiuKP>7UId%VQ)$;*p.VuhR2sr2aIN=)Uisp4/*+@f@Z\G>Z#nJ[AaOb:CIDu5AIZfVJmX$TX38A\MNYe)DCX,+X!T9I[jt2W+@X?IQ^XblrN>(%-`:"DH&bTXNiB2AM*\<X=,Ye-F?50a(T0JP/73fgjBk^-b8p'+"-_h/m^Q'h`Mb6X/2?gb17U'*&[6!BjU,7sQqh3>q^0jUm8h':%p9^SiiY"u;[5kUSmE`;[6bEKYXZ);*.0+CrS=.<)HV,n0dI'3S8jl"::JTh^;u+o58iPS5I5>CeE.>;)Pjb,T>P#sFTCS-`HsG@g%6$e#D87.@Q,@!/W4^=_ZYX#I;ql&7=?:,&scaC0O_oI\(aa[lEegl4!#b@QgkAp1Z\p?-Zb'Bd[GU)/80bK)pG*f_(`EtLJ3k+X4%8!YIUgZCWA>lpJgXS^=\#e2bWUMVBi6=K.gYLc^q\O2@Kq>2<g!-c?7pr0^Lel"l=g'FQ5p;bABVsgjM@sp4(+3*keWnV+9_6kEI%\NGQaMl4g0N6+<VPprG$0tErc#tP:/k76Fcqaol\5PHO*0Z@"SNO6q;Yi^3$,c6;d>^MF'-">DFH2?-5T]$!jC?)LhopmCbTBi$5%gQ0lc^GWEc6Tl-/o$-GUgkno,H5iRFD#9F)W_j\<Tk\-jU<TX9ANU?j[%).TX]tDrd[9p`dSKekG^_dj?dI9c&DY1I5F=dY8d-"T%B\8"X/mEo;eKTo"_ah/G][WAt75W0nnB<NCOS=4!<3(s<'\/Cb"$W(6CcY>1@q4dN3DZL>`/jE<97#\5;LGhMZk6Dj6g&FJnU&5"%[eb0AWEeIfFo$>C8<HGB<J\Q(Qsr$d<$:LGiMc>M"d5U5m$D8Ip[a]ml\]9sP$mO=CBY"NF@<QW]]aCs$A-%DhN*i6AO$9d-U^@%%NIC!#6u-%p^`$fk6(ple<X=n>'eVRuq+\8*-]<X_'tl+D1'"uNdYDRdNeHYFgajQUUcI=i30`0#^3=dOW,G':G![>fT9:fmaMi^i%W;OdKS>l_j]Mq3FqDAXdPS%4O,Z&&(MNejL(P'fW4MO]a0bV_TAV"<"f;gE+1N.3d>mVRWg@gCu6shrXhZ=T&gt=S0L^<%^-]-0'%4^JYLf2=i$3DeeHV`]tKGoHfW?!N6,6;)%%!5NE/eNH2M""ck=Me:-/F!i9[T[I_YTmLA4.B)78aj"e2T?7=ZT"Lg$,r0!W_;Kr5%j%&A92KM[agEoE(J.\:43lBTLB\#XZ02Wo>[j!C0e/sUI4WmK3#OmA1X,>NI#I;D+FS(u)LpA]$b28GBc>$6q>aX0T@JOo=I%?mi%/-Jen,!uM2dXt),JSCGD!YYP:;-?g\<8L#W*S/g[116(hS@XV7.qO,X``l8BiR,PbXHq[-Q2S3J>*Fp/*DLH!*__o'^8^bX2RSW`%b^#XAf1(d2ar;qPLa']a,QUt]k5J@>XZ"Gb5dq\n.$"-=[mRK\mqIO:q=/je,RXRY:^om.g#H<QF8Zd]7s%hh!;S&<.Q5jkZ]I)C%f!dmm*q%b&P[gDe&Fnk'qUsY,+DTC<i-7;!OQ0t:7!%WG@oWYE.r,]4D"ZkBB$\+BI-(c(S5Zr%0`tm!P'#)M="*W6RnTi\W#C,,%VR"o[Y#JP#0H>U1r^t9S?kZ`)c*JPS.6G>'3O67_]'_Fjq:?*,oAfS+/UGVl$@W4IG(4SUO#Z!G9`;Z44$QBIE+m)M>3WOLfA=s(%;]"D/]GYDTK<@Bo`@Ao/^Kh-eGqfrt1[,RQok1a@>?HcMn0SnY>A5N'6C,SNb]O0bdDhBVZTRfh"&B^,D1c;g"OTdlMsB/3Ms@cW%h#'[9-:9dfYH,H<D'<$RY"I=C19S^]8GmHq^O=4SD!*9<k?J%'OrJ"2qau\FMuCll-`V!:A`>U`g5O/QJ>kff?Q8/K(L?9Kh\2J&%Mi0#n&X[`:J(\VqZ-^HjB8+u$,'=3gR76;\fO(-LR4XjCjj`u/nAQ/iJ]`B^"-=@s-%8s.]l#EM_16[IF9/dU6IT.Fgkl-iPN4U]%e'/CV37Y*_X7$5)HpKQ:^)u[%F7SA^CicS;_Z&`5RZb(KZmDaa5Da6<Eu*[<+s7&TM^b4/K3CZf[sc+M8.:2r<PH:0+j8sdZ;^U1%;keW:W6NC%F&#DR"o%1@0)4EmR+Jl%,QiRX&,\S,aF-G447,7EjSPhm)gF^!=J3^_C=;Phc_r3R7ZQ2UM>#!=!J7:Dk@/r=OjY*&%$E)_?W,]^gcK3[0\aOXeB3:o#K#QkK^+&!HAcrRSVD(ckj7(!=QA0STk^/gi$4p_7?<cMlG]HL6VC4;NQEeh03B,7rnl1T3hEXj\%FK36#mNW9\FmjCmf&*LX8@sbiB@>@57K*l8J9RDF01<d4"`V5'_D5lNN&e=[UF=3tR\*3!m^r#g0JD=@])7@YFg!di>-3:^X)d3h%'RjmL45:rTHag2#>Xba-gK3THs-G</YC35l4`_6!)sc@+@$Z6*00>)h%M$&?DJR3s?gi0hB2AJ3ddPr^SEp4Jer"AteGRM@EbO(t%eQcn%k'=XE'&$N+f2kU8f6h,rA:\I*A-[N76baRZa1M!_pYTMMlPd!f[s1+Z(ORDY&=W]&p.8Q9I37BY2UpC:NZ``CS^5dNAu!ut%1i!.Uc1SU9A6J8E1s``,Hge5i-jb;^(h0nOr>Zrh$"/BepiF[3^ENXOqt!@Z:q\LeQP4GB;88QP&!Q\ZIf%02M9M4"n<4]N5l^S^%X;"BAecWiP)(d"6cKPU9N-h\qDT!bZ2b)O=7fSNq]HISfnMHsb+3YRlik0HLg]^fD;tL"g_T/GWGK=`Lp5KIRb>f)@Cm*ek-Id/.%H*4Z"R/k?.:,%6)oOfu!c'N,K%]8Xo8jVfB^c2@B3DS+aXs>s/@f/n."BFZ&PIAo$66$""0fb:%&JaP]F@BC[7"#2.jKPNQ1?"r0%M_R\NI1?P.0`@XU1DM9a^fYDArp:qSdi"+a8NSC51q\cY_N-usUqZCCF%j6a3--t1?A&mt*hpnnCUJY/iOm]G*)f1G-MK!hl&j(B%03"c%VrEI2X_n3;:+Q/T12+nQ)'!L7N4idE'bW[KcP9kC-hK(43]0Xtqkn7=.CmOh_E1"\A9^S$S7stIdc+A3kbFO^+ZN[pmKHNX%&:rVhA;#8YmPLMXg`X>KKgq:sO[Deo$q@:s$5qU'FI1+YPKGm7LVVlPF"*F>PVL]uM;Y?^LPG>N*X!=f&V!qq5XuFrV3t!8#HlnS%WGHdHH/P*&dkA<f"=Ng(ch?`:MI>l.Ugltd;DWcQA2-*1a1.Llj`O12G]S!L)j_.8P'<I1oA#u0SB"Tlr+Pu#``*W.;9g/<?)b[/%T7F`@b"nNW:V]T7mSN=aT1sUu&1?UAa[aI\,k2uX1QCm9_YAhKoRq5$nrNnfSsJ-M==UU)cOo^IZDl@r7>75J.USa':2Jm(q<G4h%c,bEW0M!N""ob$-LXV^1T4p>3D8LPpG<7bq,e"=V[8Mf6@FB:d\p#S2:oX=^<t;\cltZ@/ZFK\Me/@q]f%MI/"F8ONc`;_(CsdH;%DO`XFm3!AZ[;4%\\bp&4e^G*b&Wb'-;COOJB&K0/Zmru*k4>gt1X/f`XfH"Sh_2*M(1;a%+/7[\>BDS0:rEnUqtG;(WT8UmRlQcn%_*\]t\ogVTeD?UBZT):R/FPf)CnE6Hs4YZgqGkZQ?]6Ajg@OJ\IuTCVK6Hh/YJ*[lYO0eeq:rRuHiDa>GPs/3s*rCE6A:4^hYLt,%hcX<iIUAGW8UGqG6FRE6BeNg&AM.#qXM9^jn82mN?=Wdd]cYFA`r5W"rnM:NhYlrUd<t\EmlpR8"^ccLj%KEN!WB%JP_K)IrOR]]%WsuqD7=\"DM>XaNd+df1\B)\:aQrfD(8e'HXTs<JF!+Rs/HH&5[KA5@4`26pSk$\G2Ra<U8Nis"`:m$5P:XCPfV:mf2>KKD6Qp"e%B2;'P\!T6OMO=26'blcO%/J4Jl3G;\Hp)8'iD_cHT9+8tm1m-RfE?)m,Zl@p+oR4VR+E<$E"(stDAsUJj0^-C!un=q%/Bt]WKu7P%p\T@GIPTF1>o+5'n#rjOea+tC?dE0pW-5kH7D-=(q6*r&,:!fgB<g$@c!P(&;4G$"oJMI5'S7kGn)huUF10ORKe(Dlf=MnG0@fFK%HoHUTHHr_VDb?Y*,F.M_OG-79oPXAgC$*.d9cb&*Zc9B8DQ12-jn<9NQFIAE]%>//C"$R>c.p@ur@TmE+8:<bD'GlrZR!mM27Dt%%Mk9'#MEksh7XCh!7k0GOlt;/K-nu@?-2_5WP5`,8p=uS7f`;^?*TUg(Wn7\5AG!W,#H*B`(2Yk:F&;o?^Mugr8mJij:5*d8iA?`e%d0dr^M":\b:8[;`T0C-d.'RUPA=e9&MtdC!HmjLRjh7a=H:H]mKQcgK`1\0WKFFM=:8t\6NALlocTcm,H:W0'g3)?)'kq83L_jMY%lBIMlMJ*?6QQWK+)O-(\XX5?o]m23%KWUH]Z!J`fOSKb_+SgK-c`tVn6Qm;T^dY6sD)^jtYuG/5;bBBB.#ML05.AMPMiKcb"jNK*%,^p]SBu1GPkN?@Jh.EYPC:!gq0B"0\delC_2.=jhk8MCp)%uH.,,j1i9q-GUTg3uOp=m=Pfr33e2_SsYBj[dp93a\-R_EXo?-^:n%ZDV9P0-0W\PLV^XUY$MXoGo0h&n1q+<?He(he(S*ViOI/IaJEi=C(ULI8g7sN0GBh$34^m-b9ki?.RQC(H).Bfa&au+nhXGlHbMY%otAUlS:LV<l=Tn)LWh.CSim2t_K`k0K`!h;.X:"J4@)*W8B.rhUjWnhJ5^Cn5(NF9>J7<bIt9P#&OQ/sZ3ZROmPYTnc+8QQhnoME%)X7;_eAW0V\:;>oF8qbA1fh\eIK([/h+uZ#J)?l`hkiKjOMq;WVb*:MKR]>S8ruf%BVmjmNC'WPechef6XNB>A\dkA6lII$:FHpg%J56Zs?iJ<$qX6?_1&G<WMYcD<B?NR[,:hHANL%3U[]M,.X&!P)4?IH'Pj'<^mK>_34'4o**!Yb@f`=emH">2kmBNW&:^:t$L]IbG%,,hi3YF^T@!BWV+7p!F25U@BqME?B$MXI7uB&=\0:ZC(uF@4%+O.Y48Vu5YJ,c&W=>[9puHl&72HbN;$?DGt[-=NW%pag31(-jH+%CH8:Fm?q*&:B'AH/+eT:OC&+6m_]=?d(uk-$VZ/KFV?_.XTR#s9l\G/>EfMT"_p/L2XK[+QDQq_pTUCUfEBVb,2IC&-SV@#JX<=0%'Mq$-7f<K#Yr"A%0T7]e'ku</A-*??7\dO/VD^1Dh=_3]^'58sqFg`6I!-;cjng^Z9d0HTf.O*snSX2_!)iHRnN#;VGKrWaC:BCg%*\U=B$YOJSf\L(K%kCm<]/dG)Qf1+FoIM#\X=-dSgY9M<Z=+[Da/#9bD()ocbEnimj<<Cb=m<il8SZl6a9-aDC`t4!=L2qmLt.UG%'iu=$JW9O&#Tu_L6_\;iBb)FOYHe[4Hf&S0HV&C/KelX1;\?=ng'uH]fU%]jJ^]QjQt^YWmAQ0n9U(/9<,&ld'0+Z]7IZ@QdmGau%*g_L#\K^S"g44Xb'a>2[[:Lh"`FJ/pRi%!*VKEPXWhVN_E($5m-JSc+pUA\(c08S\!uWS$>4N#.Osq*^B`O&q6L,Q\2oIL*^MS$Y%$%Z<[7PsYm/u^^n2ZfePgp]Nk39Le"juRF9h-'o"apRK0bq@NO`hAn?"#T6Hl'n9Ho/fAnER,c+rJk<Zi4"soK#Xu(4Z^[m_mr<0%!#-K_9,/AT);G.!HFB'^L+T1r]@%mpOUH),m>K[8MXasTAKgn<J4/M*gW4n#[#1"p8Ua4Ha7R4.(Qdu-VnMe'U#W*f1@1VQn;&.2%ZZ#JS,PPGN/?-7,OS-uUQ<\IEBDM\G3>Q#&F/9rYh1Fb"_mtS2*"cQK/4=ttS<*?;f:SL"O3Ec=V::ns3QSp97_Na6rg-Wor\faR%ThoieYCsH.e3:NMTq!E_Scpr0^PV&]8TMrDESV=CoC5<;PWBlj3W9m,K0Gk?m/R#3q\Bj5G%oDNBWDSRQ@9#)a[+Y2*2$E`&-hXn%=k5P=!6(Lo%;3T3+ON!gVNRsjH?a67"^Z/!5?S?!V0JtpO'7W6>7\E!NqEb6^/d>H:TNJSMTCi0\d3?pb799a!A0RD<jB:#5Z0Xb%&_O>+Z4btARHA4'c1+ut5q_%fM"D"Y5"UGi1:hs*%fI'=AK"&q\NR!%RfbM3s.d#<)-^b[[Mb\bP#I-*.MRg[_,cEQ2JHjp!.iQk%NA*i-bg`6o'ZCiM>8(dYjPs$X9`m5S%7LS9M&UF<O,[1=`/uRgCd33/+ub%n*ajIl!YO,J-,c2#$u-9""9lE6$;_UUq(i.2WZTGX%Pm"fQo,"!th)m9J^%>neo)!$CK[.-nmiE[3"TB;AM/suJj2LkHK`>DOmY:1.@"ZSuMnF@c?SSuc$>dkMN4,^KEIf+kF43H_j9U#5%3;MOJJ$Yh.,Xd?$pL/8E845tR*Kl`?9gF,&]ic%<0?bY-iB6%VqU_XknD.L?5<-?jAK8@l*I2Qd!Ha+nc3%(oODe(K1Th=_W@)On%Dq'o9aN]o$J8Wj@IEn5o*ii&g)d0uRn7-OWK:l`neJb-Lq29F4:]S2O%[jpqPo'O'Of0S@f7[:0Jr9^lc0"O@U`<D83iCf1SejLK%bHCo@\.:>ZM6g7<n+:H./2,q<#`\eG.4WGg(#uK\PMo=hR'^9J8,,SZSY8*KSO_\Oebp4qJS0#Dmp:p]5B2D8PrR8o17]U2I6b\g%;SgKmBaT\MnM(C!@ii(fN<Yq3TA`r+a0:#S\@iDOK'/oK=1q-o(?+si=8'9SSH/bI*1a=r2KV@T[>%U!12]r7fP![\+_+L9#4p<J%!iT]c&>_Wuek]$U;5%khJYq=S&QXE\n!>5*c`udn'mI&`Ol4&Q`ScoV):juK-d2%8h:qs[FQX@[bhWDT:4t42AD.8Fhc[?9l_j-C%m%WmCGO96nR&^CaK@Ad]dRrUMVSd0tm+=I.Nar=o`6QoO&gH*F1W'9YCZX/MK3Oik]/[b%\%^MCj'Rl'EqkqA[SZL%?0WP??,5#n%QT<lU<VR0:%,Tpa^R]V@KnV#V(%2/:oWPNrnQt'b@/^Y1Pd4X*f8"ndjSs-[=^O%gJ*'s4A-B)QV-oh*1L/[Kc@?Jch?HkI@80+V%:"Nh+>n9RKf5!%[VPn23E1V>MlYdq'DPH#r?!S^@,b\u$HGZba8<n:d`@-n\bSW.01I6\-9eu(%#UmR%#dT,%fAI4V4iuFo"ANt/%-Eu]7>bCn@1KM3QF)r4b#\e`O69j\:q90^!r<E\cO:Y=T"(<$;=gg:+I-Wp^#*9N>,%\bZ5*U:)k+QKJ*mVm#T>f,*BFg]t-qUY:%6rGd:/F*q`Lhq\=[;,0Pg5/=i_3GMe6q?cR]a3]t\<<`HH\Q:<0o@`5p<F"d.R!Zb!g]"gmb%+bnDp#]2Kn,2T_e9/!W$,+ke-)#%rDdmY^[D1<>17&)V^p[loL3M"_1Q!f30!]"-H5,ql/n^=etAI[pY/S.k$hB#8b)lTb^j0q^VWRjVUcFIDCMi>q#);B,!VJLc>hNQ%4MaR8K]ELY38&\9#VNCfIjAQ.c"UEr@E=)LU#*LGl9+"[<MY,"Se5Tj)XdBCoHB]J()POa!A.W(Ej-59o"`)7B]B]Rcker.5n7NG%0)RI5g-q,G6OX%_AKPYQ6g%F;C710O]0[6$-(5fL=s6(:]KbV[rMRN^L3$A/f[Vl3dk4Ffaa.m#VE;/eO3JieL7]::-8/\H;ak[A%(E/aJrk-%5YUj9q=p.R-0ml'jKe]-@)"#62i09,DY,MuK5VOV#Gbp/DT.bsXDqY.Di=)hGk/t1eP]OFf%+efI@p9m1N]$BqIN'\F%!WNsEl(t?Po@!Y'F76DM3Kdt.I=_EN[kHYGdU"bG$?99:!#H3>!ikX&$0a&#VN?9\N\QOJ+6TFM,/Y]@$AJ%SZ$AkYmBI^Rc)HRQ%"mM0o,2r.,nnO,K$)K5ukc<7lfsK#U]KAq\e$WNRHtFmsCi*$Cqu.9,n?)]L)/e:i13ul<g6&=ej3:ILY:\YsH^b3)'UcV0gYmNq%=,:Bi?i]S9YHF]]hg>+o7GH'oAU4LE]5k,I3P-`_HfV;97aoFUp=*^"L/bQ;/=Icrm2d<Jqi%[t8b-*n2f37qE3D4B9)lnh>`\<O%A*E>55?iTI;c9RUSOo$3XdD73\&T@AV*V0r.r9_2S[lm>#*i;dG+]Mu-tapV]3Zp`@aC=`l_+b`VJIII"$s+d1nmq;b/Hjf!'\56%+dL!Kn+q3u0Mm3u,'fB^1>h^,C9fNb*G>]_J\^`Z?:+!LYq$(C+V<4)!k@Q\3SkDHfJ`!\pCdkC`n71':ctQHkUG"eN^5D!M$Qb-%Aq.u/PY[gI'F"+*ri2,RaXq`XHV,u^H1.fPs.e&tA5E5o[C6>pGH1.Na4PNpWuZQ./QFn"M@<Wc$1qk&d(`s./9Ab?lSBdY$Xi"o%s*8K?D)J[;T>N$0j-u6&U-00O`B(_s/-@n%>*>G:Jm=qK1I=&s$=011_i8T$b^7N(NjWWFZgl;JVoG&6k4lhBnZloA=seNie,G<.%pZreMFJZQtobfbD<6&]6T5L[Cp:I)HVJX'[Md]lRj)uJH,.t1.@oWM],E-[AAXRg8c.qp,>JtH]D,_A^?s-H#l`#Fp<EmO4cY-Kd%.p9K/_C`d1gW7"(9o=BM09'E]H=$XX\#j#ld2(<jC96c]+0F:a>YJ6fJcjJiH]52AH"Rt4bUF]R,,-(mm\Wh/PY>prnjf_#N<,H8%UQ-^?)EtjVMM=.3TfHr:,!Hk-4pMs5\+3KoGkPdS__'rI;KC_HOQG5Xs(7]ZI7TREhO1%N[N4/Qbu4ACC?q9$e<Ho4@(IAAD=`SG%L"'W]H`#G@bAjpuf+P0XVIG!5ZH[K;8jN#/R"/ik1OEe"4!j=@ZD75]2JG.W:cjX#W0qquI*E\W&o.dFCgWSlCaS?t`jYG"P"#8n%cmhf6Qo)\sK/2VZ)_-ZTAbAbuKNQ_?p8Q4^ViWIJA2CUoo1-*KJ<<!g$Ou4]1fW6H6en=s-!r_S:ecH(fZ1NBY0('7?eTd9lC4*#%j2n@c&i]Wegp,Ooge%<IBWY"XS@`<&G/*YskAg.Tc,[u@p\!"MR3^a849=d6:I91p9(#?RQR'j0X#C!l2V[<#7JKg96aI%GpIJHh%fp<m_nb'D-/8.$([8lH7Q\o?qP;L-ekE@A`^Jlbq2RE">``KPZ;Lc./\a,R>Y49A,=-"#gMG\`!$"lZL`oA3=EG09YoAs7bo5Q]!%[)mEOpR[9N@^p^Kf:/)g/m$cbFHAr!l.!(:?kOlXgIk_*p%%f5ac\#r[NP%p+7#TcegIrKanO)h`#ItIV1eOf=eboXI9%7:jIEk.%2Pe&D;SP0'9fP[*a0>s'"X20=0pQkaJ+Y_Wb^gjJbLbnJIlksU5#J1nYg@$2j(Z.0#dNV^WiVL1nO8%E`ede\H9HE)`'!$s(^tXC%>W"G9n6MOq/B5k"eK_Kc-L[=I60[(Hb-2N054p,3_Ci0*bk!+Ha(t^Z0!3Y:Sas!sYLu.#+N\#0*,TVSl5J_]3AGV7JId!8Kk%FE%?Kjm(:GZjDk*O%b44UiMP<J@"@LMckYWoRe_=ciGGM<T5/kr[dGA`Fm:LQ<,QDDU51[!bK4:\>L`m5d^%%jf6i<3h@,qLHd:/olt%Q1]lhdI]?83LR4cG`PKOATeJ0J@/!+jMnU&KgTY`kMB(Yj#5H;N(FpEAMC>(!$\^/R.,)!J`1$$;.,L*S$op:Th!72pM&4/l?<,5%?N4X"rG0^!s1d"ojBTiRcG]j$lq9$db%#n.AmkJG%kX"?aft,1[=l5=&#&XJSqG8j0XbQO**5U)5OX$!BJYnY:Qf%^kO^Gq8_iAU%4M<P/jT9o2*7T"4BUd=6NN;?L7:\bchBa&Rh[+5@.,-ZCj)dHn_G,U*YodXGj1W-_CS0k`:3i&a8u;Tjn[JjJ<l\miN)u.8.aE\^%&7.E7&e=:u$Xdh.>934ILSnJ?r;IqRq-5RSs%nc=ZbDO?hl_G+hNq6_Hlj=`b`i`E.,]7+bP?DZq]pg_L]^H9J*d]=NPl)YTf!E7%+YidQ>";KLU5ogajmO:SLHaJ$cDKpDfe5LpbXb1cLn4(gmbi6[rFP+)dFtF`T@pZ^",q531XJ_*8ts)X1,ANY[3t/9H`Ud[C7tJB%gG_;r,PZGhhMc5tj7DA&cPQ=fX=_Kj[`2>V\%]>n,e.^I@ABgqF?:\B00Ue8_+k,@NTUUPeSoraNiX:U2Sg5pR8t1Ygt/-6W(2^"%i\*L`*X]K)EU\aKA,ks^+oJg^c8;X>+266Pa0E/j[J"u(Wd\ihEdV+2n9icoj4rAN?7$JZ1b6m)hl;/\1&ptmo_nQ6hpUs_RuADK%aW*Sb;0\[h[iXjL(Tcsa.dY88=%+T##XHp0;YV*Jj`5;k91i6jpGoVVCqXroN,7DV3qunZB92cjZt1j;)?nH9DBH,j51!8"Eoq2=%f/AWH&S?AE`aQOjG6")Kag(^JVn>C.Bsn4bl`'"Q2ZJe+pmO\-N!6:\^Lu>F<8\%IR29$Q+6Dge]c#`-G7)F+NmEuoNUiHO^?#ca%R9#OP\(-pgG2XsGa9O$:J#4X(HJR;Y`D_Xf;op]gL?,'-@jfRgEko7BD!X.1+'rC.e5j$o2l&eOHT=&?5`K^kiJaf/[mcEf6h]uJ%JVI6[oPuU]]n!T%$N_u.[:VJ`r_g,4*Ig_ZLXgN8l^&ZS37O-`-:.`dDR4f;ijH(JbK1fQO,Y8Ks4e>\'-V)1DRJCU?9m!lfUS;n%c@#+KA-Jd'Q\tC5</f`pDtbI"!,@ri?3m.iN_tI;:s:pn^(XWtjU3VL4\1+/"U2j`/+7;2hX\N0;7^ERJ/'glX/4\,?C/*if=XhE%B:eO^/rYj8)-%XbKTp`uMGlBiiKZ;RTikGUdbO4%>pA9$W^cSVTNC_IfOfW(K%%;/X?P`DWPW!\V2aiV+i1\TZ'a8\]f&mmNTKIg%2JT]n/]Eq*@je@DS7A3hXteoePC!`k=f$t.([tf<K]0hBNi$#Cr;J)*p?Ruc3$-.Y&aHBXB.IU;]1_oo;h#uL:eRiP*qTf.D(0@.%Ebnu9NXR=hgpjE]2:i08>r:X*GTAXklal?N[<\)=f\pqA6-XtNYbU:i7O.dToX7%;W9k]jC?#XQ8a8EFU2TRU@#(ui1*E_\F\!F2%V!eD3F2PG%33N4<%BPueW)E4KEbn',TH#d=""JS6^6:$m=BT_'LK0T!d<7T"BYPnAd5r<!0.JmZ`@1LLG'8U_>5XSi4_M@46gV!A%22,5h^o9F"@Tsg(^l6<k</KP%5b5]TH.E"DY!Y$I265.mj^#Z3TCCn_1D6(n7HXkmPXjh&2-R<sp`6f%FnukO]He<M!ro-oA7ssN%jhu.U.;qL7dY1A=#R'Lk76<U@SZrQKM_bt/mIZM[Aso)-jM;)4#;0X5eaCC:f_L/mKK!o^*n#pPaDKIMqA=IPq/Fo5Yn;SBWbTsW%&6ao#T!X-tDRW`b*`'O\(YQXcWi!L-*gbc-^qcA(A?D?=Hn+)s"b/V.dOO.8+k>=crElMaXjjFZaln4d,$n.YZu<#pohIRf@/?p5%mac!m5jQ!N</`U^qIkh:TLRS.IR7+hPn%XEJf/FV$U1J4Z.OiVaWUK@IATRZFN%:l:jX2'[=;fbnoKntd>P7Q"0SD_G4$t^)6m47%T2)3WPa<A8q]lA2e(iYSHNQkb+<jcZ8BKH3'+GYRaVo&6"\kp%\4L<GcZn+ZJUG^R,>"NL*,8,$1_62K>`dn*)2ho'#[+g?2U5cG%S]$DSGB.NC^=k>3^*3>ubN=PaK.4O-qn6O8mHJ&Ifh*-?[N>?[M@[pfaQ.a?p#"&Y-QDhRpe>ino^Y&;iB();;R:I"JT#ZA"=<@n%aAOg%`?N,Y@i7H%#utB`g=E9),i@gm+)p.\/Fg&s@7dTW[Z_^cAK$(:qAhK)d-l)6"`>i>GYc^Aga[oBWNiRsD@u-'jj"`;gm4.;%DC0q."NSQln,'HjrBGkL\l[7`.4]X9`L"<WWbBsH*du3N!lD(JQ>qF.k9m>$hY0NV@nV9f_7k#[Z)YuZn*mQ(b&K)+<WG/P#l7"&%H83+$e$"RSJ+bGNUi$F?U+RG+5_4/GgU`QFk6O^dB%V5%35\\RE^oN%hY,61s.U*R2lOlhs6JG.ootIikhPC_F8IO.]<eUqW4-AC%aG&5YW<@5J2o/pJo4b,'S)eWQaXUN]0'iNo4WHfN[.Wg'otKtE(u;Lc)'0Ais'RO:K;M(c2/OD>6P[0iT3E+7.E5:@obe9d0Dnk%%huaWId+:+HMb,SOrD?)0$]_?$`?/&36(=6Cmd0c8`>EBL<K\0tSlm8o7,D$?O`^5dP@;i%nVlo\8Cg"l(]h['lrUoa6G..ueY^YQ%.FUu7B<gsHM3Gg;*J[(Nm'_J[X<k<Mm8q#nP1k'">f/(!CSO/jV<!WiP"=RZkL_Tl65:=WXC74_l8$?/.\>);03lIh?8a!>QI(r3%/>,WnC$-*>T&]a:N:0Kfm/+Pjm<9.VE23p$[r)#XrFqp9]='92@AYa/D*qq_]aLK@aLM]b'-j36SfaGSYg/D!*%<#j$7/Vsbq\""%mVO07M+MO**Al(m5$OjiZ&OmjddDa`T0.]TJ;Ul>@K754n<I>OFR^0O/S![,E(!\\/aiqVF8FV#Fg)(FQnYK/)scTmUi(7"mo,B\%-6Z7Lg<PI'Jg;EC7$5rN;Bdqf!g,0p=mq=EchW%XrVn9qnCSoZ:S%c<0lR#toLp&Tg]KFD596\cVX%u:RC'qqh5Hd`>L1ErjMPQ)%D*.GR\BNh@oeOgTKSbWt[nX51%P>!61\WVFeC,5dV5YO>59<6I>aW7GFHjHN&oLLk6+M!OZ`5]'0bJnS\t^DCBW9guE2@.IXiFU/%2mZ<`IY#+.3?l378Fp7)[<6**NnIb2*OB:j)DpjdPsnX,D*)_o2tlft&c^O@G7XBfPQ)ThrI6!5V7)SZ@Z[65GZs+(j64,>hI^M,%LsM2^rX;[djkZ2#Ia][6ItcT<%LU`[&b3`I8B?u`RGqD4+_^;\1u7m8=/dP"bgk+hI>k(0C*,3AC(F6GDk?m)KZL4MZi!U[XfN0J%6g*6.1uEl*J5i8WS>-jQ)DC6imtu-'T9K82=,,X\b/WTjQ1("1;&>)6IH^5p6eF.HMABESm9$t2/ph/(5[5QW@+q5/M-_&nqT&=O%r+C'])3X%+;G6q>`-"q0Ao(m%+;6i[dR4Qi]:&X!dk%@1ah1<Zhf0)$b3s(E:3W/gR#t2IRG-,9Fs0t#k%082+Bg?&3&S,3G&n,'%<2.<+Dl`XY^=UaIdo<2r&'N:r/r9_*Bm_6"dM2$b@>D)qa0b&hdpu+6*5I.,0U4-s%HNrCje&W]@?Jb')9%@>I"5\-9bL47oWC-[%UI;8AK\m>-_<sYk>pV-[F,'lUFC9fVZict,AksO1aEU(efhBdiN\kr8LnSuQRo?Pn6jcoRg67P28'cf0>R_8T4WsW4J0!^"i8;"D%U'5`#<D3h][TP0P<3J(IN%7Ldk&Yd7jE$^Ob(!-XF6m2N%arY%AQS+XZg,;#5)3T8!6HL4(ZEl1SY%G2)l';%Eop2"RDOI<r=XU:%XdpDCKdK2HWgg0,1MOY'_AYJ,6G,i4`m;54V^emgU/ZB5dtTWj[dGG"T.'k'CQfq$B9pWOR$+]A(Y3.lL[:!]6DfF:CM5o+Hc#o-%H!P8[q9V\L$3gbd@5'n<-"IEt7&$!o%-=T7%r0)pj@oU_CV/<QK6mam9KSXt]\!oshDM"MFO4u#Kn</LZ5`,aYOL[q"ZnCZa;R)1%aa*V,1Gl,M0<;Nbf="sc+0Zd!mAkTV<#iMM`!e*hjf=lf9\]c@a=i)rAR93G3*s_PcnSoc>K8QGK<p^A.!F$>YAmulR$QdO.p&e\%\Zi]9#'.u5*EFdqG,cqD\V%M:m/.VPEO?g'hG-40I^Pi\r/3.%"FO'd_.a+'d*_EIjXKFkb,2Ifb:@(rjKUVDj:5?"+1<78.!_oS%PhUlhVh>E7IYKd'/F=j8Z5'-_gPR_&c!l%fkm./"A'b`>CM[@-=d4lBJ83Q7[duM0R*-dF!Ndu2VT^Bb5[EC;_,O"%3>BM^<g/b@%\#fdYONF\aehb]Sr97,r]>Lf%qK=Fd7U(&c0Sa0hAaDlMc:HDQ-AJP2fmD2GRjQNt5@-s>e3TQ/O<B+&[@)1qgnqR#Zk$G;Wa`g\%lXb+ee'!rl+pd5.D4Ja:hJn=Nm/-&RL35?=bY%N<"m[kelFZ\dpBMXbNh8ZV,$Ra"HCM:dB/4[EJ)k_u.bXCL#Rg!rH^Lr'PuMdA%Y%li&YdWLI45g%(O3Og[Chj6gZqE1OZeg_lSgWbXqgRs\5KU236%UKG,\!R5?/SAWBbl%u9m6fbMX;l7q1Mm*oP667+g)T7:hU9?%YWU#a['mj;3d9bt&t%CE/O6:+]3dVh0aZ!e_.rU9d@i_Hp=Vnl@pA`_:%:?J'Nis@q+4N.<i3o3G#jP,e(0ASG.AK+[BY7/#P!lB%P5N+nb_-u5)s7[VkKYk>deHVa8`e@@HrD6TRs-7u9pBb'-hk`>EB^,/Vbep[RL6r@)ZZ'rM@6ZK<>60,%1QDb.^hX;Vjb2h:^Q`^%C[F7TCE9N>f@I'k.N=:14EooUgMd+(QL*XiD.[\[9]VDX=5WB%0<;PBQaGGgKhY/8`7[BW5DL1WZ<T.>o&/F)U+AqsOXj$A2?J)2%YAd"6CSt5N.a^Q\4q3_jZ>+D$NZ'HfTi.\L@Sh_P$),[ZMk,#!YWU7%?6PYUaXYQClO`aY,PDRNoBPY0d(KV*W%D9Nr,RFGpr)^8%EB9.7fjW\MT;P@7'9uhENC^'Sa4_i^C`u/tl!5^H5sa\7p..5]f/\Nn<J5[7So(rRKHkbLh-/S/%N-,C*N\qO2gk5)1CIlY#Op/u%(,s?.FY@f#IB5HQFW*=!`?NHc0"s+e@"=,d^YkJ*aiT;hd@?=#-$&*Je?&;X*T9&Vd'J(R0Uh4TW[rh3_n<(g>>cqOoPWeYe-K*%%QZQs2ai7mlLTFLiCu<NKOpUD0pYE7U3B6bqWAYs)E519BJ6f(u'(Vpcg9!ff?%J!-"3;#WmPn=9Y@a1!'q5jc9Qk\rA+P[g^%u?m%d(15N'((*prrmlL<'/;#,BM0ApjI+>(/dr*5i@)V-6_okNDH*iWIRB3)ZbKR=`&M?oaH(P:f;;*LHNbkY'S:ECH4DlRo.UZF+tVq%GG[i3G4bpXs*gIjN2Pmk8h*1hn4<NP$t;e=6<WKSrus/Ep;Q.Ip^sj@[uIgAe':1jnZOFs]g%b=h`j,++7jkCB6iZo'"%8t6SJf4%ipalTl6A8I)KN!kcci6'L2@pH3HE!aJ$Q7!-3j\@=g)4;3oh%$QWUFEd@W(3L5QZie4=/'+P+t"-1nXf=mgY+f!N,_qp8TXBjP%\%YJ'Y>l_Rp.$+Nh3pp^#s@JJ1=PWt>)hchkK#?81W4SfR.!n3p*?HnAA!>6W<?Ho<WWf5@QN+&+Mo&5b&<[(^-TBS=dZ*H2DNXO',%?![f<6^afG9t*;mF)C9$CMlK7$B7UlLNB2sEXic<QWc<HOAI%3`^OZ;3-9`/!0Oh'Bn3A.k,)BVqBStgUmQZZ"5O9MI/laDX8__H%=8XKNmCbB[5K6V4W&]i$&ko9bogQ9bW&U00'Cc_>-=s8%[Q^QFcVsj'O#DZ.7QGZt),d1QW(Q/>nf.u@U0A5-GMlAH,)fZTj)"sW%mPpIgq(ku$(Ob:p)I8\mN[+K<".R94_[if1YB=f2j!UaZ$cZAi)&CKk?MnGGHJDHf&*Ei45FG6ALT1E)`3it9RNE0A9EWu;e\gE5%nko[=ZETIjfaW+$O$g*`n&fiT2Q`[;<=REhFLt1coXT%-6I/,Sam!FooTP$.!+P"NV-i4'(m5r=Ki&YjnS^50DYZuS9$/AWCdBJ@%_/GKkb-+;9Bb,=]3mb7gda/um#X^>Ts5-&VJU,r;)!582`tO=u;T>sVi,9/c'gk4].Bd2S2gqunp9UV^ZVCD9I2b(1ro-KZG<WH)%h=5q:qX?W@jV>VXJk*;oiNs17F&2E-FP4pu5Z2d*9Zh-C3LB8eL<Z;B=91pf!@5^=h%L@IWnsVoV;4@fIVO55@H[)s[_h]&p?^*j%Sb,gsYiQ>U:V&J#Yk_@2!D!_)8Uo9g#M4.?:A%7p3jB(UM>l/DgUoJCIfD9paBrAu=B#Ak?efQg[[N&%>_1,5Cfjk?")tMa^bFGc%'O-V&(D77A50.`DKKQn4[R//M^$'Ql(+;bSYR[K(N;.S7OL<rWCfc^F#sf%)"#A;f$>k1q_Va9)jm"$*N7G(manucU&6]Q!"PAHX%6AQ\[SRlK6PV]L:A-&Y@N*q9Q$noM\=/-0@nH6(XF^MbRNP>*Z)bFN)@"^_c2176TQ[%aY[`r;-Wkg4(q5<d7pAl\?Cjh<1rW(i*%-9PM0Uu.Z`G9k4VT=s1\O5i;PkjOo]P'X^SO9!^p2[6BD74nY/+$EuB+rACuD56cA'*i8$g?Qm0+K/KB\[YjQF+`O1i@]7b`9PA5%!V/IYCc(lNc#n'3RO@tcqXJjEdhG1;_T<sL@U61p0sLDk5cn3RC/sKX^,<"T-N&'D[TAM1fD$s[Xf$=AE2C;gdi"P[0O@+FIn<GO%JlE3Cmmmjpk4r,)*]a^]Xo.;`]^r,ZPO:U%IDJMu*2]!2kruf^5j3td3`Ftdb-F_>#Yodad]?*iiqXM;6Hp'5\8,V;Bdj(H%kD<0%66\?],nU!pLZJlcQXo(%LqUa9Alho+5tQ,?*A%qiFX7k2l]JO<PQ;d:E*uGHITgk?kDbqjg'Rm8FW@PoR/Q"Z:n^DOdH&ce:X3p4%X^pES&0Z!?&mr403DS+(BWr&B@t&<NNYEqBAlIg2\f\n/(3l5Db_i0,YsqQ<M;$.dakPUojZVAs5`7Pu*,60^+N%,uo$!LtC7>NS%5L?\ijBLZ$5mkafkEV/p:\e<Vq,uU%Tg?h6Y<CLGd]?"/NsqCp[Oe>mLA(TTpt,K[C2*'ApO<StoA>q6Kd4Ve\GsmL'iE#%LI(as%liLj-"ho?:P)E6!ZL'!l!:20&I*m7Gf6:831(.n;ko4FohJ=-FPL%NW8P<ME<4K0S!pL-"UCbnbE[ImRlbu!sfI-!2-<HNSr/nsl%_[bO9,T<EsS3hBU=g=8)Bd+B18<mYBC>-*NG:kpuo:<9XJX0(hZE\?j-"ufgiC3WSZ,</@$+ijmX_rV6&@ER->:nIG[caBl;d*R)%Mp6A:^@p20iCH!5>MEmT"CKY'?!8K--B5d^.)Md.m0s*b(@=Z<[<5g1F=CjG4bC)HKu+T#Rb%1FBMjA:KtB`k#2>sH8nh&-9X@i^%@Rhs"->GKOM6`CJnh5>iPKOKMEJ02D)%Fbo4E`V3b"&8RZ/nV3.6X#`f-H"7,<Gr5b'crpdAfGN=PrkZp;cuG1@aCSGHrJeRF5sd%-'%ZN%YN<6YnS0@O*KpQ82XaqDX&6jC<)<8>.YMOCSA2Ro^+/U1U_<m'K!=JD:Sf<q[g`:o#q.nU6tYV=6^s_<^$\.W7l>1CL2.$%qS1\V$tQ^#;r^":1J_;t\b\E4X(;t*Q&E[u,bV@:pthAmT)\2-^CO/e]`7$0G_)=`qu+;0j0+uLMq3IuI_t;0Hu[<JF#]hF5N0@u%h-\RP@09B_pmmE=T-)qGV>pN\!M`T+[jk+K.#&"R4_utA?\nLT`s6/h-(^Boqn+,BLe`j:p67_+A,kSqs7S7i(K'iIK/<V)4<S14%-Y5SlULIDbORZ-rm$l9!Ho.r`[OGDCPnoH!-IW,Km?d$c\(r9&AlNJb\lqUMob@qG#baNRg)+nGGYL<r]1SPEi^,+5c%p+\Y\$i\%90k)eZHrQZZ/IeXPH<V3,JaLja5$b/Zdd#T9J.F^W`M$HTE[^hi]#^#P`s&K1h8,R$1FgoVT?eQ#R'%3Fn0oN:ta_%C"AE5;omLu%?f/Nph]j2RY5OqE7/#opSb4BVJ!M.:ajEY,XnWOWqdhbF38gUL7l0+_q@fhF3D,TfV$&%.%WIN;>sr5cT##lk!IPpN'./[0XajsK%&[us__*B/(pN[(Q+iu!ElubBEZAISWcRQSU4anfkp1:lrc>S2h@pW>6q2/RQV$XMANih=Hdld%_hlnJK'F]bV]^cq3]#3)e08@)!%)3TV/"iUeZWgie-HcR[bp34GC;FOUUHaUa^0/DQKGARO)Y,.F-al8VoIaFuuD\Eu?`#,Rnd<#&i4D]k;fnmm=U6A2]WEV"A+;90o%FtlW3N#+(iN10t>5EV?<a%KfO48l)!DF!CH5OX0"RocI.)]0lbH"Yk0U4hZYHah`"?-5II$bJ$W/_a=UT]Aoeojrblkl,Z]V?<WZ%FD*grdjo"gHfi\BUKb+P)rTZHokQ4Mc3n^q00a3=%,i2OUc[p!fRu[MDpDj/T4U\:>Y%W+6m<E\:%a9A-&l[3@[+7aHdhdq\LfVM%)kT?BD`m:*7Y<2+G938C^ge(L)(a?l\IpU*j:E.g(+,H<YTBc8NO8";F)'BX?_4(NHr8!Hn*bZo<b'8Z-P9\>:`o[V8>?f_H]ASl%n'?,mSWYMd*c*c6&cfG?9"UiO;Nq2t8X]`)6+A(-aDlA4H`C6qlQ#^ug1*\/SG=p>4s?AX)h&GZc?,,O]A3:e*!=ui(cR#D5=0-S%Xq8Vk/ch#?ktS3YZ)&F,g"\L[45>0,S\(_:^=31/*o+bXqJ95]>%8fa/pl:h?82&`o"SeK-u-UOXJ"sY"ZE(/*6rH#oVW,H_X.'<%)1$!.b"O9;3/V0/Ca;N(g=bCqR4BM)5I:C@XM1iu\'*uT0dknULdTg-+GUAH^oFi5@YJ(oHIP,G_a5bE[LRtmmE%%jNQ^sOF$/H>%bUu^"a;f"[Gc8DC6pfB;C.4\U@L\;ZIk"bejo's=5.IQlIlGFYS.DocJN9W)<ea'b+sf["rtrO\mt(cPq$W6m[ffMj,N428p!t-D%&,B,[q;Lcl\]=YR&n3'G:9$II@?P=?Q(7^ufciQ%CrAgOQPB#r]b@=##j"knq9Z/4XDVXN'$;@Q_0ol(Y`<r7O[#=pZ\"`jDKu4B%O$g'gN\d+am"D=^c-SPsn72j)A)0/=_\[HOimNqhpD!`Zd"gETBOS+0TrMK*#g.eeYFjhSON-!r\rDs4!i8">p6U,,,:-,d(T0N*%Q;+-kWA'#@8I<r.Xt\00<a%7(*+@9pdeQ@0O5U>$p<FB/%R9qUe3-adN0Id"fmV7oape0t$5ZOBj8#NUPl*eep*%e29nc'aZp^]8%18..TG0Rs%pKho,;8lge,,8>*Lh=X-o\:M/'b7(th6M_3a!sS)o<?i"aK09*Flb>2Ok;2fR$mqhj,7hcru4/%9`HDM$/M(["\K*l%:Qd*:rfH$7Lok9f1mZYZR#@Bcb2HCd/aS(/,#lH;bknL,\_Z"E,F9IWQ'n=56lHO<$FVs:mZ]qred[;qrN!eQ#8\otHI?a<K/O!s%PYmJLGu,)&@kXn,U&2Y:9)&(_acR=I&f,]DXqsfTja78K9Zrjj6t]087EcfW0&s;07qIEgF34-BA.J`q&bJtEIDn2lE[##^/tMf[%,g'+=@&N>Tea87:-?*+kq8e<i]@Nai'T=K'844kDkh@Q_Fu')3eEs)Vh=^i\]m\;\G0KGXiAcoe1S;^BUs%TTHu*X,A%C[WF[7-[%4\1W+mrN=lfo`,2n7,=Eq(RGFp?e"N]8fm934=(SZJ4008Cg!G34B?QrN69V##(L"Ssi.$pU$?uLO>lHa9+Yd]HlS$V@9u,YQ]T%%O_ISAk(%m_-VDf-=l(>pF6K6(h:i+^gaWrFG-#>Fb:O,cch2F;#V=qLRn^o2lAnNt1Y_a(2gFr!r89e#cBjth8Yi6fchbq?M5G]6%`V*IH/"fWd%^ob+2W!r4%o=n..iBlt1WbaV/s'O)f:T%H8E+S7UK/N0]N50C*mnBK<f7eVkqJ,3&K]jXpUPHBPa+[Q)Y5N#@=C`7%i-lkLRV^R$Nl^;Z?#0@K(UKX<(X($O%2Ugc4b#AqNC`'qG>MV[mh_=%4uZX)a$KTBGdmOd0-Q(H&S#]95Y=5*2)u.,^UNr)Mf=GZ%FK:co_g7u6fHhHcbET'cSpgtE/k8]k82d\l]/!H2s5R(:Sk0?!_n?jI[@<_?f12=eU:+l^6:\h)9Q/ooBn5`0%I$^p2'+2<\p==)%LWC^Y9XbgNKoC9HS_*`fJto)@q?M;&hKcC[hQS",aq:_*0a[-P.8<7<V$WjEmCq/[SKZITO0Fmc5Ac-KKD*)m+;9HK'UT3Wf,Utj%]piWKOKe$1\W:1-0Yl-?p]5IL7)2#T"<9L!Uaj0nZVr0?=10Rs.r\pj=W8Y_8`;U4mSKoBK'NYPkgGusE-T1_7h1B4]95Kh58+gN%XJ_1,__Y.,]:YC'hbls*Q<FRiMs]:]T*Yd]\)dK\p.^'t'YZ5tb1nm74"5;\lo#aD!9o*<U_\B=pN&['Fnt!Z"X^]M)Fu?f2'44,%q.6s3jt?m3E7,<iVZ:aR%Ft@4;J)^eD*J;keM>ReNibkWnIIic]65BVqSU!q@*cH7fCn(XWU\>"]CtadoJeX*T^^SHkjh&fZn(Fc%Q9B*C)]sjj^6q*jg83bZm]pL=h:=A6rI94br<.gGbNL%eKDa7(]R9LMV/<uTF%^;ejW>_E;>*l<66>RuC%2d;F,%&g7*jKV(E<#O%Nf@PHcW:F>lLY%I8S>=SJ?=lLXOG=@h0_[Af;k'Tfl3K]RW>mGhVgAWQ)QrOW53R/`q_/6q\h*aFm?AOB;cNKNqefnjgm4\:TsY^%XLB6]:ml[h;>&+m!JgQ2gVCKO8?om%Hs*>o!8)MK$%8pmo6]RiQ2_gSX:+b`\t1OXN5bbrFT]3b9?SJZ-*h!fJ1?.+0u7;FGQq0Y%$^WF6_E?ak+AZJd(I%A34jB#EJ,:<8M5ZYT#%N#RKVVs3hL!09N=l1GC.apojhNc5Q:>leK>4Csjs\Q-[--h#2qiFl+&%PXI*n;(%c*LVT^a="K0CGDNi0KG:B,btgmNYr[SnsLi#_*0!c_50#+p8;9[K6ZJWa8Y+4CUC0,bK0AbPC`%Le4b`\VjqOS,cnLk0<eNZE;8-%r9^/j)-k5;h(khU@r%ssK+;0bh-8pJb4q?6#9/NK91?Vo+_ndspF?kmp:WE1#ZCS<g:=8ATX@+7L@#^/?IA<U0R]I$]@Zd3h07:n%l!1aU=tJ_uZg>HZo>a-jpFKp+G'.H6)3'ln]![ng$SkqW0lA1XP6-#QfO'c5`PD^s*@bg*kLe@S;Rs7sGF\RL[(!ploZircj8\lX%KsGn8q=hotWRdpJ'"_FW1S&Ql&s;9_`%B>Ig)dC.kmZr+UgU6Ojg`$SAuR,gC+XtZqa=?&_Ap5`T%gkD/]GH8"ijJA+`&QgY*^9S%9u,TK</kB`-$m@6aI.5hs"15)%'Lec35nrP$'XPO!uGMpMgCXrr9I"'[;dbH/%E="?HMika;[e/ps8\hn*f`>JM80AWmdTk6a6=(%MG@?n?:Ki8&X'ci:hh_Qq:8N:@M!F/@W6iBWXFCETu&(A\mhS(*Z6PQg<8KDeKr%L(;QVNTV]R0qAN7#S5slpSP>poFl]3([O^`8%p0"WQ[F$Pb^?J1!CC;SB<K&_<@,:.7)0Jdda)jo"@6jq/P792P7\u8`f$/*M8L^D,T_d)&NlbQ7;bar7L22fT%YV[=Y9LZCls<Q\%X!&1s*LoK26"#?jr[G7qmO*N;T:[8]:Mn.g`[c/SMHV-N7#+Gm(lp'eP-GjQc4r%S[pSpT9F/N+?D-:$eM\r+d,@:_?0g-44]m7g%QqS`n(5WYr>7h*2<b1Of&=J+5oPNu3^iYYaiW_^KTQkcg;EO0QV#CDd1/,u[)QB$PKG9VT-Z?To>dF50)geYVIEkk];Qcsq*%$M6%>6E*bAEN.jak[`+Yph-Ng_nm62MG?<BnL-:),/F,V]7$r&oIhB?e]e<fNIjp_Yd1O,]0eI=X-flUhWgFD4@7C7Z5*mBMp^;*V?f_%LMsVC`YFG8]>F81A#f8V,GnZ0@qr9=QZX:E_fS-[$mI#W(';?YHpN<h\AWLI%e?Z`R_o5FcD>)TaB:Z[S4-N+F@UJkU'1+J#rh&R%eF-teB12]3fg0k"WCT'H\^e5'QIGeS#U^93WL>.1#=[)!#$Xg,7M^r$9h2Ld&&(jb,qF`KhRH?\PIIbgPUsp6D!:pB)/&S9Y`>Jp%<@@lH67pn,YA9U.pTTGebGsfD`[7*@e.<0H'_##(8)it4H\8Jk);@:N^9c0-CZ/j*?3pfJGsE/>@U&c]p@Y8sZe@+WI?%g8Lrn'N%5SK8?U4>?IRHiDupS4hPaHC[Nq/A5UIC4J"I:"m#HMRiJ>Z;t)=no]R_=fF,+K6Vlp8#BbK#CWipjP00Iold'#*4E%kQ;a%cqo1J%2/r/R<El77f;?lEr<Up&rg=56T3YN&`T"1hXupfe*(u-i$e:%I7ki&ZRM(<2"g>KPdrj$$Ocl%r7V6V:!89&@Vtnr!b,MTH?:[&+%CappH:c.5n`g+eW1Y\i"VDb<$mf3LW(sf<e.$4CV;=GN%j<Dh_as8=%'s*3S80<L:4j;QE]J*T]Yi^D/+OHZilZjHS:Blh(U>c'k%EW=u*]c>:85nlQYS_nFXiIfk11s+5g*h1cLga+<W5sOuLPQ08[+o>d;;AD@l\4nQaV^lUUJe.8T%]=H2#(QDn/)%]O=5&h6CS#77%@GGjRV721_#q(>qO.FG&M<m?kG3&qRggFB&A'#O9_P\o302":R:cH464efnADi$':cDJdRS1Vhn61VjK'sC;#kddr<m,_1,ab4=l%g8>tp_^[WBEh$2I?;nAtTL?h"V^R$S4+WC8?k&2Bb"%/*XLiJ9;0A#:=$g<4o'a^%;<L):gPSgc.[J_2+MUB1[#cn_;i=ko.1*S\%8st70%k&.iR4Q1@5F^Zc05aP!TDaA-YYT@GVS^6:G1HNULcaa:fIr)T<Tc?L;:<Wu?r*g6Ec,/t@=h1J8orb:>M1+u+Sp99..Z%^%Gi$`Zku&Q02tr^[KNCh'c:;EIHfHTQgW\kpqq@JK`_WB</d3u8M+=U5C=6ti9Y"&q*m\_2+rEU5LYO-0k!%b7(nSD*.@!uF@QS>S%&)7q;1)BT8pF>UB6XEIZ_L5jqkMhB1\2st$c\d62UXAD&:dW_^N:(bfXr`_5rht35fh0meZ(9Mo@r[6@5GSi*I%Wc`_oX8_!M\qt%(4kHK2mX2nc]KHTDK^+NQ]@$6D';L\J9hSmQT2a6d^I"S<LqNC<;*OK>cUB?AZe?PZaq3.q5b)Mk!]?:o?M:Vg;Gng?F0'19bak.%e()^oXcPn8?h89F%5a;3nt(NR!jlJk@0`pNh%2BDOGd!LTho#qq!N(L&\Y_$I>a%)Vk"OR/ceIA?iV/iGt3+L?(\m_@$s>PE1Z#;%h-J<?!c&r,6`lV"a:,Q4OII:ec^`\2:P5daMp)0HEfIB(OJ%I,8@*!sdSq5=aiZ'G=]k)[#`-Z$Ca>N2P61.I&I#6gPQ4=e#4bbZ%Q@K?:.oH\l&9UTn/C]eg]*d0<\_k--NS"nZ[<m_=E=knB4E3@iM2Cdp@K)F>#7$GUO^Hcs%!cNs7Y1qTRQUcoFroG1--CTWjW;0q%Nc"S"Dkq,S-B:bfqWF5uE!'J@l%Gp\VDF(3oB"\\/U?aO0"/"r[E9#/;*PqKH6p\-G0O=[n;n7C3KAo'-oX-I36GY2i$]K=>&:u"%l#;40n0o]C6i(n`WgcD_LH%d9dj^U`]\&I"C%a^>OZ7+^20`BfNFNncUCt-Xf8=:jF,B.%4bF3GCS^5E3D+,:R-FTQPa8$VA-8sf%Z=VJoA@:su_cD!pDmEC6\8d%uYB3SuCu=460R"Ef'9&i75,/#Q'oLP@@e6*5.htHGF75U2_RXT2L7_fa+V+g$?=HL+`s:H%\`ad.%;gLXI:/KQth]l\d\+s!)or'-mcK+(/IHY+D'ja5*3(W@UqhIu_GrB92b[NSV!@gbmel)X2[?EnLi5fBK@f['tdrO.RR6q^8ER7eS%MO:%!B:5c9!0]Oik$RZnXL-->p#iXj;D\H]Lo#3Vk,N.ChjVES*&$jc!7!u@l'a16`AcZ-chKU4dW0gOoD`b':e^Y8K`OJV=-SF_%_9km.lph:T1BJ)@A@))5I#E+QCqRW7=\i1'QYi*F.lugGdND)uQ@9>aGo\YQ<e^!b/_54E@j,,6>M;3>O?/W\V/=#f9#THCB&6an%%b^>McKuM_:G&E4%9nWT5eS]]4q[mSX1[4oKoIQP*8NuV5X8QeT8Gi8T"NjQ`R.GUVfRJT=)r'j+!l#:qTaU*0/aIhS#]<cfkTRW%aFVi/CbfCgcH[3`,&S@0Pr/K@5q5TigGoH"84G+(:gFZ%&J6AXZA[J/K4'qcp$TfK2m"2QkC?Kiol:iB0+KAXF>W#0*Qk6;Q=l"(%/Y"MZWm+cL[lF,Z4NRB4SO:/.?N6kq`G$7FCmPL?in)Lq*PH9jgaQp&S6.jYo>&-`k[QcnU9WN<F8-PrS&gU:&\%#^pf080WBbkW%;q1R7XMAM3MESoCV6EMp1?YE>j0)Y_?J%Wj#]A7Zg7%kq!KNr""uM3nY:I^]#4H^ES7g3Z7HUdkVC)H$-=7(V6)t/9.0Q#kI@0Vn%L.:i-0VWOPPqRZ$HXPkW^V_=p'K;j4U"3fqmjkV&lUJ&is7*F3:t;1uKE^8Y:"6Aj.dS7!C0d;H^I+70#'AP\L)3Oq1u!g40f`ZT%+&AmaI3WcW?R?doge_S8c>"?A=mbG\q<LrS_lRGD5]ds=0+ebObjd/OEO.JCm3Qt0<IbSH&4Ssu7IABD<k6b`:`Wp>ijL$K8ZsR<%Ak=jr:]Z5bp@M3Ohp!?V]4V6YpEc(d)?&SH:K+03=J%3W<Q]334XK<H:B6`"a^\QI%r1m]'<JAWIO'hC);82<7C)AQ>J@*::iMP9%O.742j/^An"B$2@!W&10`$2jJaTY"&&,u.JjX&r+KZf59SdS0s*d!'Ich9OmhZ@2$Ug:L0'"pa'"r4FD+#Ghr+!cVR_BQV1mMJH;%WRPF^6O&Y$"[m;kUp?JZc!3kt;l4&VUpcjS+d.)Gg)fbX-%4[tk?<]UKJrYHY,$_25_`Z%r)fJQR<8,pKSd*oFf*FHA!A@QKc[P)%eUS2O%p?n4H^=SI#^.1]$hAH5OTh_4AVX^L&t>K\F^j+uGTbbVX&+a[*`2MtK"Abm*8$o`g>4d9iQXor'%9Ci!TIcPlh.7.'Du1,%MdC/SQU5107g'NU\>q>PNFM!f+7f0Uh8K>+U+"(M7`VGBG;VJZo(?*(7iIK)mn)G.-PhA&i98o-iaec*$80SOH[hE&NHEe=E7EcN%G']7l=2^4+Y#O]Nfsq6*8ZuB?=!T_!(\@AJE((-jp:_B5OGB6UT3O'<P)%[&cLT]^.4sZ2ICr?E;pMtDW/`[P5b!f$=SpmfP/8WC%;F/e/2=&P;!"s\R`7H`*5"FNM8V(Y#+r*<N?B129cH]L:54Z4._rn%H$W1:KLV?uk@Jr%c)`$qMGaM.eCuort'k6Hbj48%T\eHS_%gTcsTV%%$*PlO:@^;lSY[U6H0p,i/HX:^W-YSLlL7jsbJ%L!K27tChm;M#^F\LsAE>aMo9nb.e7YN"8ph;jQ&W*n$iq5<f6?cI2-%H6<muF7m1(\E;8)W3h9A$h[CnF$r>d&EtYNJta\i&bi8d&`Y[@"$FIS#.8V"^s=&.DrnI)]:HB.>mYpqhOG+CC&"tb9'8fMEUDgX%qA+jMjs8dJR3X>CRsk/O7U%-V$%:T*&#74Fk0YMX]*IatlirR!/*BC"&GnCqd[A*Y':L-YShXO*,X+8U?7cMf]=OaNjSg\nebt9`%.eW!kDGsf?<*R*:h0<E`M>HUnFLn'iL!Uc[R\Ws#a++t$P;D(9h'&ae2hj&]n:9bZ=sAk3nmQJ+`4'4No<e6h=qas*%NG/_B>b;t%RcY@KebuIBYr)=`lY4;tqk4Eb4YeS:hos5%ZSr;c06P#NbTkcB+u!Y79@n,H@.$,!+]hIL=WYZFK\VU<@3pCdfnfJ-[A0Q&dSk:`%s!^?,7d*M`>\[Q`bN:#__Y-2sQ8d3EA1.q;&c\`G#AkLe67M?Rb(C"rimQ913i1r3#-U:oR2A22\0CWTI8hB"*@khgZbtOr3h<\M%PmkhR#iOIhr2IIEmD7hD;9)L`/+XV`i%FQ$b:#G4,1PG_]Ei$,ih4sjb>67G3DW]h[P[Jc6@mi7216tS[25a?MPYEZLDCIgqJaRL%7O@%L/SLT?,AjWJ!NsTEbBU44,L<f6=\F3Sf0nMEW)X$2iL&.Nk`7CnX+p+6q7_>+^+o;I".Ig+YjZQ#LNaO&`;q.D^%FsX:heZf%3S`cnk$X'FS'D/uZ-BbU4,3cbaP[Y:m#hpS-\/%*IL.>h7^PK-V452s*mE5)VLg"4(e\.+#?`kXBVe6c883Lt]!Y%(.u`<6jNLj^%4oRCr%?_E1:Ha8@piT%L*H-/!Q1LHrY2;bV\;Q_oRtSZ:oRe'>#-4k#`(Fsgp8;93pLB_CN*UYM"JqW-2(nN;-8lfg"ArMfo+70c%MQC*]h;WRkD4`rt,CTG-j2%>J?=s6#V;BO\Sa2)43*k%e7=[p@`BqsABqJ/HCSfZQ`q":i3:P,UT`FmW=iiRaBT%?;Bnh.]d!;$D%=/((Kr\7A]o:ioGmnh$$!fYQS2G8&PZ7Hq+_6W3NU>ci$5I,;m1ILt!Z74/#A/oS(:"Hrpg7S1NpEk$k5Gj\<(MV^dB03DCOe#EW%nD:Y=;U^PSm2i,T;+IV*hLCY#0q$?A_;GNi=)sc'coccH?*Kt]P8MAlFJTTlYoLdY@4JWe<*1H^6%]-5k/jm7mXfiDH/P=?s+=;>%+7!_;<`JCgd?!6UL4eGIo@RJZ&s;n<\>7r`.jhN8R,YtVHe-BJo,cj1[ZgMr+2\dd%1rqI@0r>%hgQbGHg6@;;\BcN^k%/QM_Kd.%Kqgf.^.j%0>-H>+DNuKfQkr9X3'c3Np+\.=T.eZ+q2M3)qt>6$<36)UFO`=:Y,pN'VYuGFdhV?U&&RhVUasRYL>jLKM\IGF_(D+d%ZE-Qh>.?okX*cB*n89,1\PPaa5D2t"P)%QYhgDRcTCnOK/5D,)9"/l!g`n#FJiX`!)]F4IC=cHJ4fAgo"Dp"i2FOR-['n?&8W4hj%i^?l1&d)TtQl7OFD>`B\/e!uuX@jI(8^EdF#X3uaDWoqgC:=?RqSV@ml]k!t>'g(p0$%C(Lh$K0qEdd)C@2mt&VPRKN64])%hoLm%IM*VE/+rJ10`oA4*kde)9;odu`1ZHd'IT6mhO1M;N3X*q3Fj7Po7gN3;U4J6p1C->`n.W9UFV:^9Q*"<%@LlM0f<spmB0dr2m6:C%T6lUZWjkr#ULAe5jUuZ=2bL)&'-3sWHVEgAk>%k,BL:bhS1L%r,l'o6^?@rDl^7ADU=/.A+A\GmaIC8nrloDsq't:*UVB2V9M7Yo%-<-OK&%-RVgW3G@VHO*bW7&]::cC3fVA;p#3qFA1Ei%ba=.#]I0(2`;"n0".C=JWMSL&SA,iTp][#%>V9m-mmB#1aY,i`WDAZN76%(/Qq><e57\$FiR.kdZ00Xmu_$2i(6IoYBh/_bN'1QnUn;k.)F[9L+`H,m!oLS_#7Y?JqRm9c/'!aU<Jcm+D`6>99$Nqbf[9-1N0P%6S'4s:5CGG\K1j7MHR(AO=0b(8;n?HpSMCH9#FN(0DcO@.O^i6#*0H=,?fe8IP#,;k&%Y.J2jKpC]?7HF5[DZj&SJTPOUfE\DDBt%C_)W.7@c>=aopm$Q([X(C.b[Bh[Lm?T\p=>PKWfpZ:s6p1%\]4:V_Eg_A*Y;aV/*Q.C.%`Y<PS,96_\a?!Y%@YS`Ls6<6r<m8aA8%k^92!$.r7Fp(>-W'kWR.QL%Js#^4V\EPORS-&,lOUs$tr0!$3tcIC;lBj4%N0i/R<r,sCbYi:>X'+<t_L9Gj'm8tDK*#BPhL;JbO%oG)"LitNb"p.3&FP[j_GU`\s58,RiJLM+[?,n(AaGP%4XEZ%[)L[i92BIk])PYJ)AQ"$>Cg@UYWZDb^k!e59:alAeU3Xj;4]<Z,j%90&$926Q.tpN0b71g5,!L*20/=:M]k$YN;Z(.l'sa[%3%\nk+hlUoVB?NGWQRXM@%28^VH1rNhK*t.''f?sTfS"u`dU^1M]i<4u4%7:VVXi+9j6FV$9)YeUAr_DXj7EP6CdAAr-$#jLKZWtT5.#h5o%DRJEp-,If/SYt[!5Kk"Y_9FX@P[hoe+uL-2)%)<mh0\_[&kqV<%rAll@ir[W?>fQbkb*G1%i/m?.O'C$DLksb_UA(=/]d0PEIl"-Trs:IrWR<51V@a<gO-ocFYt(f@R*ru(k4&lZOB.m?9nWW`]VNf0%mY],t.iF$*i/Z(:97h^[XRA73(]Xgpf.C0uLn?YCG6BjJ'r$A0EU:[oNJjO+".noN)Te6`?q#R((5UIsLCJ<OX.^R-@gI8(Pn0X3%U]H;$ODHGT[Tt;I-n!)48-RT"FCLQQke1RDV4[i_j[qOrNd)^AWiQC6I@_mgO^tgJk'FHt+S-i=AfqtlZ^I8K#s-T5!n$mg0)mWg%>mal;+RTRr?qQuJ9p"3i@0eJ0(0FEgaXNtk%M:l[gNQ&.[kbcY40P2Q/)0iJ&iIf)Spa!09k+DSN@?<'V;9]7dnt^7Csj\M:s>Kd%#2Q)8*G<FJWb3X3T"$Igj.b&a_8<$+/1_]\-&ib5](JU5N`/m<(WW=`/I*5cqn_7F8r-0_O:,H'\ifsX?AN_meY;MKs!Dgom\*PK%ZfCj98[O;qels6@j#;'kOZ"2F_@[Io*onoqDMl?=Ujp?o)\8OXdisd[Z.rDnH&dC<@&Vf%OEJ,oB[YSu=hqikF88g$5*YmL;9Kj[%=.?/J.+-?\"o0u(g<q1%)YeWgF<\?@f6'-1!YiH*F.Q2=<14f%2/DkK,T3pj8D5-6][e-2RBFGP<<?s%WO(=s;)TbemNT!3I'mg:%^1feR0JQLkq1C-H,sZKoWo9R]PsX7=Acdq#k?"r+:AS2)JaJBQY+b;#)U"0C]>q@,O1<+]l2\s"pXMe8i?$82%9YY4S%?D;XdN#)%Gf5RE6VBb!VWCRrFBijt?nksX-k=l:C&jMU2n*$q,9am1)opa*RZa.J1#(+MY@N!;CsehFnf6.%'99#4gQNt!M@r\2(*O=mddY1f%l8Wj,JYQ+VE:<KE)Gq9!]QBpDe1q\m@[,>f8fmA@W;+C]q363=,/rQQX2NcdV)IL8h^gq\!]pgP4V$uJ4od71JB9BHh<1E%#&qb)%EsRM$I#"_"EK9WL%VMV[Km>Y`GY/YBbldsiB7;o_S0]pb*o!GsOb'jN<-F=h1%_LJaiC9A+D6i!.?DuCOMU)aRS@i6"ge"aJ[al;%,\0ZphHpJ[NPNP/eW(Z^Q9:PFj_-Vl[9g/lU=+d]Y^fR8CCS^j>#tu.,ADn3i4Fo<Mo96EGF,:#,D:&:"!@4kIB?i.E2abkQ_)Lj%!F!!f(3-!MmlRqKH,J5H+#.T=AUKk8,9+_3g,$/5oM^T=!3AbbRLs%jC)5XkG#L-ODHGXm/)]F=.?cBo*"04D>p#h*'j47=`qupE%f5Of5OfVhdYd%(+E8Nms"A(\cA"/4.WV/jeP(4H#8l]0pCC&EWO!I-?FKDb2IUG(Po8-TX3=<Kbpka(s=>2=r:_ntjAlK;`',Nsj%OnqK'h;SOu3Vn6H)hq(@W?t3]B*G?a;!TqahSH!Qp%O[GLIpr<5j9oD`0?<B[-tDqp5JdLa#IXiWk/RL7?1%:eD&?B_bED_3ju:j%IDaQfd1?!oh$^_8:*V.DF6V>'9c-\&$#%gQZT=<RjtPp?I9e=872A7UdV.jDoFtI3I0?uago'sUkAro7/)Qe3Vu(qr.;V[N[UW*M%rg4^1@tS3+#1"h,Z))?S!+=69SNpi?ggdm/Rd>05NjP4i5/-l7C6L6piR#=Yn[Dlfq^g?[H"0[nb=pMV8Y<\j?Zi+MQ6k*KWO5(X%@E'D(e9(8Bh3GBOnqH_1=^eL-MeY[M\s>fI$ATK+]tl%hW_8G)BVKOfY.dhgBNi[-m4FHf6`9h>N3.Vn9VS'`Q;7RdcQB/R71,&s%BO4Q%6S>g$#t:+t_WokB,)1iKj/Yq5[[#;kA<FqZdiDDCRg'W>4`jN",Tf4IDSMEq)jR`\@M)>sS,73+oTpe@%2=6+7Io:@rD^Od%H>NOib*\aq+a!.$2YJ=!+#Vjd.O=]6l2FX,2dA@kN:[VYj8L?nPYsbhj.Z@pd9<19\Y$6FRFUWrN#itI)Q)`E+&L.`k*i\!lnKMM%ga9?6,_,G[1MF8$mjNg<l[HB>"-o\<B:"G8N\3C]BU:8MSa`$s6`8HX'Ui<qbEAo_A6-FLaSPL<>;F$urJ`Jq/cU3:KRQP\GMU+1%+"J?CG90dl+GH!uk5b0LQ?^J)FkGpC]"162glZsV7-7Z6/@;Ye)]fAVKI5_[V45-4:R.!5EN=1Z5p:HU(JqTgV/)`FWJ.Q7,*10n%oY;Nj[%i9?b[fMjI[3H2>dk/tr,N*!k6:di9;S3G]rCq%+"DEcd!`>qU:Ybt/-.@eOD0f'kNBrVoQ2">gFDOd]`r-kn30_YgooI+%Qg`P"g2jI(-K%99bf8G+$H'M8DSL!*8[k4`*d**\qYc06&(BqL^>`H<QVE.eWm*4lJkP#BP3Y"\+89=4C`67GY3&0SND\^h1X6!h%9gj.$*$d?+coI5>lC8]:f5@BH0;l*M\XDA#"Zl@Z1I>$RJq`[_)DT^mBNZCHL\J]k4@\#=C^FPLq4WW^P!cWKKlOtbq9F6_>]K)$%1Oftcq-A@I^TZ2Bm!TAU)S34_,XmlF?""V7/GbsGLpN-u.VH&6H0@LV(7cqBA*L6c2YKuaKc(D)W'Y)J)Q!k7%T?>?`+E`=Ym-oP%I50+#9NacF-eqJsr(s2/ob9eSH3,EEiAl$o!K`h0&#O<1<tj.Pab\Tt=lgI#JD#/t6p6S:no4O!-(4rW<@`t$2?E[FrpQdKYN?-f%aZbjD/=.K-s.2UY/BK(l6U!=93Y4JTG%"<O#^Q^^r(iYd>>dOaR^):mr;GK2,e!:J!Djsc_gedG5Fdr?4&hr>?$aR-?%E'mhd2#o%`rpMBh@?QJA2Y:'j/T*D8rg)fK;+^'-$&lq&.ElbEot/\ck6o/"rk/74j@Xf)\f:>Ha5SNBU1Vq'Bd^_#]M[d[lu6\=_)CY?cZ,P%J$S+G.eM6O8r(d%?b=MPIR5"VdBMGiB1;s>RJR!JA4rik<n2nRGY#rV.$l?Rdm[-;P:Xp:]Yc[u')*:Z#F1N?8\IruV('$3;7_;C%^XQt\r3l=sP(]$WR$R/K6/nJN/\5eB>hbB0grGi%5sl$(=Y8O>-^?Zi4du5]D%"C6I)LFdo9f[$>i0I;r)Vq#j>C"k0Js1Z=Ug"S%XNB(<7L<6A`Xkf%a@5#)9H<G@ng!73([)YW:9N$?cqO33=[KZ)FuO[,\uTqPoI*;)MC>Zb!D3CE-D5#)R+`ohEQmo?PDuJ)K$h:*%rdgjnSc@L]pA*&jT:%38YZcu"R-s/*a.m$aZK9"JHuJKMf@qf3ooA,5W*o84?d>P83^]cKUes+&0ORVDo;e.dZh<"\c1EKoJ6e[_%<tV_",Rd+g;6T5m@_4D#:nSU3D1/n67OM7lj<>hs%-hbHNuTfQP581n)g%H=ZF6%9EUMWu9`Y^t+fknd0Jd]Q\(qVqhV,6*cX6$q%hRL-e((Mi;Nr']**Hd>X!#P!KQ>s'`E`,)9mT5Wbla:XuD*\e#=GMsKhbYIVlGh63E?&2'[k\N+CLB!K_fUWTq4!H7p2^i=iB,8R%kZ&8HFVtiHPW<n./%/rkH^4YhCn9Y,G[5.tc7[`k]ga1uRk.bo6*"h@H?dDH:QAB.B;a*cR"3RV5`@BH@+k[hBXiuIi9uBK)Ui[u%d*U_3aNhfq9N+W#EX7nHCT(%h:*P>&0<X8k_^^R\XGS^?3HlqE5/o4*\p&6`<[M:jS63)#hQ%MhfBLtLoa^X3Z*l`!8MqlJftV80%0Og>6Ej_<l=J`eXg.F]sqetuafD:cNmJ-4JCu#RdZH?WX!'i\["/N0"LH5>LbT3eeh+TrQ@Xde&!`>>q2dY:[4m>bJj&7STp[7\J%5HFbP_j481)%#sc8&f\?V<=I,][SSbs0tkK\nto64D!5$\'96Gm7_c-c0(F:hGi.9pK;]V@M+);d.k'"#<@Zaebqn#bDCb0h<9Jc%$G]T0ItlF!V4,KUo?k9)CQ#4`N[s2570$GXg:$?e!OZ;qf%UIe7'-`/\BEVH2?:=T%LVVf@KQ>qk_&$68)2ichEJ]%.,Sps7OV<q%3`kYE<1Qsj[V?fEBit]im_s3"1*#Jc:!udubir?A(pnQV=R'W#a4Pl>JiZ$`5UC:e/,%uf)Aa>3V/Ni\HG4R%![RfY?`0oXQM^:h%5#WNM>pHP$Kb"=P=mIk/ef:q@KBCHN]2XcOdN7id&`@Md3&.K?a-:5l=rViT_/B1aH'RRiQaiSgCDJuFKaCS@;SUpAV)kpkS5+6.%[F7b&o-@TlcI%5nl9#Y,nEm<,]0=XhoZMn0hXM%PI\6m'@jU)TD\2L:7*u'K^S:Kk>,^LE^ih]=b!rc$>2'h)gMZpr$5%5gGE=U(%(f.q5Dfqt?/fRlWFYo5(?PtB+K?S%k5H5J*DX.WE3DOmh1uX>t>a,-\hNWC+!i07-d0ue(gtPH:EBcoG[!3qmi\W[8Bd?OGL`CW`%L5rED]q2A+I`D<TNpIGF5lPpb6h_4c7p@eM4(K>sr+`q&Rrh]E^0]&fqTf[i_ae#FNp]b-]iWH;Y_dIq\(XPtHM/"9&_M9rBie*a%K`g6NZOogqAeXS!#pJ/&LQp@)1(G]`rmQhHPTS@.9hI-\,GX^7,)()[F!E6^G3t&a8rFO`89])TabUd*)f>I.BYB>8A,ato7LX7N%kPFnmce-07i1jB%.F7`,9/m]/:d)[gI+n_]-\P]&r7jkMGJSe$:'C1C#<A^-3!CEBTeU!0O1ir1:Mod\i$ep+?WA`"=&337m+)S8%Vcn87h\n4<8^>[d*`?fEo%;SGMV`ETW^UmpH"<nV-eXem;E[,thi881A(rj3-I/AY?I`i*pEGd(7r=;[U]-X=-VbUUP".d(&,:Ah%-QcQWB-Q=!V#En7CeH2HBgqkD62%fZ!4/'7SYdi?RPP8mjchqqk?c\"'=`V$74A<D`Kk:U>6CBWqtBqR:X@[Jjh6[p_4J<g7`9We%8XUaJBW-B`A6=fR?Cu>+=lEk,Ahr.A\e*H*1jF:`\2:cTP1@QCf^.YCBTFrR+s.^AY?kS19OC$`Rn8bcJ;msN<o$:TE,75u="CJ<%4?B?dmjsns1j7P?"P3-%Aeptt?kW),bFO]g!?O'92lTSRVa&$hDUL,As,9>:qeb-Bp+bhkFX2H`0@(.L[-MtD%.pCF0Ssp?,**7C%38lN+El@Yp9YRs^[V*'`TRD8^4HrCobnFCDhmH)A\jsh_#g_^>kBE]pG'G$M2TtE2rNo/5m[:IPs43'E-YKZ_-B9[.D9%'#5oEYA%o.^@\o><rHHAA'D'[udD*-EBqpIidV*lZuLn!WcoEkBB^N0.FPQf%F_VQ)HQ*W;$%A1Vrp3VW,=Ki@iS?/YBaCHGFgD8u$(pKj!l%8=/R"c]'/i<k^J[o%tZ'e_2hE`DbTW<W?LSh@B!MU^R0=#=pf&7!U(R4k(Gtm5.:%QqSs)me>d2$I=Lg"@D%W1tdWDVEs?W-sFPb%AClnqi?#*F&*OK->%mqnN$0FNEXAl.IJ#Ro]cHk>\>Sr=@eR%Hb6NdU@Z%cii["FS(e`XR?K%X,NG[cb,aYVa4-sb8CL4&@Hb,*Q%a#Xo'<l=gqjLNOUo1K_ipIe/'>9=Bj<T-OIm@!-7V"l&G7qZ,Rdk&oKfP6"Q?b[o/hXCU+B[\oUk2F5#=d$E2"3R5WJcrL+ioXX=%Z1?HQ_f-\Ah3Ha=e;jrNb!\*FRTlX=_"j-N5U7%c=b2RI-KbBaN]_VJNAqq4aL7FlcZ4=j+1p0DhsXpXL+O/;LL>GFelj-!&;.L7%@QgQn^TA<!4TtrLF0>J'3!Y-I.H)>.iZ'H0pcus#Ql6l*,9Vn4?3m>&fPSeI)tUK,=V\o)?,?cD0j+HB:g=Z(U6e[][W>(nh_r.l%*3Bld_*.B^8IsKG\LESA@"a1B(65et4JQ#QNJmI'%=sX+JE(_:^A@H'cs+sWm143*>c1G"JS9.cB@9ks2-q;g*9OHAQ;hV!.+GSV%]Z3fB-FVulqFhCbKOn9)HF1\CiS:m;&pl(YrJ]l79.NRa9@81Y9Cd=!NTu-^^l*&@+RNl&E]))FkHhN2SWF96&c\D8'a?OMV^A0^%8M2M$/nNaHVbl&/%gkeI<p."f[6cVZ5B>#9Ofrsf3TV'u`$LgD\_r]\l$W'f$:FB7ZR800Z=J:S]s6J"mZTF\<')bTCsN"&af<@(%6kkoca,tgX/;i;ZORXq["nKPcZPd'>VdK2#qc!DB;W`ctj=?1Fh3pK8`gpj-`J6F+:G,:QX2Yg+I4>Tgb`k-Ijs*bdSDo&?nk5]8%C2AY,$:tf#InTdITK84j!jO.1%K*c;`,?,T`AN(8M2D>]>uh--3:s"V.bc6+Ks``6%O>S4]sl"mP@b+Rg*JT,*6`U%^kpH/^pkI!%[sDg/'](jVIbLh2m6b[hT@Xba*>14Q2j);B;4:DJ2`=I>[0OAJ,#o'4'%;[Ab^%-?j`;4bbMYKtEHjZM4;/9.*b='7-)p>feIp>^%?"mVN,%ZCD4!4CgfI:*hSl<@?XO"Rg7_&Amg\k'qXjt`bmOF&3,#Ei'(rKU[E<$5RM:WC'Rl4CBKjli<@b.jEj4m_bF*m%-il1=M%KWUg8OMpg!\[mi7(e]r_(aB3Y[F6=!So2D`^VQC8Kl]]Mmlj%_mI6Obrh;9+mB9R-jLWVaC';)?mFVf*aJcY)39Ns6-?U*tDfRf$%F>.-5B1iC2I`?kS4,:o--PG1%laESDpZWta`6A6N]oMauST&GB"nL2%fonn+67fU;dM4Z-)f/T(h.2K]@-i]b*WI*!>Er/[H"E'I%@N-fOEsG@6J1bPflZf):7P(F-puSoi>YqR8^fEP31@kgZ,D;%6Z7d)9g]VGEJq!S7hL;[NHcM7W9hY7%>8.)TGGKQC/9ajm&UCRA%Xdhc,I6<^;;hXlM+QTqnW\AX,OULMI=q9l*`)Gl7Ng^ite@cMn5sN\OhT?b?$88V*=_k5CE9UbfY.lF8U=)&tLK)ttNLVp*Zrch$%pGoalrbiNJGY\KWY+hWCoQ9M`<s?DdE&+2SPj?9`&ckl2-33%\S"'Hoggl=73CIZSS5I!(&9pXniASQO7mf*HU1]m5'K>k*.a_JC%@2rV:Q$GrL1Ti,2H(d1*Wg/hmoU%_@o5Y&\FrI@)/?$/=r"cUd372Ie0+,ZX.^t?7Yr9#.I7DmG!huLK^7tBtciHD5b)<RKj"NO!%R"Z`L[dU>Wf4UeK-,G71"M]qC@HJk;=4hOaZ*2'IJ3b]"j!O$(X0hX@3-FB1,;i4X3U]9@V$;Nc?/>u]5tI`H#iAVu8D/]UVB<AP%21lFdlB[:`Cf!^kYI[Bu!!u]+!2l8(.dNW*j#I*/FqN7T'AD@r6kRdP[em,J3,dGn#lS4>BklI;lPE4]fn%Wo_oh90q9l<3ah7#<%,A'=s*ao<CbB@H_*=jtB)21@g)I)Z-\HLbTP9fpr)UKd&#\RP/UAA9N<ibD8B*N0V7"9.jml.LVM\u.8>(Hb+Cl+2I)5Mc/@Q&cg%SDpRd)1QI$7BDn![5R3N*:F9=i'#i3X($RQVl\5gd0-j*;ccs2'Xk@/a^'si,VeM"I4i+!)Nf6QVbs!8!(]DJFDJj^qEl!qmkX(]%1GK`kMs.?KU38+/Orm;s6oJOl\]:[unmsC>#.#^6as-ljUobHAURo$h.Sm_lV==Z-/TTU4D);;]aqAatGTeT5aLc3,qG=tDmX7me%A!5-"#e=l[211/6TfObQC"/T?1G;sb<Z?-92"E>tZ!HleVe,]_7hS^tTEQe"\r@[a677JWGEn_!'5-RC*'.>7JME[Z'tf^^.[:S]%U-q/]9<[[h9_eL?NTADdUEjhWNRSmqNidWajK8KSKqc`FqmqqKmi=/JUB#l@Y0T="C\7(-M]/;HaqC-m/Dl6?YjZ[0kR482J7QhP%AEQ'$5JX^]P/\kq2;9gl'A71NK6FiF?;0Hp.]bs$h'$=Flj/.m9JORjK-Wkka9@C8QcW#5S#mT6,rRU%?KK%$_RZ5<n+:K.2YT>1%i[ldl&Ua=%E@=sUV&]=fT5(W*!B=l5PMFmtLK:bMb>Wu1o%</fO`do+e&"J0m!UniaFN9fR!d03`>_Vu'VZdSh>K1$[$)F`@:nN6%;[s5i#>h>R47$OFDtD$kJM/('J$C)"E28/'WYhGJ76O:5BdH%W.<t`@J'l43lQr9PP9k2[T4::;mRnP*e2^l:J2D=?Mj'Q;KB%<3%!(tuMk-kD;hH@>6U*^^kAt/,X4^_(;.uMt.T-J3,N+XCgS2&Km54tN([d,5u6Cc9NWbmt\b[63V)*-d4Y$$UN9It>/cu:[!%WgL;%a-MRZjQIc-]UY[?AS02U3BajsV'q\24[.C.]b0CA?fs4S2Hk,rD6seeP116Fgr()cL!m0t.0Y&fQ38(U%RcOR6P`';K"PG+>MlYL%CqGn)&;:7EXRn'?/4/+4LLW+ZL$a1EfdjQ8Xp0>6[Sa_=9[-=TGA'"9\9J38HE&H=Usof@,G1(9X*l03>2'k#9Qi'tHTD6-i4P0-%-KfIB&G7]YU,Bc4Oh1QRoA7d??kg?619GXF95;%-)O'@b0eB"<6eZ_a-8AY?B>r7J?mRa>&-s=s\6^O31?+Ak7&("a!K!>$Ia;&4%-gLmlR@'ch]cH&0LTj3t`9W4C]K?u%1a)S+U;q[J'mMAYITO.Z&fsH!(i<bfO/R/A7cH#Y2FV\W31"e:[[!.83jrfD!@tWRIRQs:%0[79WTgu^amK,.lE:qtPrb96I*;>9f0b>e$YF=MY'(Qiqh_4`?`;?$\3q3.5+/!%T*F$e$;n]bT&389N/!#m0ed[9XpXn3f0YuSg%cA$ut0b4a'RZJKept`o;kYC8r_#6LKrfi.*p`/[WUc6=8(oSK4N#.seaf/tI4_*q`dTsl)n*<e_i1Na-m7[JZ!I_-`08ufYr<*t;%]X@-2>,]C>TQ*#temiQ18+u><P4KT3[+^I_#Sk]@ipFM'fr$nDZ$(nL-6=N_HS=5EJ[i9K<=#\sIH3Xg4&DQ=/O5fsS&ZCJIJp;O%ZAEXc4:]r#$.T#eUd^)D:KWkGF.,,7:GMY4V2Ztga>%i*H@?O#Crusqo)XlHJb2OaqcL"CB:8$d#13Z1!%X,o/opN#,2QL-U'CYC%O^$j;eBGTE(5R_:O`,;''S!Ja*@XZjX'q@#RAu>I=@)%-G,W)bkjBh;KPdX$Yj"Ssom5&T#Hg5?.KADM'NZEnVjTib*ifDMQfg7m%cLA41>r+U<,\u@2+[i(H]0A2_[PQ*qc]IhGV\sk.R_VBbL0s-#41"RqWVs4u<5WWKmJ)4r(<>O.s46]r:2mNP>;eRoZ[Yi4`+K9I%llgf0<,54,5sARq+qUV*)`]mB+Lt4>[s4`Yg95Fag12J3#k%GHEMH;B=&]V"H#*uRC-!k<_YD]Ri]7CJ,C&rM0g[dE`=DH3)SAmu%0Kj$knnf&Ym/3]p[cDS(3i*4S")<U;KY<Rs&-pN)XcG2&:"\4I1eEHRer)"W;mJJ?odKYN@G5W)r29Iue<g0%5E&*PNr=[u\TKPM%E>F3Qq2tf!i,51!Sl9[cV`%%8ju^jg>3hDKYl)U/go/&ppQsRZkAW%73%N\m3FGMPi!?skp(hI%^bZ(nZgoffXq@rPo#*a_ELhXl%eh%/XQ-:BF6-h8F^4X]d$BsJQlib(qLSV.*/04^*2%k>Rai!)i>uFVY2U]IX/79H`[)4&.0B^#q5(@0L@n[c3\K(m)8bd`&%J\6e%Sf9)XJ#CW]hi4dS35"C&kmR.M(\:a!fe7FHr$*e67nU%1L^<:?I&)^?mC+=PH:]AKhHh0F)e5WuA4C_^8K*b.Tf*5`m)bBgIMi\S%o5<[66K<p6"a#Ffl4;7mjRh>Tk+C(ehN#`\IsP(@g\SIpa;s`GpNu7WJB[(Wc9Q*hICPr<"(7$.n=qs$pCC\$)B8-'=&.WsqNa,L%,3;M`*4J`)lMTE)INiF>&ksK*(l7LG%*-C2#.)c0o=X,D4&>fr;WZYSs+C7!hm.S-`D]20"s+aRoa*f/8KB\/bW](5An8Ht*n>QD%Ni"aLVN.tY=_65p)k-JPOQV1S=6siMe1pE\Cl<m-?>>20U-^fH9=dj^g1<k]c&1Q'$X]Rk5qgqD^N2GW5/>9\p,s31LBnIT.q#m)%FSjEa;R\V"OF@A!=1X+=WWoHi:;.hVDiTXqJ9Dl=j#/Dn+(>62Le3T/8*-X#KoSa!Yb*^#rmU#ibK`e;g+'?S-hj#p?5@t2^OTM<%ofOA%$K41njN#ur>:Q!6\tc2Q&$74'A$>gV%p8`%g@tkk`o"2,A.]<`(T=2Sr1/k/6VT1h,=6;$pCTC%JOJm=fS"0p)%$rG7]02m%nFp98[,.3>s(*rU,S8"&eu4ZMo$:_rMOT+'!cFR@;=_@@M!l()_:W;A$u0*3^[36u':#@V[nGT,\E294jh/nBH$2lhA=MhIE:]c'%0]tQDpI1f0[_t)EnUR795#4aj4P9WK]frls($HcCmP(5ICM1oB,;ao)3pa[QPO>tUnaDTq9o]M\SZt8i`[4X6qRSRG:EC3C)\BfJ%G@A^-h.bIfd81%6@g:[bG=qK"&`.shX7KA^F4<l-Sk5kuF*Q#gH)t"+O-ct,-TB#.lR?u#J.8_Hi<6ZC,G!Q?ou\/q0jE`IgH,PJ%(1RrX.i""Qljb0';caNHfZHKK<iW'F)hN\[?iZZtqC]!qNbiO;([!t;)>W4Fs20sk:!R!f:U#$1"rThdP)pmJ,F&bIFGjT`_o9Un%WS$gjT'4hHhCJDXF7.Oub"0=iG6(^Kf)<c$:8h&b*V9/HnFgYrp@#B0[BJ,)2Yj'Eke09A1c0['8R=0G+"OeUam2tse"=(T4>F_g%XYHq>oL)&uDK_I>l82g3Nf6V4Eg?fcp<ZXako,q'KE0P@eACaXBs[\F$4ka7O:l)Lp;GN1geLJ.'MTuTEF>4mOuJ8Mhu+Q)?KAPn%ql\b6)oBTm?mLfJEn>C4W^YGaRAjjsBnUW0gN']F$/j<K3B,!gG<Im+#Hcl=05SYaVRMf&0/U%X2m<<PN<$N4Ol#0%/!1smW4SiS%@@ugB'\]#@q0[ptUeZ\f03TS2RQ.B-m3$D1j':/\Y+6#KVEfN\Z+ch_g1Fflmqb3^/#FfZG]n\8m(*IHN7i,U7aHE+ISEkY5Wb3Y%V'=SA*2NeM/=%C:@E:o,Tkq#4Rj;gNVZ>;3U`q][NtpDA1f';-q9dSIfH:"tIT/,uT<4,UT%EX=[-mfQ7=m7N6K6<a7u^Kh[0,d0%+mV15X9BT2jG36kk_a10,3/p-U:Qq8'=SS+$\^e"7$Rd>OibN#32.^tWLZUKgFD<4U<i7J!Dn\tm78VHM\F,;s1m%7,+JMDQ"NJD%e)JDokjQ7_:-X,%cP79UAl'$;a^Wn68h.I;A(?\kM4NCuCWA?f;7Fe%n$=XuQ$/3UfHN!_>cpqrN/'a22$0H&[TS,QB'!39j6BRe%Ys(lJOXd<p_O+NK!k^a/$&Jn)[s]`!7SEYQGj>dM@2I3Q-*?C`rqHD4FLs'AMfJK`ds&*@l1H<e@*6Q,,Z5](OnslZU`,^sj5fRU%UV,*]_c5?j#QQ%!1$43T4o%[>?b.q-Yh;#YV?.M*WY@sKI?.#4\^m<Qf/eOd&h*MAQ[@m7a/9ab./KTddu6'%@g<\%k`M9<m?'TY%I:DKZ@62G4qfnX)DEDN\TN6fLmE18Z/g[rAHXUH&Sf2J0_`pFKXq0#m&"+sFmd4FiK#<c5ofu)$%O<\E1Mt895qs+9iR4LKOE$D@%\lm"j)!4)?e)=EEADtYp;CE2ClA$3GZ="N])&alf-luL64k")L!=N("^SW]=HKk,Ga;2IJb3di,>0D+7roVDj/F)p6:B0Jd5`\gq%7_\t<:(M89MdUd(&EL?I.`-3(W3$hShF;&$G@;H[m-R4>\6@;^;I(#9m;3$[p2kst)]SEHff^VSBI[9l\0ml(D80sgG&>FXIG]aG%U_Ji84Icsa8HG2J7I%fBX_?o*Vm3]#c<L=KK$M+Ld2sE]F?gmjI.sj`?HZJ!-16!^`AZ3mfm@1d3c^aPF$J+9!Cd@BRU,cW%mG`F%b@g0cUdPH1H1,g]rAd?)BkMJ1pAm.[dUI/UPD`V28uq@:[88&(-.0j;f'GpD2X+6=*hUGKrOMCeVo%Eel>(l8ioM-J)N]5Ior7=s%NL*7_\9L?RXOoiHL.UB;9P(#3-KrI8.QFbh)LYZB073SI#5%K9lrdCp/D!0]Fp3<fcK0:9!)'D)+ER?T;"8=::WhbT70BCkk6\gr%YRf6Y+YUblB9ja49bLd`nVU9R[@SUE?X\_N[9qdGV-j)5&*9Ee?Y-)Jb0Ff>eW/W'+5>Y)JWjueRJf5dmdRdTn_/4%XO$m`aHBB!%AVZT/I=Sf!b2Z/d=pfeQ5_^8HikRK/dpp@?LAM/oo)`=eY(WP;>/SX9:Qq%ABp0gP>eHu)ET/=<LW.hf5%O#/:TfGGpZkM@i+q&*%e"3g@R_:Tj/`W70a,[>J;?)T0+'ta]C!UIGVZMmiP&EM/'YndtZ&V<>K@TD%!/$NjlPjBIbBc&Nm9@b`r^hp4'K]EC](sX-;JXu?%r_kr*$9l!6a#us5OXA`G&L?>E?f8tColDJ7J"&^m]+ZqOc)j4[MT8O)/X2LQg.32T#:(8LDBC5h$W?jD+(S/``se650m!:AOk`Vk%*b]1()QEZ=08+>9:+BI\>A3a8h?K';H_?Gh$A',.I9t[WH^Z=nSQt/jcbRlO9Q\g<07GFI72JZb<Sh$D[T,]B$B-Ybk]_g?B2#;d%N\0B8UXsT;(^'?<+jc?5g=:8?:.7ZqTteKJGc"Ns7Gn]$LrA0-@BY/I,-H9p"mVp:-gZD[2"'lKDq]X(!>[!2lW,Zbn2i>Q:)X9.%;iYrtFqk8HKbL@"mOpbCMqk3a[jd<C%jlfN$[]H8!hENHJC!]?(]N$=R0;.;LYK)b6p-N?UeT66pLI^)3<YJAQ9e*%)..uZK!]:n%Uq<OR\eVQZ(_Qlh]0?PFSZ.p<`G)-,?&$B3g1?:lE(5;9nbPd^W1./3@S0`m!PK4;fVLgqf0>A#6&!%2d=de%A5(XOdKqI."_bk>%hgaFRbtOKCf,rK#gjBQs]u`%Z@KKO6P=R2#e:T[P:n=,%Auadbd_kF=L+W26.^aklN+Xn5-hIE[4b2ERaRF9>G`Ka/'C*:2rr)e.%pdOXqI/Mn$N;rLakl4oFmYi7ff6a:j5<k=.iJ@<E5D[`N`b+5eark'J2uiios7NSiO#qMIr[`N`J,\!TrpR;oj*nQ!I^tZo&epMS%$M^Co:1$2H:s"rV(i8^!9hV=*%d5[4BE.b"b"XSh\-MYH/0t<`1j7QM<h`!i)a?>/B(i)h:7M6en9.!Yd%hm?B!P:)H3.:Y+`rgY%Ja2)"j.8Y/R8Hr`,[ZO&%a:q(K`-LumrE<Zqm*tO8\sc,TgCU&?Rob<kk*-_"G=M'9'Dq8]>5IE.0+nmhD,d(F5.-$.`A*kOlkh$%VmSb-rCBc,m+tH[H5!)6MgsJ\E9C]3mX:O8=>mJjS-HIko.d'0W`2P-1BM;P8I;TF6!L($i52j@"6O57X`(]BrYX-3Qa2,q][K:P%.CG-(&)/;Em#ZAfh3%N:[a=9/ThFu`&TV&$s,>9Ei)4rJhu&BJHCUWfnGs(+BReY3Mf+s]jSg.J"8'0+ai/L1I8P`"$\_=pku0Q,%l!icPq\UBuHVaS([R.p0Eb.cPOH@^0Jo2!8Jb2n8A>+DK\*P9B$rGTpZ'6UbN"Z&4U:/NS8II&LWoc:<h(2gBrILc4qfL8g`8.Z_%?,`4-bM0T'<gsE%Z\MO)`0tXI$gZ0A3T=PrRCAhb4fRqsZnE$Fc#l+^-Y_eT)mPk4V(=!)P"Jam0b"A?1M:Ra.'j6sK\;O?Zkb.g%6g:q(mH3`\]"e5u9%Q.'ic1]2LGEE4/A1XQhPZor+\U7'pZsuUT-;2])i@ii'd&QL:,GB(4Z%<?9\06:W/d`:j[ARP,UJ<eY'*FM%BK4LL-'I-H#Qu2"a8j5"dVmsYnV8o>'`l?qNqB/8krqK>>M>1<&t"<!`\djWP[jb.rUR@GN`0es7#HJ?P!@[-d=YS=;^KucUHMoS%\hXBk-h5C,;JU=aQ=pSa5ste8*/A_c=:RP6Bq^f<c>@/&XmD5]bPeGQ\WT);G[!;08YFITQSXRN@Dr4t[4@SEQrd%lHW8-T`_,F`%i.+39-Z"5WUUkH^!NGoZ-n_f&bdIT`L,tqJm0XlLo'k9_$;a-IHVjmOj@7J[NZ;FGjWUj61m]RW]aldkO3DCr2l[LLJ+E1Pe1a<*%XD=$[4DRsNkgS<,X1Bl=c_c$2W"1WKU8TF;p\bCc\g#]gCZV+XjnE,(Rf*$mf"4`$L.@k)#bgbNBn#mVK4jul2%)AY'Vu.no<fGl%TXD;URfE-o*gr0%7c+B7>eSFG1hEq][M;/aG95b1N=F6VcdmQ+&oU"X3#mt]a%FPC;JCQ[kM5#6i=H):YJ[5VL[:c!BYJ9]7F&_V%6=@OnE8p?(O*bG>TSeH/MHJ!7I03#j&&45<R%s%Uf(@VMAruGT.J^Sfb"O%GQ<6[E%5o\6hd]U`,G:Td#:X?If=enSq"naXiZ+'\%T]6jj&`Qfs>\CJkd!3T%]XlPg'Cokd&&V_N(b;OGmj1@YVbNBGK1#f9q-eok4ZjimZ*U_&XVu)jEb8CMS,"HmY"fn)\JO$bWWmdl%?YH\==2u2F&f=Jh7B%.LSO+6TN*KO<_idF>7A6j#g]I[SmFeXhr[MnQZ6*WN46I7:!_B*J?r/M\)99XW+-dKh".V+GfR$O0Z#g(E%N6-6mNCVae%V"7_Fs-gT,'03SYm`dfF4_Z*e$Q#a+*1^_)*IMPE,gn6j;ZQ/;"G9R:=5>P7*0j`qpjEmF9.?1E]=7.N"NeanI4FB%/UOY&f_pqN@G^q(i9P%>pO;d"]!)$39])EQj)L<Z-i('ml+;A3A#p9q_+8$.A)CHRr?Z]iGrMj=VSXQ<_sX=2p0Ge<dCliPT1X4+%50Kk#@,aj+Z*UdonXq#e!V,(nCZ3mbXfsMJ\Tg7HW0fZ%]gaFhZ_fAQ;2mXbNH*S?2:(Yl_GFC*&%kRrcFm7iY"pQYfrnd`0Rl?a%p>];k8l?gh%b][5F/7<Q@rOTGh"bd,TPqMU(V?d)qpWd0.'pG'PS^^7,O%^3E>.\RVDZorga7P`8e:.,PI!oKODS3CNTUhRomC_?%)'?9.HM1rcr%O,O_T.YkX)B.\qIP01d.+lp)J^a/29+_YHZ<Zn.A8n<"=<%M>8d$Mn+o0R_VJOUfj^6$c2)pY4-pu$Xt2Rt!T,%J%!fR1/n,$\KQJ4Y*!pkJ$kYX]T$.T50V1P_ZN.-,G04O=49P/G`-*gq)LrK;ls."LCQWOj&YYp#.&A.3\F0&m`cc6VtNA8HS+Gt+U%9tu]_Um1`S)=hSr_(&O,dn]Mo;ORgG^f,fD1eE-0(f=oT#fYmu&&9$l"W:AmUCe\d+8c:sYA"OjFd1,k"OBU-fhd"sI,+S"%$^(Q%bouLuRq3"_;bG&VBu+tnAV[Cf7]+]1ns5CJrO$g`\+NE27!G(e80IYpCsfHOmt)mW2r/?+q=\h50[su?8l#=+5E1PZe*(q6TCiRT%K/p*9BcKr#%-`Ds4L2,<Ec!8>G?M4K`cL*81cLE.^*%I.9hZ@l6h8Wb&=sEkVo/H_iTM)U-!s@l;1PD2bet`#N;4I!1_YeJdQUQa%@oJt!M.eNBb=o0b&VJ[1r'3D=,iD_Kc,RMs<('I!-FUS0FqKaiqU%'<G/W%)!<9!&#r3F@Ho4%Z7/0:VW+hV^/ln_h7G:aOHbP'B%[Hmr/%YVg0RO&p[o0oS2DJ_8l*3tI(<X<I*GEKO^7bt5.;W?K3_neF!7h0291nHJNCXI')o)krc+;P/nSe\n_%S$X[K^4:=p&ZpS%b;bCk2(b$7Q[8@&j]s\si2h;C3pXR3J83g(pfNf7ZMo$1QRTrmU6SX[]$"@PqHdr,BlZffB,t%tn6g62B-VM=)'k>0aue(oo1fj;%W_V-ZcY8j3&\<EQ*GH8n0i^(pfl7PA/5cUiQYFhW,Dqu@99mEs`u%8phe@%`eSASG[&<:uR8nZ&+=UU:jl\KtI0D:I94GjP2MlS_%hmhspI:(&Hj7/7d]Kt:mNZ4Yd&%20Ta/EXE,pc^hgN+jD`<Y"ZhbOGc?rXQ4K-)W-ULcoA6A5'+Sr"s?(pl5*3:_J=M0l('esUgD%>EqNhkOZYU+$!H!C/"NYp7kWTc<bg+PL797`FKDn/J7Og?MrpsPqt>Yo:5d9-W2;6nY^/^j3B7<r@sUZAX<MBcu\"aBsli^X0tkh%IXlaj/RDJ*2hI:?nHS$qnJNdY4DjagcBZpG]PFatbs6423pFQMq]lpX/I4+TpN(_p10uLUh=1)NB:Y%9F:Vd)Z2K\cY;Z):Ri:pY%D!cI<j#"d!/.rSb7C"T,nM0%@`LQ2$;%Qd]P-2WH47s6Frn_8':i-u'Y6bS,9VQ"+C#b&=E'=(sZ8VH'r6.Te2+._qbREPf9df2&%6&ZaR2pXokID6eUELe%p/hjg70s""u%Mp_pglKJDj]HjBI,Njgbi/J5F+&'kYZd+*NMi3InJmGjh)'Hq'+X%o:-7@,lX<7$]B=R3%5HPUt:dCU/%paT-)9Kd(Z=o#,7V1iD3Uu<(eQXMVj_0eig8Ja/!ec$R[ig/?bp;7!<MNKiq_,?-i\U_4,\,WkU'9F\*::P06j]3;%f1)]X`E;@Q+:EX="]+1QEi<>fZ$pnEXPZcBX&MGYG'loe1(s$H@2o'a/7cgY5G5;T>8\Xgik#^,p^VIaa48uX"/Tn.T-0K4Qr>(>%4LjG559Gnb<6i'VL9R&]+fYVXmUir_N[KAdQA.BIm*J`e,9Lkt^,^.@Rg,:[Vp2!-@WSuU/@k?`=qNop,Cn_CJ$8G"g^7K*_=SI+%TpfZuJdG1E7N`uBA9Ol)7SC<.VLT!q#KDm8B>5I]-4b8f\!RUj[<]^J-8SJJ4>AK:dD6Fe@a=N6B"CYX?ST#,`kQBWB4ubSkA*7W%<ik'f@ue@[j6L<?eA(lfG1]8CBeSP=`J>t2bmo-&(.u"4Z]4o#6YSj+WgLq<.:-[34^Grqju1F>bj92!a0MNh@.IqZ#,3Z?.p5#0%pWL-ZPjkduIatoNQh\pBWk(00L3"aL/nYC'o6UWC0+J"'ptttaldgEuMT9XHU;IY7h5Ft]_fB`$%uCPVo@J-Qf.-3AO>0X4cc>P(%iI6J;(JKmJ_]>a"U;O_+3aN<(S&kKC*#=dR6"q'hHS7+/C4`ufmNPehFZ>O!3Fbnhcm3BU)at=o??jjL.)tJu:C^hP<C%;N&h/_C%ShJ@)Pfrb4:(Cd\VcMO7;?TkT"HE"(eFJp"0T)F`hFljN/,jpuk$0%:A024D\";D)$?fO#L"ZmhoM6$`o__LRo&@FLbJ-i``[(#0%NaU.nb;aJA9]U3,e5BsLh;"7o,#[fC2T]@+pYg&TmS]CVUhF$]%@26i9NSmA(##eO)Or)5FM]?NcSUtp>=P&\4,cK9k9@HJGK!G\%$2=e!Pu(aX*)P,eV*`Rh%o3anBaR;D^J#1AM4Aj.,u@Ecq,5IB.&i&*^D^aNE\oVQTRSQL).1a"%29;H?k4D@NdecdBCH8r#Gdk`%a+fM2EucK52gp6F%eb2%V5oBO</I2E;(\e+=XeO)9*Mm&k#E[HLgnda[8(``+<W]([3ii+]G>P?]q5Os3BduC`hY#IOd:%2,U4jo%5`6nuM[*,Noc/$$r;+!gXi'KU#g,HcWYFkbN4KR2c9R;flsV)gPg_ffU?qjp;=S1&ktRn4LKC>?(<-q[],Z57es<kKV^5PH*,;4O%5AORN9<*o7(5t'a.'0`tNmqaem8=/E^AN<J`"9G[)HZbR?<cDT3VBXt7-m<5XQU<ill79::gNN-`jsn&]S#rE?Qf/^*@1tm<b74Y%<LOD_dk39?;!N-A4/>.0WK'X-/IW>5S7og62*`-RR_=d0%"X>6]r6Y&\)8$sXiA6`/^-*86)L]0;t:fl6P9u>ZVT[gjM.KlMKCpa%ZP[flbd_Bo+imU;#D^BI?2HeiRZXeH>sS`ZLo7umAKn_%8l6<;BS*J";X/IJ_p6p)H&6W+892-dpJ=De=5JC)EFd*QYQ@@Io+l8e%mEcTQ21`s^&*G?ma1T&T^3^6sIDm%qal2h[<F^/M]*B$t"JRiT7F=hq^"<?;E"`s86B8sF-(SZj9sH*hSrK+<>4P^TPPdI,=9/to%YAp"-jiV,d]E9np1X?e3q1bUS.;4s3Jl-!@Wl1E3?D&$7l2\W\U#mURk>3'ZpFIh\gE6l3KhBfF,Gd3.nptP(ZBT*(04N^UC(Cm$%C+/r%Ib<sIckk(/b0Pu?,4J]F5ojbUGYu[V#KgIh>p>T>I$:e)2eS)2>s5:l?EGYo#7<)dd7Y0SKd8o3gDq2[5uk`9=NLp#ohB>S%V%k8/E_%uX(h]f8:&`dKZ;V;ZS^%@nJ^+f?EB-IL49GH#[ADRc=XeP=TrfNI8<op="_HA?1XCGF9%c3o:=&<bM[iF!%M/kFeX]d-%iELD8^M7t?E@MRBU67i'\1?P=LJM]t6dK6W88s>633]W_I02gQ1?7G)G2$YU6;J/6Kj[Ej.!7:X<]]73_=JdV-B@I;h+UK9Yja&]%B;nPCk81en_\[VuhCs+S8dfKCmb]X[XNU<D,%o"q/E"7L5&1NpgZ"GAT;ROu'W>gK&KJ_!n$2*,I3gl4d1rNF?)*N.h)]kt[3DFk%5uS0!ZYQU^9m@PrLa59q#71j3Ylg@n9@Bsu)mG&h2&GYE=jE\?go)6>7jAFmYo`8Y*l2/tAe*2o$qnAje$D*#$NTH[FJou62sRJX%el[9&'ee1"pd@;_#PPjAbJB+27.=l*RU.G+n^Udb!SXi!g;U@8P&P.ZUJ)Ra4C*1mgu&J5CAZeXLS$h=]'S[=q8@O,W`5TtP`F^a%'>o/qqb7YII(Gpbl5cj%Fg314]</2hVouX<),q=_GD;UI$5W7/1!%XI)hGKDJNQ/pUlZYsoC%2*f8'Cu&&6HTiPX!&J,]9$Iept"%?iK/B5QCNJq"#SVI!/\@C%RciX6V+Rk3>TaO3AfM1+dB3k\7E5Q7>4VbK>W<8Q$L_C-KS7o$PgGJd/02R7L(Ep4e3UFhqc'HHg?f%,>+P)\mUtT+/mq,BQ&]1dr?pMoi32J9g6NiPoVe-%AtQJV4VM%YN@n8jpp&H4hu\f:A\06ou4'tI@kkhe%@f4dCIr1EUW9!4*O!g%@Icn^^Rf\2@jkIJ,cSZ<;A`,("LHec3WpFR5`D.9\0OuAZr<>&BNaWYd;5:CA2!bN5X"L3V!SOsgH_\'EO<]_-<8+Mo)lJ/QF6g:%\e%n.5s3+"&1RK08V[BCjUs$1@S!NY&j@$,l"7j`DV\=&#>qVVYLF];/nD$mX@uO^Xo(:,_3U)p5cQln.-c5(&4]K&]oO"c/!2rE%]!c.N5m'88T#Kjr[J&408Z*O!>RgKDpQqQ*&jral67/I\6NT$fc+HS(2gmkWeDl!c,'kI(N#:;e?>3f!Hb9?;'!!%qXYppH#p=&`%K?TUC!aCl5m0K?;8gWtX%$@O*\7qH&Ke$Q[Hp0hWWV)gQ?%?ChcN?re.H.H^5rWMUdt\lMl(/((Tm*Af?kNb(VdO5I?j-Paiiicf%D&r'CU)65`nY'M\*IX9&,HRWK+$@"5MPD/p6bNHKE;i4sbkfMCD5;'W%&S&DXT#RfeD&G(^(?*&j4TS*_)jkKp0?SIBjrEC"9;-8%H%`"b&=isp[@b[`S&Nl@<rb58$D`B\$mHnL2<P;mM3/crX-;#;3S5?P%h77`+r2q_#&J>c"!\\7*QWX3W_=Y;9EO[b"^?0r/L'rh%l9YFLO]0uQY5_m3H"p)T(P,`V!$/D);1Z)/LM`$"gO)dM)G2PsWWg0J<V:k.LXQ@#EsJMD$OfHq25?!^2ciqnJW%B;5=OcN7]@fZ%(kqU&Vuo6YXbo-rAHm-t)%T<+dH*`U(:?]"KBs_=GsU'K21GB'Ji.QV<g%U%Ng/'n[fPl5Y4EfmeXVrDJN8T!`5&]4]>]=Ce>hsn%CcV2o;+#4(D;eGEH:g2<JcR2Sim*SqMaBSkK^8cEKF1)LA)^J`62To]f&r=+`u$KnrR*7er#L'u)J8ff)F)1WcDPd)U6O?k2CCUL%@DRbGK844:P#*;VT0]T&MICM6=,g0gM*mk^=5.?oBe8Y1)BeRtWdM@-9p>0Kj<jLqf6(h+#SjZK_W/?ZD&aRc6I=t-5W[#i.bG2>%U2rf8$Sf!L!QNT4k6tLtP3(U8[[<1D;Q^AWP?K$?P%_#dOYT?9d\I>nXK'phkI92k"C2/_Y1mirHRVs)FAX\sH(QqAfT,g^C!tst%92i"<.g,8_+()O'-*>L'E`&E:S$al,iP)9@U,Zlm9*M#"3INUt/^DN"-kjPMoSu6grbPnTq"](H3`Z>SV:;m0U^5";VLOl;qREhW%1mY*SFklOi@ZZ=<&I@SPOHgP1dJ=sVaRqR^R'=N)POnl5V3fF:hl-3a#:cp9^fMH1([;Z@*g0chSV+ETL!K$9?\*%1*[Ru#lU?[H%]+67=fGFW)Aa^qXNmaKr6k?_Zjrucm!$Rd`YoPnM&@+^A>/H]D2=/_EQRl'Fo5t(W7mFsBlDfeobEd&CYVUg9+ED;;"QUoIo:Ytr%5(kN[bF3[kSKn]S914>s['%i\Sqgo,'h8B@Z+P#:E-o-X9X*t<`O@h0-14rs&DSm!f@2'_,-L63@Rr^(rkH9h<SK!q\J9ZY"Jl]j%f^RCbiT\Wb@:m3:@#HoD.\:JIm6m(MNajWh'uH\abI\NBp7]6T]d#rO$._A`5=g-LPD]J)A.RAQbK#YDj/T13<f`I&J8:UX%^]>m%:?Uj?XsaccS(N56%Sd(1P9IX(Fp>!KNpLkGJqTMc['RP*Ql<IN1K3S<AtLGW:%gecrJSE)%eY((khkg74TobDBX:)*MIrNh*aY=g%[i@hA^A`D<iYSWOWOu(u4ia'ppaBKN[?[7VQB[K)X#;dc6uV/W1%;DD*W[Z#(o].D5\n<ce;?mH8a@+koA%o3lU<tb&6tsP'aiu$%X)8rMcrDahCCP3qWB+a@_5D5@ej2rN0gC`gk%!te0?9Q66o)3+jtb&b5";7'h.O3"`p*P0&pojdSTSq@';N(ZPd\]R8D5U<>3C>#%;QILU*Rl[5,-./m/Xe"c^_KKaKs\8tfWM+Fo_fYa<fE_=ae``4DOFF6lt8kj\]3`/L@;kl=G;;%@@[&U7Doq42YH_pIO$C6L99sA%BrM$W2TtLcd]/G>)E5^j'^'Blik1$hD7?[+(#F:$UU!t9_%(PR,A:bHQejTEaI^Z"VfVV^^>o[61]]DPcU)#6ML^!l]dr%mMJYQ]%Lo]X![R2kCo[]P>3SF1q,I'L,7mGbPPpHm@gT`0@[\PNqW%P]sJ>bB[dC4q$SbXSn,7k]@lVU(lmNd2Aq;4lmenYs`mj@q3]+OMX%9[IhJ<NFV/0D?lCA9J$qj=:Q?K`')X#9N%9:4Oj#j!g;uEtR7/&@+YhI!1:CS=n\o$,mVGFL=B$j:XS_\phBOYd%%UCknm%70S0b%s(LIX7bbs7CnhN\,=+ID@H@WR:L9XN3c-)B,`n/js3r:1bp2_h&N)'tb">?F`)P5&e-D@nL(^i9*\nX3:%E0s?e-YeVALhW\NY7Q%QEfR@DOn!@d*B.^m,NqJ3Jl(kitpZJ.=m^!-0B$@6<kmEqhb;XB"?'0L?_n3E`&9,)YWX=;'.f_^(-;H;8P4sQiWcG"I0,(<YS2A%Z4P"qmVY*HK_)[hfWJV-N;-G=84Fk*EkD/H:M#[DN59l#(%N$rfU-.YeNKa]0&uW2:95]uT1-Eur2_'k8a<R,ffK&dmmZ@l8?#Kt%ouUkR*MJI%O^hC+5n3gUK97"d&?Z9Ufs7`kb,@`"2RU,IBEn8'V1Ept4u41[>ecm5BLCdRSNM1J[0<p/6D"6u=X!&5'<6G.M-_+R%"Y;bg*$s!!)/.);Y+C346ctP@adc+BKYiHJE($G3QNJu8%%Q$R2*]2]k-CKud?rO!Fs^_JB0V8sdlFnO9ci\U;8EYh%9!?LGF4sd%34.GX>%hu'N3omu1Lk.!Ki*Q>I>_bGPk!SA0X#K?;hYNm^.7PXR5%odi#!1K;Z)sUPJ<B?9oC$e`G=N)bAsN1<:B&!;3QYR!!N+%%h$g.)REKjWe%p:LR^k\e&Bj:!bK/mVr(!7RQ%Qjm"tVF*,K`3E%<cG18U&AZL^]9_-/f$\>,WJE=#iE3LbBb@6oo/7lVaHEk.MN/%VQ+\tZs?sW3CuD2-uGG]RZ%X:"&1L2Cj>su>SH+#gapk0lL1:aS5t[f],m568qd<OX.@Xa,a=)\C'P^lFRiT$fSfem09HF];)">V%L(H3V\(tR^R$[OKUZE^m?Vp]t8AG_C0g\2HK";le;i@GM`ebb)r<*g!/8Fu;0e__:F'Es4drP5LIFq=^LsEH5oG<heA-jr*MjhKk%O^3rZ5F%*l>"Jn@FmG.:!7PRk,/g&"cUk:@2->DBPGb9o_r/lW^XZ7U%3IU\K9=MHj>Ec/OCQabU>fkY;.D-^8d[RV>U:$R<0!R0%UYC;&#k"]pY'(uo:07*M-l#WC\7$`BE0`-4`b]T9bo$^ZNi0mFRGBn-A2;Hc'o_=YKPTU<3\UJqViGG]Hpc\#Pj*oT%8sR,.SG,7%N%6l"f@N<Y\TO(_5*EXeA@XE1jHZDp>S*W$emp)YlS'f[d2-b\\R6_LH9hS\\n+Foii)a38onD&B"Db"m'X:'#XFfOBEo1aLEI-t%S_7>%q\6k7-*1Z;%O&($MJ9Hbid@qIS?oKfUJNG]OhP4p@+DDM2/_t#k5BN4I'e%'T`>cqR6slA^"]*@7cH5)iFIN<0!65;-I&4a%'"/N/V-l3i=a^GNBs]"W/#_)s7`>]eiMged_;L_%B-d[<1Y4%Z&$Gt0-q2fDaAD9@-LkKa/KuRc;#,uU<0m"O(31>OXbWrN80F^<%CjDP.bW18jj8sG<#GHg"X1:oFe-df[;l8G;@"M47WV-C)m'WC>eIa<=+N=!':q+skd"q*Y>TrE1QBK]EY%Ia!,Il$BI=eE9D/ns^%F'))n7e%(icY12FQVP40nl-pTb13o@P"#gIOqc".?WJC3<Enk-1o\59">uK4'E*Bb0W/PA25;Ki:rH_d(m,HCqYHI>j5oO5/"s.&%U\:YsdrJE/[S_4<,pQ$t\Aa"p"ql?[=[t<.WQJ8mOdd"0:=J+T)3B+R<Y<N@1X)[`mBsE5F#agd@E=`VBco"AHpUJthAnhWp>^X9%V3>GTcQ&1Gm&;_V$f`Eo``ONuH$;F/OY8YsS"eIpEm*_s.AhF865M\pHd#qE.E`T]e@_2c1d;+FR'M</%b<^?)TdWqLY-4L*WW!4%$!2Ri#&FUEm4pkmr61$,,V!^^oSDk9*%X]?(.ZMA2&mH!O:DU?>WtH('V_C-;*-JP@GE`!eP%mk"Zm30,?FJA[$j*;P$W!qp2R@=%lsAHqjQZ*<=n6kNB88"]h3k&6,+:oF!ZdX(JpdFCGZl3UHttf_Se`??4DX]m_Ec)V7/H,kCpab/o+,GZ@gYj_=D^DsA$Y^9WG_D\%GIru`TO]nJa2\SJjWY&/PjE5*HaP[Y^3m:J15<7uBKgeR@]VT<@D1gpQa,dHm0g=?X7CWn`]R.Z;KJ$#cj_Nfqas\JL5^5u6BBtZ%AT"6%BW931SY<!o*03sM-;'C#WcE:tpF*C!b'b=J*b)]OOc43a5th(C+C\5^iu(c1h]1NLa7p'<-Ijp+o("+bF]pgspr#n"?sQ8\%gFo9-Bu_`Z!4_`9E,Unuq^dbnj,0^JE;K/R0`mKkQ8^.?e38Z?eY4mf!fcq\9#%5=,2_Gf+F/kX<g;']&W2Pj:>Ib@NOGF-@+=Ho%M2QTeZ^!WL?-7/B7u[\&c9[7gbo0Eb//Qe0&.BXQI*kQ,-@ga6<1_NuOe/FnEoqGG'@.R66&&#NB($J\p(I:bj/KMHT&?=a-lQ[0%I&5&[SHZ&kCi*A*,CcA4Pn1_Wd5Ej#"/6'``/cgqb73O'KkD=)N?@$>^S$`jh<]*MNHU60$9-]tF6GYfpEUK6Ympc932`97RkY!3%FudK!P3M95CNC#/;HIMB.DgZ^5k<S!0RT^100<uX#2=9-?<n0qk/SB9)&)_C:,psL!Xm>8.<,s56iL*u@"^cFh*l<CYiJ-ri9oVs%B#P-fc`pnVkZ,_Sf>u:7>>rP_?h+3VERQQEFdaBE$m>qFkSS*<9PAPtch;`m?I%Na3ZDG+3Uj-CFV8BP&A-4;;H'C<-WEB<Rb(Q^%Ab@_X8i:I;7;0(O7%R$ce\'7Og]Os#%s*BeeeV?he?+K0=[H-0^1^Z=8trJi6`J-V.bFX'!-`%)<WjTWX/*WM]Vrt"\NKfDFP+:J%joZE&i7=cBi,MW">X]W9r:8Y(rZk=PE/k>FS0H=ogq>#!V!W_`@d?)L?6,Rqa_s3]l/0+FC[RZ[H.'r,,O%'u9DG>!0-r8lW][I8%Ad[Cj8].N"SdkInYFVqkH$>b#D5&)G!g3aD.o=]*o]kn?q>=D,$up:%iDebi5s+nr1]GMeWaE8^;&(\N5+"%"JMV_%\#$F*N5lWB%a7W5EXlqE@CU6UGA1JrTE5=F%BKeRM.<#Sd^OXDP-+1jKGU5t@;&RufL3u#C=?3:AC6Ts&M,Wg<?,GEkF)$Of9W8+N.(@d_JuK+u%Au$r@4XPp\nlqt*%5'<=C#Fj?Fk:P4VmH>J]m;]@aIH%a*O?84Hg]cu*M,3hCTjp:T3&Z%!em7<X6\>B5O^MVn[Xs%;n[lt*<:ta%MogC2]ak/!;$XhdX@-B:85E'p1ga$roc[+B<jW,+erHTkI<je6U:Li75@%;u?M4+_4fNENOZi5D?@kAG4?-knS7&1;Y.f3=r6m_;%[g5Fc5g8P_P19\FcsBP"k8L*a7n/^:3*@BlSQm;*VIJ;:p`K%sJecGEkn"R=^J2%1f1e:+#$goWFZ[5oSH&'(-%m&?o1e!UAVeb<%nQg_g/R8_TKaifQ)lH?,9*3*jF<K&^*p+MG4N6GTF<^:t-3@U-L.,sbH@IA`<+]qdY5,2-gj;>=^Crs!f,jO!.6mb(*J+]6264P9%`ur6`/I!R_/;(;9H!hK9]DEh-<14c-El^ETCT'sX]%786^^n&Z/2:#doCh+HVO&O]8lsNLW@9FVP!-PXYF;u:G"pN30&KN0RN>:?%Td3>mEgD'm),Sk1ZKBEY,Q*,HQ6$Z@?>LnDN"!9m0bYt@hl[2l(N7\DabcAtQA9tePp,urMuG`EaD]o8?#4o:>U$5@(A.l,2NM\k%p""9D>i$`o-2eu9GttO.N$D<J$53We=r00^C)9>D/IP!hK+eFuoA+TlT;g$,Q!aP`_dd0/WC.f]AICmJX-:f%1MflRXZK/t!)0b<%TKuclA>=X#rB%aIR<=Jp^):IuV19(If54bUA**3opApEs:rt=\BO3L'`5QCB[RQRcl<Y[(S'=%?8]u^WU4k?7[rZae)3#!K7A6r)%>q/NWWM[1XP6Lu0d,`p)N=<sEWRYp[Cts[4(pU8[1CQlL-?Q8^hAHjfcR!Xl5fMBR+=^Y36$%@Ob#TQ9LC]R3(=1E#U3*X_"kPQp%*Pp2d\"su>n;uibm-YGWio)5u/emX&.oG'-0G+(l_2[OE>SDc_g\&j[r1ldVkgR+4DMm:TSo^5JQNG(jE<!?e0t;sR1:,>F;VIl\%jEdV;d3G3])fmk.LK*fq*M52q6S^+g,qt;G^I8#4_.$l?jK!aVT"if(O8HO_O/^/of9OJf^9,U>p&LY0Kc@]dd>naQ6/cP/:o1nG%V^EphlR0ESoK2N7lnDaL0J?/tDT"$q,d"+1p2Z50'tR^05G[)%b;J+fSR,O/;iY04Bb4LLBdd)lL^"I*1)^7:#"k:m_\'PLZ%Ssi%r%1KtgDXK;qiQ/'7Cc*a5kKcW9]?gE8]OK4YdAkS`gUs`SW]>,\`n'(50?`?;KPR]i=>#<B(j<PYiPJWW3B6D1hJbrk$d'($UbAj%Qb#^'*6C"JDDQ)oeY!gWg9V!+Zh$!jEUleFdtD-8*K[+VR!oF!HU0?=<\]dg$;8%3VIZND(sMa$Eo6Z=.7eNjD9(c"/Ja7gI1[>(%([Gj,a]mpI+QE?F]`PtG[kGT`m@r<m0,DJ/m9>g#Gj]H"[Lt)]I@Sp&]8K(`r97q7Q"sW,JB@\SKKN8r2+.u94\m&INVQIR]Md9#%>UjaVGOLjkX`!\^?mgG<Sg/#;EoeY-fBIAr^Ptp04*rtlXTto4dutPJ'57m%%&D4S<HktDGKZTPUd.c:^%ot>cj!u]DNhZIY_<uX%[U_rJXA1%HQUIT5"cUuCJ[!f/lUAm!]U$-nc]t`)FSN@>e-J$!XmkRuo;)tT@0A!6PSR@TFfF]E,&9!&B+'e6mVB*hRhY:i$;Zp4%bg*C%j6Gf&#'l+%)=5$H`#s+)cjT*c6n6GX\#'OA"3"ISK4Lf#(5hDGA_kWUa9jD)O[n=%a``Y,[R11UXc(G@B9$<IZqJ:)=pqk5%ibS9e?Mf,lB;B!L<K%]G[K6%+^Ga;O*)>/W]X:)[FPKPZDh]f/FZj-m-b7\9<@6hp$1*;c&32?XKm1.un%+\EQg\50GGs8I%MYQu%fR,`c4bA>!@rW4O9uB/HCVd`4AoN'[/TbU3#Mhk12;7q<-0'e5a7nDZp#WV_<qtXg^=0MH)S3-1aaB=1$B;M0gZ9!*@fp=r/PpiI%SCCi-0!<77H<E(CChq%2plf5o,,hn*5S.."?G=9qJcK#a1TS+nqeA:M8LLqWTPA0H[]t?Lf4pF(jGb_1^h\dDT\Ve5>'FsREM7+G%\U`]%ht5sdQ\s4pr*a8p_$<[)f%Q:lbaP6+/CQ#Ki_^#%[^_]jSYt`Rd8"Y:N_*[m=,9TpUVq:/h*q=VXNgMDX?$ir*H$9_JZgDi%=U\iHU(o,dW9MH^DaGGOX@gg@,M5*2N#JMgd&EaBHp&$(K;RcDN@[hkcE:^XOBW@rF-:c0LDF(CIm</Gh1lt\#*cNOk)4eFK,u[L%%X_Yg:H:KniWR(pFJ(n3,<Q[\II^XZ.*Pu2+Et0#/96umS.LTjh6O[1WuE)qYj%JA`CL<$ogsT!/7bU9Ab6b(mIF#Z2-e^^[L#.R%0&N)q1L7WWCMB:k\0Fu&5\IRS_#1-1G&]+A$hdluHF)?od2*FPldK);Q2_C^464bQV0+%SZ5j2MY<%)diEpit$QVS-96T&aUDJS[%7f-TKiZogC)OEUSHbG9B@;B(>3gtVDWF,-UmFAgbp=L*":J=hU!8UBe$iBdp-1X)e.hk^OmCO,[B=O9QOuE;];TrQUA%'p"9gMFB%:\[mi'H'rdQ"BNPRm*\@I(6GX.]nr![m,G':l__Q_csfD^EO5KM;(f>Vdn<l2a1a21+be<=COt6s)o.rf7->RpGutG<>(pe*OHD!%k2.V#;I*)_9o?qOXmAjti*EtYRRtqI-;md\kUoH'*pr*5BGB+9,VsXXCidNm(8o/-h0ahjoAp<Z<H;cHb^LVejd9?mcAE\_h]jrF%M@0")-oR7A^CCLiOplCVOskuRb'Y0'fd4VGa-j@5I+i'(XF'^&rUAMlr6sOJ;0:XL>@"`PnOQpU.gU+cH3#2+RF#/[XZs5[-B`i#%51&n.:#=Ip.:k'dB>O&$gq6C5/4FKjW:sTO=s6[4kn\*Xf`K?MG0l=U__>*DFc47?`Vslk8OQY^YR4R2MZ*`W[F:g&mP)u3g.rM.%HArAOg*qV%V57#&86(3nen.*=W40h,\&![`DYXR<;V.\+#&eYhOAD!3G^UJO+_MCO9=Z7MlcB0;fqAOm^gTR8I2Y!dWdD(2Eg)c3%=P@oZWHL3fl[r+s<uhPAaJhmP7@1E6FV79l3`p9p\4.NG,#6c7Bj'iH8hjL/k:L<+(.Y-!oX:]-j(POfY>D&JDRifhRdKE4Kf(jU%+j!;[_UROIj7,mWSOpQ9QT(D9#uBjg=$>7W7+G?U.jY1dN9m:!GAF"2L).jq0o$^`c^+T5+b8R85XW`Eca^GPe^qAjEUgG](/C.i%;=MY1OoJ0(oDm"A@A"RnMFGe.f>16jeLYR>`/9'eM__m>S4!mMFQFZcjol6o%!5ORD3)GO:ljK4mSsbLJUNrcpOEq?g9fH,]&/b%%cOr7aNX\$OZT'`k&+=?R,)$#mQ<8a7NdB"dFg<:)=#o3W$'80tQRf^F+G`5U>5;^d:!bh(s/&nac%:;5S;>6lqjff,R8odNm-1Sg%*2b*71\L5GH&q4@Tuj;EK7mF5lK'[>k2/:(SP,HVGBIU4O#Z&Z.9S!@G2GT>Qr5+*Ek('"&`Od06WnHOH)?7A98oVm,O^>_p1m01%$q*5pID'g^'u@^Vk#][!,]W@Q3$j3k7(9[g8kS5K<^-gG"2oL_.2"L'-1UNJ7"6LIiQHQia[i!36W(YqW(UB3g:*'BA4:)G`5FP5%pt`hXG8CpY2AK6<IV(C_oN\oZ\:,^+WS8#9N,C?Z%KjPgVIY^W_cY_[GAP(s`gU=k/#6nVS;@9a_n)@jAV,UXAA.A=YlgLj!$OTu%\jHa>JQh3@*@A%#"<Z25N,0dj$_X@,Q]]QIX<s#@CJ`70=L1F@=G$TQoo74(*9-<jihbn]&Z;kMIQ&n<r=1`\=6hgeZ2.HY^.MXR%.n-r>##:c5q+@?PYXRd:V,!JHdW!rR,Xa]c6-0cN)/h+85TIHNfi'Zc?$P\sdp1'>laX`69ggLI;tr-ZVYr'9(X("'4^X&TLO5_`%-a9o4BIJ1kF]Mke.6<V-8bbgu-/)S+h7Ragm8>3M0C#LkUi_OW*UC*JY8o0;+3tPW<uOu@2)BG!ZW>3Jn`ao8XnU7=X"[#)i#h+U%6c\6`<GZ>Q[Nd:'N1)IIQY,Y[XQ%amAQ%)BN&V?=Pn1(3p7$K\fDN,(@l[YSg3,rTqO7h6(gEf]9ln\sGIb$dq/>Bf"K%($R\f>O%m/_=OGn[D2&8d&3C""/!,fA<:jbD5TkJI28+KVI2aG@u\[QU<OFiL:2+T_C*#tpSg'd+>'-_fmcQ%o#:O)?j%ZI05qaGW"V8n7Z8%nh*IZ^AQUnq!*2tE$]aC34OauHTn_fZnp:Go1*%R9:Y_QcKuD13'\U3T2V.W".)--&:?%X\8uK(]Wp7RW>Z/bVmh(Fog.R62Ur=>%XA_!afs\q(]1W_4V<i"Z];[1j,Dbe*&KIa;PuG6*b8a_F9bm-LG'ob9Aj(^70oVm-.#0S]96O7ta)=Ic=&u('YtAFnhrpZ(Ae)!j%>=m,d8W@`d[hBdkY,d`!,+luEcPX]jr%Q9L@bP]sr1L9r3L^%Q$nsOFUpYRT2QM\nrT2BRP#.3SYD^DJpG-4nA+LU7@SF#NE6;[k%.;WHOG</C@]4XtLJ%C(JZ@)dZLFGYg!SLhJ/n38H)*\SLATfi1QaNEe]N<[_:]IU0nNtjfb'Kn?9*XHS!C?/iU)DF%BkrR-9l"5g%<aE;uL=a1^/)A^a^f7L_!n79NO^(E`D&p#f&sM;+hB+@kqC\UQ^#'p/3KXHs2LdfrA8%j);%$5B&EL_@'Vt:P0\*/1>3,i3#;Z4_%8m>M[Y@VU+\t=0DF>j_?<Au6^@*Ucr<E0)sUr7?c=ilIXE-90^;EDQ$56911=t7)Wpac`<=%<']8uaDM]qY/F]5W;eY';K#n%,Z@%5Ups5l4iq@X3BF4bQXU62Pb5X)i'R)c-3:U6ZC70n7d&&jV']ZI!S&hYd4*SlhNUU^OkW)dkoP)^^NpDUA9*a?949>TFoceb[]o\%'PMbQ*J-Y5cc'7'T:u0Tn(S#fB'OOTd1na6?Ok%ZhRYU*XB#AojE@2F!8)IO#m)m?WPlQWFAM";+QKo136Oehj_W3BI6-5'dSF.E%nX6>`YCqAY&rQ?2%2KhlON2QLA=)]M*1R>oD7^qtr2$nB83J4G"isnY$X&'?COoKJpl$C[nl7m"8X5G3!HPeM5A,#Z1UcJP;r"0=%+@+kV^1a(F)%Wo6p7!%O"9lPh@):#$hrjPlWIY&V:Z%VfV[=\K++tU#ES"(c,BsHS[!gtFe<dRI-;%2o4X$!R&ghc@TIgat1.%c>%/I"KIFO,?oY&/)NqOD(,W?pZQ*Ms:'4n-Tm^U<>>ZtmFF!:buN'dB@j.LC(7%3a`Qa]+JMEj:8k:eIU,kGYC(0]ZbVYgRX?FFAmN%PTiuBoh8L&<@5oOP,>3W-$(YLk@>_&eEV%YhP(qd!UG&hW1mKe5VO=$R@qfQi0@n(9dUX2:,*:TRt\5sUgKsP.\(PP78'J\3#W+b%r*dD&rOC@FY]j9h[ND-AlZ(Xf((/*U*i8VP*]K!,8IUgN.@2UQ%'GCtFh#Dr+T7YVdDW<&:#a0leWIOPWoD1cXE=BHZCO%6/@3D:%h3:3u?l-Q]*t&)If)05S5>>hXAThKudMm?::!FdV1aaTI$WsQJ_J!Z+YhKtb_NmEg!`$:`5c\&YQ!XO!&TWsP1L2LnG$@-N6:')P%>6\:id6"-4IU&-^Pm/p/n@X%"Us,o,0ql(n-_@t/]<O3e)/(5bIVtJU03P`!MpDnZB7V(=+W!ZLXPe)Vl.BI/j9aK`S*\htWC"'S%@EIYObskO[fjN$G5mV`Va!?;4:^?QK>BI]Z]mC;S3Y3q3rnD<!F3"d73e2#:off<"P6l$e-FZ+NmZf2?hO=m,N]HmgEPH3nkY>qb%.@@CV[d/mYUE^\Bpi*RKNMO(Ir*)kBp9@0@./q71G4%fSU:'W,`(6So_:kc*7A?Ur;+m3Z_#;jpQ*6L&rmF&P*Wcq/09QQh<'L&f%T(^3*C_<;gMup"K]hG+J91WF'q(4DhZ:p?S@p::)Vo!Ci/_d_e/fLdjpd,jkC0ZWe-5b+oAl_K>&k=)U^$KFS(+DXL<SaJil!f2A%K$@j%ETiB/.um>X+[;"0pj@B0Q9m_[@_U-FgM[(`G"jogX@R#$B<8))\l!UQ&NgLWl;YfUT<SNK[[NRUHsm<X)UYt+GHpG*fLD=s%q&I&;/OCp5W$@F!%B>69<N0g#HJV\=dIN8KJV([l+/ASeQ6A*AV-7[PoEs?'S$#7rgcQUE:)7L]>N8LKX#F'&HT"Vg3*SC>3;WtL%^R*Sc\&]K=3NWH8W?;hJ*'`+FIT/bd^G$pK&LR0IZD42Z5I*f]9Q<g1r'i`@,Z?:=OQ2\X?H\,i@FeqbW-*Qi0/XO02Ou,%&K99>%?DAD_-Gg"c8s3onF4L)6n6\qS[!f[DEDb&VCM"<-mjqk[eLX\tWKOG+M?:-]\tOii0UXG"9lh5)lRTM9Cm`JF;cL4R2ABIU,^[$t%/oLs*8(6jHSW$b31*Vbu/roFt+M)1_MATbND#r@uqcIsB41>W_f[1dU8dSjTT*_Y$WMg*:_\3Mk;5*r]O'GahF/Q7c>A6J7Ap^LK%l3bjk#eQJX&AYIM$u1m108*?`?J=`1^*U0&KugAQc8n!dZhc;lflQ-oiZY##,o!=+S<ig%?#hFX:"Cq'p''s_N,dX7@W,,u=Rug]%Bc>XTVsBg+HT6/W-0jX/\ZCXf0=KA_c]e-0\AOZVjNSO<Yi%aTGN(O`MfFN<A`C4,$U'u?ZHhI2hQ^PU`Y?Ol">340)TO29b%hH+%<4Z3R!].ZPEQ*Z(a2E,/D)-qQ[,5=Qi3VgT1.mT9LL4;n?G,nR!(l,sH>]>0D0>XK@5Bu2Oe[)I*\dZ'79mgdp_fi+]eW"M[R;`\%q6Oe+[7+E>kr)464rhLaTe)"De`;E9\uj"8dUaUE_U^:aafB4nkE8<X4Uf6)$`q6B-jEA0M*0kA[=:4@T2$/W(q4/U&:dHKO[g9f%6kRJ^Q$Q0K%\"kAYQZ0k2K>%'+Z!/j*F^?tG]3kqgAhfQ1h`AnX7iEaO6GoZUdmu$&aAqe0Jk6nOF;*Z$3<&'_7d6=M#uWpUD9es%2!FlIiWBBj`.+"6JFJ;3G7qLkn((^(7I3?g4![Z!bNl&\KpK;A"o[*SNk?0VU!SJj@;+%)i?nps$J!<S_\R'YKLom2UgLC<MYg>!%NMELnBbG;!$O.?>!NJFM'Q=*V!!m<W`d%^c8=,;b:G;i1Y!8'HaVAn0Pc:\TT1guNY5Nb=?`Xkn*f'ujLEs&f7%QBY:"s_nYmiK:%aTeaO>:A%&;D>J$lJ\n]-3c0`f,8kM>tm>rhnb?Ei(u:G\luRYSTO;DEo$S3/dXH_Gd#XRDMWt7]frB/I4U.U2+5s9!cDeGaju-t%XX>3c:RdD6ai7=V@+siVRHF9fE0j9cV,&%!";UTK<gG&g7KiM(.psiXm&a!4YEfHE*+jLAE6fjR@s?`ReBK!^5M]jI+3h[Gq2usP%KVgDi`F19#2lq!+gt#b`(=kAgl7Z@^OClM:<?hC-Sb6SbW"('iqb6nBr%JPC*D]FSJ0d6FmS`JJQgut%AgQc$C$(1$1gBCKEAE0!%d/>70,Xh@&4Not[]c<g*)SoU4+C4'qI96.k%dEF5$)QG'2I(d^YN]BS0L8Wn"#d50,Q/]".i%B<DBr&1OO6VijN[c3g_QD/hd8%)%%keGcM]rYZE/\q0-m>@plM#a",-p_1).5Nm"RhkoRN3(#8`l.h6:?>!+=5=J3peT&qcBX59<8&2q1-gK'#`]qSRY]WEOdZ?m$Y.I%!pc*?Y[uFu5?]Qj=-^[pkm5:E4o*U[ROP:X*\4[:mO$V+:$&TLU^s_JDKj`CEA)LGj?'j/P7LEUM!>[E0=jQ97*3QQj.cJBB48E*%4@0B`:)))Ddc5aLnlLn+'ap;%`5a?E.s-D@CT<]&,+m@gPbbV<!,I#biMGi2g;e:O$88f6MbBJBg&4_?*0`U.Z4G;L>!=K;i7D>a%JnZk]/WgWR$6NNSPYL"tON$YYOI.7$=!WHNq43^D/7L/g1D291!#[Sq!RDpF@J*G^QI8Q4AueR&WB?kX(pdaV1S!bRd_WMGGS87r%X(l@a.<obc,5?=J[FUce>8$;3Q$[M/\#Zm'=4)WeIM8/a71<0iq!cr+QefJ.5@Y>$Nu$Tq-0h<WUq;p"P3^[eg+%#&GBp:4RMiDf%D>!0@-(fXRqD'+O5%3%h3T#X="Q/o`iu!kKA])MfRF!m7r,>aQh[BC<>CgLuls(jmbf!&1dj[b?O`',f#1^@b`V2i*J31pL(&kGB%h'oI*pKEBg2O>9lS\fTKa&n%[Rr/r4W*bpZ.>fWDc?DcR\m5g9aDE<b]jUsBTZAVE1OqJdD%BK:>DJCVddVT<r1?a6X*VG)4#@K^%$4)gKG)ag]P&`^&e4n:)A?Q(o0sh5&;%7!E(,ia#je*,c!3jm6][RY)QaTjT$s^*+nc7b4S,lLi_,jAf7\5:_;[Sh.Z&n2=cqg^A%h)=r=\T_Ytc]Zl26-hA@;p7o=<&tufnaa(P]K-mJ&nT:&mI]9EZ$H2tp]'@22uiCErm1W>diZ=(iST._jo,(#hgG#[Ie_ras7;R!%rqE%6r8l`Vs74'7Ish%MVk<bH+9-`ecbgiSq=--<qXZ@)55aMLIf;Q6Y)f);s5of#r9s[Qh>[XZ86bi~>%AI9_PrivateDataEnd